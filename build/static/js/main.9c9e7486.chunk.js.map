{"version":3,"sources":["styles/mixins/_icon.scss","components/common/Icon/icon.scss","apollo/initApolloClient.js","store/auth.js","constants/actions.js","store/message.js","store/store.js","graphql/Post/index.js","graphql/User/index.js","graphql/Message/index.js","graphql/Notification/index.js","utils/svgstore-path.js","components/common/Icon/index.js","utils/class-names.js","components/common/Layout.js","components/common/Form.js","utils/theme.js","constants/message.js","components/Message.js","components/common/Loading.js","components/common/Text.js","components/common/UserImage.js","components/app/Search/SearchInput.js","routes/index.js","components/app/Search/SearchResult.js","components/hooks/useClickOutside.js","components/app/Search/Search.js","components/hooks/useDebounce.js","components/app/LogOut.js","components/app/Header/HeaderUserDropDown.js","components/app/Notification.js","components/app/Header/HeaderNotificationDropDown.js","utils/time.js","components/app/Header/HeaderMessageDropDown.js","components/app/Header/HeaderDropDowns.js","components/app/Header/Header.js","constants/size.js","components/app/Navigation.js","components/app/SideBar.js","graphql/Comment/index.js","constants/notification.js","components/hooks/useNotification.js","components/PostComment.js","components/common/Head.js","graphql/Follow/index.js","components/common/Follow.js","constants/dataLimit.js","components/post/PostInfoOverlay.js","components/Comment.js","components/post/PostCommentsOverlay.js","components/post/PostOverlay.js","components/common/Confirm.js","components/common/Modal.js","graphql/Like/index.js","components/UpVote.js","components/postcard/PostCardOption.js","components/postcard/PostCard.js","components/common/InfiniteScroll.js","components/common/Skeleton.js","components/hooks/useGlobalMessage.js","components/CreatePost.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/ProfileInfo.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Posts/Posts.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Search/SearchCard.js","pages/Search/Search.js","layouts/ApplicationLayout.js","components/hooks/useWindowSize.js","pages/Auth/SignIn.js","pages/Auth/Header.js","constants/regex.js","pages/Auth/SignUp.js","pages/Auth/ForgetPassword.js","pages/Auth/ResetPassword.js","static/images/auth-bg.jpg","layouts/AuthenticationLayout.js","components/app/App.js","index.js"],"names":["module","exports","apolloCLient","createAuthenticationLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","createApolloClient","apolloConfig","authLink","uploadLink","wsLink","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","console","log","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","split","query","getMainDefinition","kind","config","link","from","ApolloClient","initialState","user","authReducer","state","action","type","payload","messageInitialState","content","text","autoClose","messageReducer","AppStoreContext","React","createContext","store","message","auth","reducers","AppStoreProvider","children","Provider","value","useReducer","useStore","useContext","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","GET_FOLLOWED_POSTS","GET_POSTS","GET_POST","DELETE_POST","userPayload","GET_USER","GET_USER_POSTS","GET_AUTH_USER","GET_USERS","SEARCH_USERS","UPLOAD_PHOTO","SIGN_UP","SIGN_IN","REQUEST_PASSWORD_RESET","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","GET_CONVERSATIONS","IS_USER_ONLINE_SUBSCRIPTION","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED","SVGSTORE_PATH","allowedSizes","Object","keys","iconSizes","filter","size","startsWith","map","replace","Icon","className","icon","style","fillcolor","includes","iconClassName","args","reduce","acc","arg","processedClass","prop","length","join","classNames","displayName","name","fill","xmlns","xmlnsXlink","focusable","xlinkHref","defaultProps","Container","styled","div","p","maxWidth","theme","screen","marginTop","spacing","padding","sm","zIndex","color","colors","radius","Content","md","xs","lg","Spacing","top","right","bottom","left","inline","hideOnSm","Overlay","transparency","Button","button","white","font","primary","main","weight","normal","disabled","grey","get","secondary","ghost","fullWidth","SecondaryButton","mainhover","InputText","input","borderColor","border","Textarea","textarea","form","family","light","bold","tiny","xxs","xl","black","success","body","dark","contrastText","hint","warning","info","50","100","200","300","400","500","600","700","800","900","shadows","none","MessageType","SUCCESS","INFO","WARNING","ERROR","fade","keyframes","Root","Close","Message","dispatch","useEffect","timer","setTimeout","clearTimeout","Colors","onClick","Load","Round","Loading","LoadingDots","Anchor","Link","Error","getHeadingStyles","css","H1","h1","H3","h2","h3","h4","Image","img","UserImage","image","src","IconContainer","Input","hideIcon","backgroundColor","SearchInput","onChange","onFocus","inputRef","placeholder","autoFocus","ref","MESSAGES","POST","StyledA","Item","Name","UserName","NoSearchResult","SearchResult","users","forMessage","key","id","to","generatePath","Routes","userId","username","fullName","useClickOutside","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","StyledLoading","Search","location","others","client","useApolloClient","useState","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","loading","setLoading","useRef","debounceSearchQuery","delay","debouncedValue","setDebouncedValue","useDebounce","pathname","a","variables","data","searchUsers","search","handleInputChange","e","withRouter","withApollo","history","removeItem","resetStore","push","CSS","HeaderUserDropDown","userRef","NotificationItem","LeftSide","Action","PostImage","notification","close","mutate","mutation","refetchQueries","updateNotificationSeen","newNotifications","follow","like","comment","author","post","Empty","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","timeAgo","timestamp","date","Date","parseInt","seconds","Math","floor","interval","Heading","User","NavLink","Info","FullName","LastMessage","CreatedAt","HeaderMessageDropDown","messageRef","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","USER","NOTIFICATION","MESSAGE","Wrapper","Hamburger","Logo","RightSide","countCSS","NotificationCount","span","MessageCount","toggleSideBar","newConversations","userImage","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","process","List","ul","ListItem","li","Navigation","exact","activeClassName","width","HEADER_HEIGHT","isOpen","active","sideBarRef","isAuthUsersProfilePage","substring","CREATE_COMMENT","DELETE_COMMENT","NotificationType","useNotifications","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","toLowerCase","isNotified","notifications","find","n","options","delete","Form","focus","setComment","buttonEl","TextareaEl","handleSubmit","createComment","preventDefault","onEnterPress","keyCode","click","authUserId","onSubmit","onKeyDown","Head","title","Helmet","CREATE_FOLLOW","DELETE_FOLLOW","isFollowing","Follow","following","f","handleClickFollow","createFollow","followerId","skip","limit","Author","PostInfoOverlay","DeleteButton","CommentSection","Comment","postAuthor","handleDeleteComment","deleteComment","Comments","usedInModal","PostCommentsOverlay","comments","Left","Right","CloseOverlay","Title","PostOverlay","closeModal","getPost","postLikes","likes","ButtonGroup","Confirm","onCancel","onOk","cancelText","okText","Modal","open","onClose","otherProps","CREATE_LIKE","DELETE_LIKE","StyledButton","UpVote","withText","hasLiked","l","handleButtonClick","createLike","FollowItem","PostCardOption","closeOption","deletePost","navigator","clipboard","writeText","TopRow","Poster","BottomRow","CountAndIcons","Count","Icons","CommentLine","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","updateQuery","prev","fetchMoreResult","previousData","fetchMoreData","set","uniqBy","windowHeight","window","innerHeight","scrollTop","documentElement","offsetHeight","scrolled","propTypes","PropTypes","array","isRequired","string","number","func","object","height","Skeleton","skeleton","i","loopSkeleton","useGlobalMessage","dispatchAction","messageType","ImagePreviewContainer","ImagePreview","Options","Buttons","CreatePost","setTitle","setImage","isFocused","setIsFocused","setError","handleReset","handleOnFocus","handleTitleChange","createPost","apiError","isShareDisabled","URL","createObjectURL","Home","modalPostId","setModalPostId","pushState","notifyOnNetworkStatusChange","networkStatus","getFollowedPosts","posts","showNextLoading","Label","label","authUser","handleImageChange","file","files","MAX_USER_PROFILE_IMAGE_SIZE","accept","htmlFor","alt","ProfileImage","FollowAndMessage","Online","ProfileInfo","useSubscription","isUserOnline","isOnline","followers","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","getUserPosts","match","params","getUser","HeadingContainer","NewMessage","SearchContainer","UserContainer","seen","FullNameUnSeen","UnSeen","useQuery","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","unseen","lastMessageSender","Conversation","MessageDate","userMessage","MessageWrapper","StyledTextarea","SendButton","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","useMutation","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","isAuthUserReceiver","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","currentDate","shiftKey","InputContainer","To","MessagesChat","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","Messages","ImageContainer","InitialLetters","PeopleCard","setColor","randomColor","random","slice","charAt","PeopleContainer","People","getUsers","Notifications","getUserNotifications","Photo","ExploreCard","openPostPopup","countLikes","countComments","imageLoaded","setImageLoaded","onload","backgroundImage","PostsContainer","Explore","getPosts","SearchCard","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","path","component","Profile","Post","ErrorMessage","ForgetPassword","refetch","emailOrUsername","password","values","setValues","handleChange","signin","setItem","errorMessage","renderErrors","StyledContainer","SignInContainer","Header","emailRegex","usernameRegex","email","signup","test","String","Text","setEmail","setMessage","handleEmailChange","requestResetPassword","requestPasswordReset","confirmPassword","url","URLSearchParams","resetPassword","err","bgImage","Pages","AuthenticationLayout","render","App","oldNotifications","getAuthUser","notificationCreatedOrDeleted","href","index","findIndex","splice","mergeConversations","SERVER_URL","dotenv","serverUrl","serverWebSoketUrl","createUploadLink","uri","WebSocketLink","timeout","reconnect","connectionParams","initApolloClient","getElementById"],"mappings":"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","file":"static/js/main.9c9e7486.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"#fff\",\"light\":\"#aeb6be\",\"lighter\":\"#ece6f3\",\"dark\":\"#676869\",\"darker\":\"#22263f\",\"blue\":\"#2878c4\",\"blue-light\":\"#3b98e2\",\"icon-smlst\":\"12px\",\"icon-sm\":\"16px\",\"icon-md\":\"24px\",\"icon-md-plus\":\"26px\",\"icon-lg\":\"32px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"#fff\",\"light\":\"#aeb6be\",\"lighter\":\"#ece6f3\",\"dark\":\"#676869\",\"darker\":\"#22263f\",\"blue\":\"#2878c4\",\"blue-light\":\"#3b98e2\",\"icon-smlst\":\"12px\",\"icon-sm\":\"16px\",\"icon-md\":\"24px\",\"icon-md-plus\":\"26px\",\"icon-lg\":\"32px\"};","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloLink, Observable, split } from \"apollo-link\";\nimport { onError } from \"apollo-link-error\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nlet apolloCLient = null;\n\nconst createDefaultCache = () => new InMemoryCache();\n\nconst createAuthenticationLink = () => {\n  const request = (operation) => {\n    const token = localStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    });\n  };\n\n  return new ApolloLink(\n    (operation, forward) =>\n      new Observable((observer) => {\n        let handle;\n        Promise.resolve(operation)\n          .then((oper) => request(oper))\n          .then(() => {\n            handle = forward(operation).subscribe({\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer),\n            });\n          })\n          .catch(observer.error.bind(observer));\n\n        return () => {\n          if (handle) handle.unsubscribe();\n        };\n      })\n  );\n};\n\n/**\n * Helper functions that handles error cases\n */\nconst handleErrors = () => {\n  return onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      console.log(\"graphQLErrors\", graphQLErrors);\n    }\n    if (networkError) {\n      console.log(\"networkError\", networkError);\n    }\n  });\n};\n\nconst createApolloClient = (apolloConfig) => {\n  const { authLink, uploadLink, wsLink } = apolloConfig;\n  const cache = createDefaultCache();\n  const errorLink = handleErrors();\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\n  const terminatingLink = split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === \"OperationDefinition\" && operation === \"subscription\";\n    },\n    wsLink,\n    uploadLink\n  );\n\n  const config = {\n    cache,\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\n  };\n\n  return new ApolloClient(config);\n};\n\nexport default (serverUrl) => {\n  const serverWebSoketUrl =\n    serverUrl &&\n    serverUrl.replace(\"https://\", \"ws://\").replace(\"http://\", \"ws://\");\n  const authLink = createAuthenticationLink();\n  const uploadLink = createUploadLink({ uri: serverUrl });\n\n  const token = localStorage.getItem(\"token\") || \"\";\n  const wsLink = new WebSocketLink({\n    uri: serverWebSoketUrl,\n    options: {\n      timeout: process.env.REACT_APP_WEBSOCKET_TIMEOUT,\n      reconnect: true,\n      connectionParams: {\n        authorization: token,\n      },\n    },\n  });\n\n  const apolloConfig = {\n    authLink,\n    uploadLink,\n    wsLink,\n  };\n\n  if (!apolloCLient) {\n    apolloCLient = createApolloClient(apolloConfig);\n  }\n  return apolloCLient;\n};\n","import { SET_AUTH_USER, CLEAR_AUTH_USER } from \"../constants/actions\";\n\nexport const initialState = {\n  user: null,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case CLEAR_AUTH_USER: {\n      return {\n        ...state,\n        ...initialState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","//Actions\n\nexport const SET_AUTH_USER = \"SET_AUTH_USER\";\nexport const CLEAR_AUTH_USER = \"CLEAR_AUTH_USER\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../constants/actions\";\n/**\n * Initial State\n */\nexport const messageInitialState = {\n  content: {\n    type: \"\",\n    text: \"\",\n    autoClose: true\n  }\n};\n\n/**\n * Message Reducer\n */\nexport const messageReducer = (state = messageInitialState, action) => {\n  switch (action.type) {\n    case SET_MESSAGE:\n      return {\n        ...state,\n        content: {\n          type: action.payload.type,\n          text: action.payload.text,\n          autoClose: action.payload.autoClose\n        }\n      };\n    case CLEAR_MESSAGE: {\n      return {\n        ...state,\n        ...messageInitialState\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useContext } from \"react\";\nimport { initialState, authReducer } from \"./auth\";\nimport { messageReducer, messageInitialState } from \"./message\";\n\nconst AppStoreContext = React.createContext();\n\nconst store = {\n  message: messageInitialState,\n  auth: initialState,\n};\n\nconst reducers = (store, action) => ({\n  message: messageReducer(store.message, action),\n  auth: authReducer(store.auth, action),\n});\n\nexport const AppStoreProvider = ({ children }) => (\n  <AppStoreContext.Provider value={useReducer(reducers, store)}>\n    {children}\n  </AppStoreContext.Provider>\n);\n\nexport const useStore = () => useContext(AppStoreContext);\n","import gql from \"graphql-tag\";\n\n/**\n * Records to select from post comments\n */\nexport const postCommentsPayload = `\n  comments {\n    id\n    comment\n    author {\n      id\n      username\n      fullName\n      image\n    }\n  }\n`;\n\n/**\n * Records to select from post author\n */\nexport const postAuthorPayload = `\n  author {\n    id\n    username\n    fullName\n    image\n    following {\n      id\n      user\n    }\n    followers {\n      id\n      user\n    }\n    notifications {\n      id\n      author {\n        id\n        username\n      }\n      follow {\n        id\n      }\n      like {\n        id\n      }\n      comment {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Records to select from post likes\n */\nexport const postLikesPayload = `\n  likes {\n    id\n    user\n    post\n  }\n`;\n\n/**\n * Creates a post\n */\nexport const CREATE_POST = gql`\n  mutation($input: CreatePostInput!) {\n    createPost(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets all posts from followed users\n */\nexport const GET_FOLLOWED_POSTS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available posts\n */\nexport const GET_POSTS = gql`\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets specific post by id\n */\nexport const GET_POST = gql`\n  query($id: ID!) {\n    getPost(id: $id) {\n      id\n      title\n      image\n      createdAt\n      ${postAuthorPayload}\n      ${postCommentsPayload}\n      ${postLikesPayload}\n    }\n  }\n`;\n\n/**\n * Deletes a post\n */\nexport const DELETE_POST = gql`\n  mutation($input: DeletePostInput!) {\n    deletePost(input: $input) {\n      id\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\nimport {\n  postCommentsPayload,\n  postAuthorPayload,\n  postLikesPayload,\n} from \"../Post/index\";\n\n/**\n * Records to select from user\n */\nconst userPayload = `\n  id\n  username\n  email\n  fullName\n  image\n  imagePublicId\n  coverImage\n  coverImagePublicId\n  createdAt\n`;\n\n/**\n * Gets specific user by username\n */\nexport const GET_USER = gql`\n  query($username: String, $id: ID) {\n    getUser(username: $username, id: $id) {\n      ${userPayload}\n      isOnline\n      posts {\n        id\n      }\n      following {\n        id\n      }\n      followers {\n        id\n      }\n      notifications {\n        id\n        author {\n          id\n          username\n        }\n        follow {\n          id\n        }\n        like {\n          id\n        }\n        comment {\n          id\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Gets user posts\n */\nexport const GET_USER_POSTS = gql`\n  query($username: String!, $skip: Int, $limit: Int) {\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets authenticated user\n */\nexport const GET_AUTH_USER = gql`\n  query {\n    getAuthUser {\n      ${userPayload}\n      newNotifications {\n        id\n        createdAt\n        author {\n          id\n          fullName\n          username\n          image\n        }\n        follow {\n          id\n        }\n        comment {\n          id\n          post {\n            id\n            image\n          }\n        }\n        like {\n          id\n          post {\n            id\n            image\n          }\n        }\n      }\n      newConversations {\n        id\n        username\n        fullName\n        image\n        lastMessage\n        lastMessageCreatedAt\n      }\n      likes {\n        id\n        user\n        post\n      }\n      posts {\n        id\n      }\n      following {\n        id\n        user\n      }\n      followers {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available users\n */\nexport const GET_USERS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      users {\n        id\n        fullName\n        username\n        image\n        following {\n          id\n          user\n        }\n        followers {\n          id\n        }\n        notifications {\n          id\n          author {\n            id\n            username\n          }\n          follow {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Searches users by username or fullName\n */\nexport const SEARCH_USERS = gql`\n  query($searchQuery: String!) {\n    searchUsers(searchQuery: $searchQuery) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Uploads user photo\n */\nexport const UPLOAD_PHOTO = gql`\n  mutation($input: UploadUserPhotoInput!) {\n    uploadUserPhoto(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Sign up user\n */\nexport const SIGN_UP = gql`\n  mutation($input: SignUpInput!) {\n    signup(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Sign in user\n */\nexport const SIGN_IN = gql`\n  mutation($input: SignInInput!) {\n    signin(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Request reset password\n */\nexport const REQUEST_PASSWORD_RESET = gql`\n  mutation($input: RequestPasswordResetInput!) {\n    requestPasswordReset(input: $input) {\n      message\n    }\n  }\n`;\n\n/**\n * Verify reset password token\n */\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\n  query($email: String!, $token: String!) {\n    verifyResetPasswordToken(email: $email, token: $token) {\n      message\n    }\n  }\n`;\n\n/**\n * Reset password\n */\nexport const RESET_PASSWORD = gql`\n  mutation($input: ResetPasswordInput!) {\n    resetPassword(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * People suggestions for auth user\n */\nexport const USER_SUGGESTIONS = gql`\n  query($userId: String!) {\n    suggestPeople(userId: $userId) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Get users with whom authUser had a conversation\n */\nexport const GET_CONVERSATIONS = gql`\n  query($authUserId: ID!) {\n    getConversations(authUserId: $authUserId) {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Checks if user is online in real time\n */\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\n      userId\n      isOnline\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\n/**\n * Gets user's specific conversation\n */\nexport const GET_MESSAGES = gql`\n  query($authUserId: ID!, $userId: ID!) {\n    getMessages(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Gets user's specific conversation in real time\n */\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    messageCreated(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Creates a message\n */\nexport const CREATE_MESSAGE = gql`\n  mutation($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      isFirstMessage\n    }\n  }\n`;\n\n/**\n * Get user's new conversation in real time\n */\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\n  subscription {\n    newConversation {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Updates message seen property\n */\nexport const UPDATE_MESSAGE_SEEN = gql`\n  mutation($input: UpdateMessageSeenInput!) {\n    updateMessageSeen(input: $input)\n  }\n`;\n","import gql from \"graphql-tag\";\n\n/**\n * Records to select from notifications\n */\nconst notificationPayload = `\n  id\n  createdAt\n  author {\n    id\n    fullName\n    username\n    image\n  }\n  follow {\n    id\n  }\n  comment {\n    id\n    post {\n      id\n      image\n    }\n  }\n  like {\n    id\n    post {\n      id\n      image\n    }\n  }\n`;\n\n/**\n * Creates a notification for user\n */\nexport const CREATE_NOTIFICATION = gql`\n  mutation($input: CreateNotificationInput!) {\n    createNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a notification\n */\nexport const DELETE_NOTIFICATION = gql`\n  mutation($input: DeleteNotificationInput!) {\n    deleteNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets notifications for user\n */\nexport const GET_USER_NOTIFICATION = gql`\n  query($userId: ID!, $skip: Int, $limit: Int) {\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      notifications {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Updates notification seen property\n */\nexport const UPDATE_NOTIFICATION_SEEN = gql`\n  mutation($input: UpdateNotificationSeenInput!) {\n    updateNotificationSeen(input: $input)\n  }\n`;\n\n/**\n * Get user's notifications in real time\n */\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\n  subscription {\n    notificationCreatedOrDeleted {\n      operation\n      notification {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n","const SVGSTORE_FILENAME = \"solid.svg\";\nconst SVGSTORE_PATH = `/static/fonts/icons/${SVGSTORE_FILENAME}`;\nexport default SVGSTORE_PATH;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//import \"svgxuse\";\nimport classNames from \"../../../utils/class-names\";\nimport SVGSTORE_PATH from \"../../../utils/svgstore-path\";\nimport iconSizes from \"../../../styles/mixins/_icon.scss\";\nimport \"./icon.scss\";\n\nconst DEFAULT_ICON_SIZE = \"sm\";\nconst iconPrefix = \"icon-\";\nconst DEFAULT_FILL = \"#676869\";\n\nconst allowedSizes = Object.keys(iconSizes)\n  .filter((size) => size.startsWith(iconPrefix))\n  .map((size) => size.replace(iconPrefix, \"\"));\n\nexport const Icon = ({ className, icon, style, size, fillcolor }) => {\n  if (!allowedSizes.includes(size)) {\n    size = DEFAULT_ICON_SIZE;\n  }\n\n  const iconClassName = classNames(Icon.displayName, className, {\n    [`${Icon.displayName}--size-${size}`]: allowedSizes.includes(size),\n  });\n\n  return (\n    <svg\n      className={`${iconClassName}`}\n      name={`icon-${icon}`}\n      fill={fillcolor || DEFAULT_FILL}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      focusable={false}\n      style={style}\n    >\n      <use xlinkHref={`${SVGSTORE_PATH}#${icon}`} />\n    </svg>\n  );\n};\n\nIcon.displayName = \"Icon\";\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  style: PropTypes.object,\n  size: PropTypes.oneOf(allowedSizes),\n  fillcolor: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  className: \"\",\n  style: {},\n  size: \"sm\",\n  fillcolor: \"\",\n};\n","export default (...args) =>\n  args\n    .reduce((acc, arg) => {\n      if (!arg) {\n        return acc;\n      }\n\n      if (typeof arg === \"object\") {\n        const processedClass = Object.keys(arg).filter(prop =>\n          typeof arg[prop] == \"function\" ? arg[prop]() : arg[prop]\n        );\n        return processedClass.length > 0 ? [...acc, ...processedClass] : acc;\n      }\n      return [...acc, arg];\n    }, [])\n    .join(\" \");\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${(p) => p.maxWidth && p.theme.screen[p.maxWidth]};\n  margin-top: ${(p) => (p.marginTop ? p.theme.spacing[p.marginTop] : 0)};\n  padding: ${(p) =>\n    p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\n  background-color: ${(p) => p.color && p.theme.colors[p.color]};\n  border-radius: ${(p) => p.radius && p.theme.radius[p.radius]};\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\n  min-height: 500px;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.xs};\n  }\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    width: ${(p) => p.theme.screen.sm};\n  }\n`;\n\nexport const Spacing = styled.div`\n  ${(p) => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\n  ${(p) => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\n  ${(p) => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\n  ${(p) => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\n  ${(p) => p.inline && `display: inline-block;`}\n  @media (max-width: ${(p) => p.theme.screen.sm}) {\n    ${(p) =>\n      p.hideOnSm &&\n      `\n      display: none;\n    `}\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  z-index: ${(p) => p.theme.zIndex.md};\n  background-color: rgba(\n    0,\n    0,\n    0,\n    ${(p) => (p.transparency ? p.transparency : \"0.8\")}\n  );\n`;\n","import styled from \"styled-components\";\nimport { get } from \"lodash\";\n\n// prettier-ignore\n\n/**\n * Button\n *\n * @param {string} size\n * @param {string} color\n * @param {boolean} disabled\n * @param {boolean} text, style button as a text\n */\nexport const Button = styled.button`\n  letter-spacing: 0.5px;\n  outline: 0;\n  transition: opacity 0.1s;\n  border: 0;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n  border-radius: ${p => p.theme.radius.sm};\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.primary.main};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\n  white-space: nowrap;\n  align-self: flex-start;\n  ${p => p.disabled && `\n    background-color: ${p.theme.colors.grey[500]};\n    cursor: not-allowed;\n  `};\n  ${p => !p.disabled && `\n    &:hover {\n      opacity .9;\n      cursor: pointer;\n    }\n  `};\n  ${p => p.text && `\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n  `};\n   ${p => p.ghost && `\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n    padding: 0;\n    text-align: left;\n  `};\n  ${p => p.fullWidth && `\n    width: 100%;\n  `}\n`;\n\nexport const SecondaryButton = styled.button`\n  letter-spacing: 0.5px;\n  outline: 0;\n  transition: opacity 0.1s;\n  border: 0;\n  color: ${(p) => p.theme.colors.white};\n  font-size: ${(p) =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\n  background-color: ${(p) =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.secondary.main};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-weight: ${(p) =>\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\n  white-space: nowrap;\n  align-self: flex-start;\n  ${(p) =>\n    p.disabled &&\n    `\n    background-color: ${p.theme.colors.grey[500]};\n    cursor: not-allowed;\n  `};\n  ${(p) =>\n    !p.disabled &&\n    `\n    &:hover {\n      opacity .9;\n      cursor: pointer;\n      background-color: ${(p) =>\n        p.color ? p.theme.colors[p.color] : p.theme.colors.secondary.mainhover};\n    }\n  `};\n  ${(p) =>\n    p.text &&\n    `\n    color: ${\n      p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary\n    };\n    border-radius: 0;\n    background-color: transparent;\n  `};\n  ${(p) =>\n    p.ghost &&\n    `\n    color: ${\n      p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary\n    };\n    border-radius: 0;\n    background-color: transparent;\n    padding: 0;\n    text-align: left;\n  `};\n  ${(p) =>\n    p.fullWidth &&\n    `\n    width: 100%;\n  `}\n`;\n\n/**\n * Input type text\n */\nexport const InputText = styled.input`\n  outline: 0;\n  height: 36px;\n  width: 100%;\n  transition: border 0.1s;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding-left: ${(p) => p.theme.spacing.xs};\n  border: 1px solid\n    ${(p) =>\n      p.borderColor\n        ? p.theme.colors[p.borderColor]\n        : p.theme.colors.border.main};\n  color: ${(p) => p.theme.colors.text.secondary};\n  &:focus {\n    border-color: ${(p) => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Textarea\n */\nexport const Textarea = styled.textarea`\n  outline: 0;\n  height: 50px;\n  width: 100%;\n  resize: none;\n  border: 0;\n  padding-left: ${(p) => p.theme.spacing.sm};\n  padding-top: ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.text.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n  &::placeholder {\n    color: ${(p) => p.theme.colors.text.secondary};\n  }\n`;\n\n/**\n * Form component\n */\nexport const Form = styled.form`\n  display: block;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding: ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.sm};\n  background-color: ${(p) => p.theme.colors.white};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n","/**\n * Theme\n */\n\nexport default {\n  /**\n   * Font\n   */\n  font: {\n    family: \"Arial, Helvetica, sans-serif\",\n    weight: {\n      light: \"300\",\n      normal: \"400\",\n      bold: \"600\",\n    },\n    size: {\n      tiny: \"11px\",\n      xxs: \"13px\",\n      xs: \"14px\",\n      sm: \"16px\",\n      md: \"18px\",\n      lg: \"20px\",\n      xl: \"34px\",\n    },\n  },\n\n  /**\n   * Colors\n   */\n  colors: {\n    black: \"#000000\",\n    white: \"#fff\",\n    success: \"#34a853\",\n    body: \"#fcfbfe\",\n\n    primary: {\n      light: \"#7986cb\",\n      main: \"#2178c4\",\n      dark: \"#303f9f\",\n      contrastText: \"#fff\",\n    },\n\n    secondary: {\n      light: \"#ff4081\",\n      main: \"#90EE90\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\",\n      mainhover: \"#3CB37\",\n    },\n\n    text: {\n      primary: \"#22263f\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint: \"rgba(0, 0, 0, 0.38)\",\n    },\n\n    border: {\n      light: \"#f5f5f5\",\n      main: \"#e0e0e0\",\n      dark: \"#bdbdbd\",\n    },\n\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"#fff\",\n    },\n\n    warning: \"#FFB818\",\n\n    info: \"#4169E1\",\n\n    grey: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#eeeeee\",\n      300: \"#e0e0e0\",\n      400: \"#bdbdbd\",\n      500: \"#9e9e9e\",\n      600: \"#757575\",\n      700: \"#616161\",\n      800: \"#424242\",\n      900: \"#212121\",\n    },\n  },\n\n  /**\n   * Shadows\n   */\n  shadows: {\n    sm: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\n    md: \"rgba(0, 0, 0, 0.3) 0px 1px 8px 0px\",\n    lg: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\n    xl: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  },\n\n  /**\n   * Breakpoints\n   */\n  screen: {\n    xs: \"540px\",\n    sm: \"640px\",\n    md: \"1007px\",\n    lg: \"1100px\",\n    xl: \"1230px\",\n  },\n\n  /**\n   * Spacing\n   */\n  spacing: {\n    none: 0,\n    xxs: \"5px\",\n    xs: \"10px\",\n    sm: \"20px\",\n    md: \"30px\",\n    lg: \"40px\",\n    xl: \"60px\",\n  },\n\n  /**\n   * Radius\n   */\n  radius: {\n    sm: \"3px\",\n    md: \"6px\",\n    lg: \"12px\",\n  },\n\n  /**\n   * zIndex\n   */\n  zIndex: {\n    xs: 10,\n    sm: 20,\n    md: 30,\n    lg: 40,\n    xl: 50,\n  },\n};\n","export const MessageType = {\n  SUCCESS: \"SUCCESS\",\n  INFO: \"INFO\",\n  WARNING: \"WARNING\",\n  ERROR: \"ERROR\"\n};\n\nexport const allMessageTypes = Object.keys(MessageType);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { Icon } from \"./common/Icon\";\nimport { Spacing } from \"./common/Layout\";\nimport { Button } from \"./common/Form\";\n\nimport theme from \"../utils/theme\";\n\nimport { allMessageTypes } from \"../constants/message\";\n\nimport { useStore } from \"../store\";\nimport { CLEAR_MESSAGE } from \"../constants/actions\";\n\nconst fade = keyframes`\n  from {\n    bottom: -60px;\n    opacity: 0;\n  }\n  to {\n    bottom: 0;\n    opacity: 1;\n  }\n`;\n\n/**\n * Default styles for message\n */\nconst Root = styled.div`\n  position: fixed;\n  width: 100%;\n  box-shadow: ${(p) => p.theme.shadows.md};\n  padding: ${(p) => p.theme.spacing.sm};\n  z-index: ${(p) => p.theme.zIndex.xl};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(p) => p.color && p.color};\n  animation: ${fade} 0.3s ease-out forwards;\n  color: ${(p) => p.theme.colors.white};\n`;\n\nconst Close = styled(Button)`\n  position: absolute;\n  right: 20px;\n  top: 24px;\n`;\n\n/**\n * Displays global message as feedback in response to user operations\n */\nconst Message = ({ children, type, autoClose }) => {\n  const [, dispatch] = useStore();\n\n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        dispatch({ type: CLEAR_MESSAGE });\n      }, 5000);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [dispatch, autoClose]);\n\n  const { success, info, warning, error } = theme.colors;\n\n  const Colors = {\n    SUCCESS: success,\n    INFO: info,\n    WARNING: warning,\n    ERROR: error.main,\n  };\n\n  const MessageType = (type) => {\n    const icons = {\n      SUCCESS: <Icon icon=\"success\" />,\n      INFO: <Icon icon=\"info\" />,\n      WARNING: <Icon icon=\"warning\" />,\n      ERROR: <Icon icon=\"error\" />,\n    };\n\n    return icons[type];\n  };\n\n  return (\n    <Root color={Colors[type]}>\n      {MessageType(type)}\n      <Spacing left={type && \"xs\"}>{children}</Spacing>\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\n        <Icon icon=\"close\" />\n      </Close>\n    </Root>\n  );\n};\n\nMessage.defaultProps = {\n  autoClose: true,\n};\n\nMessage.propTypes = {\n  children: PropTypes.any.isRequired,\n  type: PropTypes.oneOf(allMessageTypes),\n  autoClose: PropTypes.bool,\n};\n\nexport default Message;\n","import styled, { keyframes } from \"styled-components\";\n\n// prettier-ignore\n\nconst Load = keyframes`\n  0% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  5%,\n  95% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  10%,\n  59% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n  }\n  20% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n  }\n  38% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n  }\n  100% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n`;\n\nconst Round = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\n/**\n * Displays loading spinner\n */\nexport const Loading = styled.div`\n  text-indent: -9999em;\n  overflow: hidden;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  transform: translateZ(0);\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\n  margin: 0 auto;\n  margin-top: ${(p) => p.top && p.theme.spacing[p.top]};\n  margin-bottom: ${(p) => p.bottom && p.theme.spacing[p.bottom]};\n  color: ${(p) =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n  font-size: ${(p) =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\n`;\n\n/**\n * Displays loading dots\n */\nexport const LoadingDots = styled.div`\n  &::after {\n    display: block;\n    animation: ellipsis 1s infinite;\n    content: \".\";\n    text-align: center;\n    color: ${(p) =>\n      p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n    font-size: ${(p) => p.theme.font.size.xl};\n  }\n  @keyframes ellipsis {\n    0% {\n      content: \".\";\n    }\n    33% {\n      content: \"..\";\n    }\n    66% {\n      content: \"...\";\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Wrapper around React Router's Link component, that uses theme styling\n *\n * @param {string} color\n * @param {string} weight\n * @param {string} size\n */\nexport const Anchor = styled(Link)`\n  text-decoration: none;\n  transition: color 0.1s;\n  display: inline-block;\n  color: ${(p) =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\n  font-weight: ${(p) =>\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\n  font-size: ${(p) =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n  &:hover {\n    color: ${(p) => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Component for wrapping error messages\n */\nexport const Error = styled.div`\n  color: ${(p) =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.error.main};\n  font-size: ${(p) =>\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\n`;\n\n/**\n * Helper function for adding styles to Heading components\n *\n * @param {string} size, size of text\n */\nconst getHeadingStyles = (size) => css`\n  margin: 0;\n  font-size: ${size};\n  font-family: ${(p) => p.theme.font.family};\n  font-weight: ${(p) => p.theme.font.weight.normal};\n  color: ${(p) =>\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary};\n`;\n\nexport const H1 = styled.h1`\n  ${getHeadingStyles((p) => p.theme.font.size.xl)};\n`;\n\nexport const H2 = styled.h2`\n  ${getHeadingStyles((p) => p.theme.font.size.lg)};\n`;\n\nexport const H3 = styled.h3`\n  ${getHeadingStyles((p) => p.theme.font.size.xs)};\n`;\n\nexport const H4 = styled.h4`\n  ${getHeadingStyles((p) => p.theme.font.size.tiny)};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { Icon } from \"./Icon\";\n\nconst Root = styled.div`\n  width: ${(p) => (p.size ? `${p.size}px` : \"30px\")};\n  height: ${(p) => (p.size ? `${p.size}px` : \"30px\")};\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Component for rendering user's image\n */\nconst UserImage = ({ size, image }) => (\n  <Root size={size}>\n    {image ? (\n      <Image src={image} />\n    ) : (\n      <Icon icon=\"user\" className=\"\" size={size} />\n    )}\n  </Root>\n);\n\nUserImage.propTypes = {\n  size: PropTypes.number,\n  image: PropTypes.string,\n};\n\nexport default UserImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { Icon } from \"../../common/Icon/index\";\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: ${(p) => p.theme.zIndex.xl};\n`;\n\nconst IconContainer = styled.div`\n  position: absolute;\n  top: 12px;\n  left: 10px;\n`;\n\nconst Input = styled.input`\n  outline: 0;\n  height: 40px;\n  width: 100%;\n  border: 0;\n  border-radius: ${(p) => p.theme.radius.md};\n  padding-left: ${(p) =>\n    p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg};\n  padding-right: ${(p) => p.theme.spacing.lg};\n  color: ${(p) => p.theme.colors.text.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n  background-color: ${(p) =>\n    p.backgroundColor\n      ? p.theme.colors[p.backgroundColor]\n      : p.theme.colors.grey[200]};\n  transition: border-color 0.1s;\n  &:focus {\n    &::placeholder {\n      color: ${(p) => p.theme.colors.grey[500]};\n    }\n  }\n`;\n\n/**\n * Component for rendering search input\n */\nconst SearchInput = ({\n  onChange,\n  onFocus,\n  value,\n  inputRef,\n  backgroundColor,\n  placeholder,\n  hideIcon,\n  children,\n  autoFocus,\n}) => {\n  return (\n    <Root>\n      {!hideIcon && (\n        <IconContainer>\n          <Icon icon=\"search\" />\n        </IconContainer>\n      )}\n\n      <Input\n        onChange={onChange}\n        onFocus={onFocus}\n        value={value}\n        ref={inputRef}\n        backgroundColor={backgroundColor}\n        type=\"text\"\n        placeholder={placeholder}\n        hideIcon={hideIcon}\n        autoFocus={autoFocus}\n      />\n\n      {children}\n    </Root>\n  );\n};\n\nSearchInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  ref: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  hideIcon: PropTypes.bool,\n  children: PropTypes.node,\n  autoFocus: PropTypes.bool,\n};\n\nexport default SearchInput;\n","//Routes\n\nexport const HOME = \"/\";\nexport const SEARCH = \"/search\";\nexport const USER_PROFILE = \"/:username\";\nexport const PEOPLE = \"/people\";\nexport const NOTIFICATIONS = \"/notifications\";\nexport const MESSAGES = \"/messages/:userId\";\nexport const POST = \"/post/:id\";\nexport const FORGET_PASSWORD = \"/forget\";\nexport const RESET_PASSWORD = \"reset\";\nexport const NEW_ID_VALUE = \"new\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\n\nimport { Spacing } from \"../../common/Layout\";\nimport { Anchor } from \"../../common/Text\";\nimport UserImage from \"../../common/UserImage\";\n\nimport * as Routes from \"../../../routes\";\n\nconst Root = styled.div`\n  width: 100%;\n  max-height: 350px;\n  min-height: 40px;\n  overflow: auto;\n  position: absolute;\n  top: 50px;\n  font-size: ${(p) => p.theme.font.size.xs};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n  background-color: ${(p) => p.theme.colors.white};\n`;\n\nconst StyledA = styled(Anchor)`\n  display: block;\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Item = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\nconst Name = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n`;\n\nconst NoSearchResult = styled.div`\n  text-align: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.text.main};\n`;\n\n/**\n * Displays search result, meant to be used in Search component\n */\nconst SearchResult = ({ users, forMessage }) => {\n  if (users.length < 1) {\n    return (\n      <Root>\n        <NoSearchResult>No search results.</NoSearchResult>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      {users.map((user) => (\n        <StyledA\n          key={user.id}\n          to={\n            forMessage\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\n          }\n        >\n          <Item>\n            <UserImage image={user.image} size={34} />\n\n            <Spacing left=\"xs\">\n              <Name>{user.fullName}</Name>\n              <UserName>@{user.username}</UserName>\n            </Spacing>\n          </Item>\n        </StyledA>\n      ))}\n    </Root>\n  );\n};\n\nSearchResult.propTypes = {\n  users: PropTypes.array.isRequired,\n  forMessage: PropTypes.bool,\n};\n\nexport default SearchResult;\n","import { useEffect } from 'react';\n\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { Loading } from \"../../common/Loading\";\nimport SearchInput from \"./SearchInput\";\nimport SearchResult from \"./SearchResult\";\n\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\n\nimport { SEARCH_USERS } from \"../../../graphql/User/index\";\n\nconst StyledLoading = styled(Loading)`\n  position: absolute;\n  top: 14px;\n  right: 16px;\n`;\n\n/**\n * Renders search input\n */\nconst Search = ({\n  location,\n  hideIcon,\n  forMessage,\n  backgroundColor,\n  placeholder,\n  autoFocus,\n  ...others\n}) => {\n  const client = useApolloClient();\n\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Close search result on click outside\n  const inputRef = useRef(null);\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n  // Debounce search query value\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\n\n  useEffect(() => {\n    // Clear search input value, after location change\n    setSearchQuery(\"\");\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await client.query({\n        query: SEARCH_USERS,\n        variables: { searchQuery: debounceSearchQuery },\n      });\n\n      setUsers(data.searchUsers);\n      setLoading(false);\n\n      const openSearchResult = debounceSearchQuery !== \"\";\n      setIsOpenSearchResult(openSearchResult);\n    };\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n    return () => setLoading(false);\n  }, [debounceSearchQuery, client]);\n\n  const handleInputChange = async (e) => {\n    // Trim white space only from beginning\n    const value = e.target.value.replace(/^\\s+/g, \"\");\n    setSearchQuery(value);\n    if (value) {\n      setLoading(true);\n    }\n  };\n\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n\n  return (\n    <SearchInput\n      onChange={handleInputChange}\n      onFocus={handleInputFocus}\n      value={searchQuery}\n      inputRef={inputRef}\n      placeholder={placeholder}\n      hideIcon={hideIcon}\n      backgroundColor={backgroundColor}\n      autoFocus={autoFocus}\n      {...others}\n    >\n      {loading && <StyledLoading size=\"xxs\" />}\n\n      {isOpenSearchResult && (\n        <SearchResult users={users} forMessage={forMessage} />\n      )}\n    </SearchInput>\n  );\n};\n\nSearch.propTypes = {\n  location: PropTypes.object.isRequired,\n  hideIcon: PropTypes.bool,\n  forMessage: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoFocus: PropTypes.bool,\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\n\n/**\n * React hook for debouncing\n */\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withApollo } from \"react-apollo\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Button } from \"../common/Form\";\n\nimport * as Routes from \"../../routes\";\n\nimport { useStore } from \"../../store\";\nimport { CLEAR_AUTH_USER } from \"../../constants/actions\";\n\n/**\n * Component that Logout out the user\n */\nconst LogOut = ({ client, history }) => {\n  const [, dispatch] = useStore();\n\n  const handleLogOut = () => {\n    dispatch({ type: CLEAR_AUTH_USER });\n    localStorage.removeItem(\"token\");\n    client.resetStore();\n    history.push(Routes.HOME);\n  };\n\n  return (\n    <Button text onClick={handleLogOut}>\n      LogOut\n    </Button>\n  );\n};\n\nLogOut.propTypes = {\n  history: PropTypes.object.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withApollo(LogOut));\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport LogOut from \"../LogOut\";\nimport { Anchor } from \"../../common/Text\";\n\nimport * as Routes from \"../../../routes\";\n\nimport { useStore } from \"../../../store\";\n\nconst Root = styled.div`\n  text-align: center;\n  position: absolute;\n  background-color: white;\n  line-height: ${(p) => p.theme.spacing.md};\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst CSS = css`\n  transition: background-color 0.1s;\n  display: block;\n  padding: ${(p) => p.theme.spacing.sm} ${(p) => p.theme.spacing.xl};\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n    color: ${(p) => p.theme.colors.text.secondary};\n  }\n`;\n\nconst Link = styled(Anchor)`\n  ${CSS};\n`;\n\nconst Item = styled.div`\n  ${CSS};\n`;\n\n/**\n * Component that renders Header User's dropdown\n */\nconst HeaderUserDropDown = ({ userRef }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root ref={userRef}>\n      <Link\n        to={generatePath(Routes.USER_PROFILE, {\n          username: auth.user.username,\n        })}\n      >\n        My Profile\n      </Link>\n\n      <Item>\n        <LogOut />\n      </Item>\n    </Root>\n  );\n};\n\nHeaderUserDropDown.propTypes = {\n  userRef: PropTypes.object,\n};\n\nexport default HeaderUserDropDown;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { generatePath } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { withApollo } from \"react-apollo\";\n\nimport { Anchor } from \"../common/Text\";\nimport { Spacing } from \"../common/Layout\";\nimport UserImage from \"../common/UserImage\";\n\nimport { useClickOutside } from \"../hooks/useClickOutside\";\n\nimport { GET_AUTH_USER } from \"../../graphql/User/index\";\nimport { UPDATE_NOTIFICATION_SEEN } from \"../../graphql/Notification/index\";\n\nimport { useStore } from \"../../store\";\n\nimport * as Routes from \"../../routes\";\n\nconst NotificationItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  background-color: ${(p) => p.theme.colors.white};\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst Action = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n  margin-left: ${(p) => p.theme.spacing.xs};\n`;\n\nconst PostImage = styled.div`\n  width: 40px;\n  height: 40px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n`;\n\n/**\n * Renders user notifications\n */\nconst Notification = ({ notification, close, client }) => {\n  const [{ auth }] = useStore();\n\n  const ref = React.useRef(null);\n\n  useClickOutside(ref, close);\n\n  useEffect(() => {\n    const updateNotificationSeen = async () => {\n      try {\n        await client.mutate({\n          mutation: UPDATE_NOTIFICATION_SEEN,\n          variables: {\n            input: {\n              userId: auth.user.id,\n            },\n          },\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\n        });\n      } catch (err) {}\n    };\n\n    updateNotificationSeen();\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\n\n  if (!notification.follow && !notification.like && !notification.comment) {\n    return null;\n  }\n\n  return (\n    <NotificationItem ref={ref}>\n      <Anchor\n        to={generatePath(Routes.USER_PROFILE, {\n          username: notification.author.username,\n        })}\n      >\n        <LeftSide>\n          <UserImage image={notification.author.image} size={34} />\n\n          <Spacing left=\"xs\" />\n\n          <Name>{notification.author.fullName}</Name>\n        </LeftSide>\n      </Anchor>\n\n      {notification.follow && <Action>started following you</Action>}\n\n      {notification.like && (\n        <Action>\n          likes your photo\n          <Anchor\n            to={generatePath(Routes.POST, { id: notification.like.post.id })}\n          >\n            <PostImage>\n              <Image src={notification.like.post.image} />\n            </PostImage>\n          </Anchor>\n        </Action>\n      )}\n\n      {notification.comment && (\n        <Action>\n          commented on your photo\n          <Anchor\n            to={generatePath(Routes.POST, { id: notification.comment.post.id })}\n          >\n            <PostImage>\n              <Image src={notification.comment.post.image} />\n            </PostImage>\n          </Anchor>\n        </Action>\n      )}\n    </NotificationItem>\n  );\n};\n\nNotification.propTypes = {\n  client: PropTypes.object.isRequired,\n  close: PropTypes.func,\n};\n\nexport default withApollo(Notification);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport Notification from \"../Notification\";\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 500px;\n    right: ${(p) => p.theme.spacing.lg};\n  }\n`;\n\nconst Empty = styled.div`\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Component that renders Header Notification's dropdown\n */\nconst HeaderNotificationDropDown = ({\n  notificationRef,\n  dropdownData,\n  closeDropDown,\n}) => {\n  return (\n    <Root ref={notificationRef}>\n      {!dropdownData.length ? (\n        <Empty>No new notifications.</Empty>\n      ) : (\n        dropdownData.map((notification) => (\n          <Notification\n            key={notification.id}\n            notification={notification}\n            close={closeDropDown}\n          />\n        ))\n      )}\n    </Root>\n  );\n};\n\nHeaderNotificationDropDown.propTypes = {\n  notificationRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderNotificationDropDown;\n","export const timeAgo = (timestamp) => {\n  const date = new Date(parseInt(timestamp));\n\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" mins\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n};\n\nexport const currentDate = (timestamp) => {\n  const date = new Date(parseInt(timestamp));\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const month = months[date.getMonth() + 1];\n  const day = date.getDay();\n  const year = date.getFullYear();\n  const time = date.toLocaleString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n  });\n\n  return `${month} ${day}, ${year} ${time}`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { NavLink, generatePath } from \"react-router-dom\";\n\nimport UserImage from \"../../common/UserImage\";\nimport { Anchor } from \"../../common/Text\";\n\nimport { timeAgo } from \"../../../utils/time\";\n\nimport * as Routes from \"../../../routes\";\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 500px;\n    right: 90px;\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xs};\n`;\n\nconst Link = styled(Anchor)`\n  color: ${(p) => p.theme.colors.primary.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n\n  &:hover {\n    color: ${(p) => p.theme.colors.primary.main};\n    text-decoration: underline;\n  }\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.text.primary};\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${(p) => p.theme.font.size.tiny};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\n/**\n * Component that renders Header Message's dropdown\n */\nconst HeaderMessageDropDown = ({ messageRef, dropdownData }) => {\n  return (\n    <Root ref={messageRef}>\n      <Heading>\n        <Link\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n        >\n          New Message\n        </Link>\n      </Heading>\n\n      {dropdownData.map((user) => (\n        <User\n          key={user.id}\n          to={generatePath(Routes.MESSAGES, { userId: user.id })}\n        >\n          <span>\n            <UserImage image={user.image} size={50} />\n          </span>\n\n          <Info>\n            <div>\n              <FullName>{user.fullName}</FullName>\n\n              <LastMessage>{user.lastMessage}</LastMessage>\n            </div>\n\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\n          </Info>\n        </User>\n      ))}\n    </Root>\n  );\n};\n\nHeaderMessageDropDown.propTypes = {\n  messageRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n};\n\nexport default HeaderMessageDropDown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport HeaderUserDropDown from \"./HeaderUserDropDown\";\nimport HeaderNotificationDropDown from \"./HeaderNotificationDropDown\";\nimport HeaderMessageDropDown from \"./HeaderMessageDropDown\";\n\n/**\n * Component that renders DropDown's of Header\n */\nconst HeaderDropDowns = ({\n  messageRef,\n  notificationRef,\n  userRef,\n  dropdownOpen,\n  dropdownData,\n  closeDropDown,\n}) => {\n  const DropDowns = {\n    USER: <HeaderUserDropDown userRef={userRef} />,\n    NOTIFICATION: (\n      <HeaderNotificationDropDown\n        notificationRef={notificationRef}\n        dropdownData={dropdownData}\n        closeDropDown={closeDropDown}\n      />\n    ),\n    MESSAGE: (\n      <HeaderMessageDropDown\n        messageRef={messageRef}\n        dropdownData={dropdownData}\n      />\n    ),\n  };\n\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\n};\n\nHeaderDropDowns.propTypes = {\n  messageRef: PropTypes.object,\n  notificationRef: PropTypes.object,\n  userRef: PropTypes.object,\n  dropdownOpen: PropTypes.string,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderDropDowns;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Icon } from \"../../common/Icon\";\nimport { Container, Spacing } from \"../../common/Layout\";\nimport { Anchor } from \"../../common/Text\";\nimport { Button } from \"../../common/Form\";\nimport UserImage from \"../../common/UserImage\";\nimport Search from \"../Search\";\nimport HeaderDropDowns from \"./HeaderDropDowns\";\n\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\n\nimport { useStore } from \"../../../store\";\n\nimport { HEADER_HEIGHT } from \"../../../constants/size\";\n\nimport * as Routes from \"../../../routes\";\n\nconst Root = styled(Container)`\n  position: sticky;\n  top: 0;\n  background-color: ${(p) => p.theme.colors.white};\n  z-index: ${(p) => p.theme.zIndex.md};\n  height: ${HEADER_HEIGHT}px;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    z-index: ${(p) => p.theme.zIndex.md};\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  height: ${HEADER_HEIGHT}px;\n  margin: 0 auto;\n  width: 100%;\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + \"px\"}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Hamburger = styled.div`\n  cursor: pointer;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: none;\n  }\n`;\n\nconst Logo = styled(Anchor)`\n  display: none;\n  color: ${(p) => p.theme.colors.primary.main};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  font-size: ${(p) => p.theme.font.size.sm};\n  &:hover {\n    color: ${(p) => p.theme.colors.primary.main};\n  }\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n`;\n\nconst countCSS = css`\n  top: -6px;\n  position: absolute;\n  height: 22px;\n  width: 22px;\n  padding: 2px;\n  letter-spacing: -1px;\n  border-radius: 50%;\n  color: ${(p) => p.theme.colors.white};\n  background-color: ${(p) => p.theme.colors.error.main};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NotificationCount = styled.span`\n  ${countCSS};\n  right: 54px;\n`;\n\nconst MessageCount = styled.span`\n  ${countCSS};\n  right: 100px;\n`;\n\n/**\n * Header of the App when user is authenticated\n */\nconst Header = ({ location, toggleSideBar }) => {\n  const [{ auth }] = useStore();\n  const newConversations = auth && auth.user && auth.user.newConversations;\n  const newNotifications = auth && auth.user && auth.user.newNotifications;\n  const userImage = auth && auth.user && auth.user.image;\n\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [dropdownData, setDropdownData] = useState([]);\n\n  const messageRef = useRef(null);\n  const notificationRef = useRef(null);\n  const userRef = useRef(null);\n\n  const closeOnClickOutside = () => {\n    if (dropdownOpen) {\n      closeDropDown();\n    }\n  };\n\n  useClickOutside(messageRef, closeOnClickOutside);\n  useClickOutside(notificationRef, closeOnClickOutside);\n  useClickOutside(userRef, closeOnClickOutside);\n\n  const closeDropDown = () => {\n    setDropdownOpen(null);\n    setDropdownData([]);\n  };\n\n  useEffect(() => {\n    return () => closeDropDown();\n  }, [location.pathname]);\n\n  const handleIconClick = (dropdownType) => {\n    if (dropdownOpen) {\n      closeDropDown();\n    } else {\n      if (dropdownType === \"NOTIFICATION\") {\n        setDropdownData(newNotifications);\n      } else if (dropdownType === \"MESSAGE\") {\n        setDropdownData(newConversations);\n      }\n\n      setDropdownOpen(dropdownType);\n    }\n  };\n\n  return (\n    <Root>\n      <Wrapper>\n        <LeftSide>\n          <Hamburger onClick={toggleSideBar}>\n            <Icon icon=\"menu\" />\n          </Hamburger>\n\n          <Logo to={Routes.HOME}>{process.env.REACT_APP_SITE_NAME}</Logo>\n\n          <Spacing left=\"sm\" right=\"md\">\n            <Search location={location} placeholder=\"Search\" />\n          </Spacing>\n        </LeftSide>\n\n        <RightSide>\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick(\"MESSAGE\")}>\n              {newConversations > 0 && (\n                <MessageCount>\n                  {newConversations && newConversations.length}\n                </MessageCount>\n              )}\n\n              <Icon icon=\"envelope\" />\n            </Button>\n          </Spacing>\n\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick(\"NOTIFICATION\")}>\n              {newNotifications && newNotifications.length > 0 && (\n                <NotificationCount>\n                  {newNotifications && newNotifications.length}\n                </NotificationCount>\n              )}\n              <Icon icon=\"bell\" />\n            </Button>\n          </Spacing>\n\n          <Button ghost onClick={() => handleIconClick(\"USER\")}>\n            <UserImage image={userImage} />\n          </Button>\n        </RightSide>\n\n        <HeaderDropDowns\n          messageRef={messageRef}\n          notificationRef={notificationRef}\n          userRef={userRef}\n          dropdownOpen={dropdownOpen}\n          dropdownData={dropdownData}\n          closeDropDown={closeDropDown}\n        />\n      </Wrapper>\n    </Root>\n  );\n};\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  toggleSideBar: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Header);\n","export const SIDEBAR_DESKTOP_WIDTH = 180;\n\nexport const SIDEBAR_MOBILE_WIDTH = 240;\n\nexport const USER_SUGGESTIONS_WIDTH = 240;\n\nexport const HEADER_HEIGHT = 60;\n\nexport const HOME_PAGE_POSTS_LIMIT = 6;\n\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\n\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\n\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\n\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\n\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\n","import React from \"react\";\nimport { NavLink, generatePath } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport * as Routes from \"../../routes\";\n\nimport { Icon } from \"../common/Icon/index\";\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  transition: color 0.1s;\n  color: ${(p) => p.theme.colors.text.primary};\n  display: block;\n  padding-left: ${(p) => p.theme.spacing.xs};\n  &:hover,\n  &.selected {\n    color: ${(p) => p.theme.colors.primary.main};\n    background-color: ${(p) => p.theme.colors.grey[100]};\n    svg path {\n      fill: ${(p) => p.theme.colors.primary.main};\n    }\n    @media (min-width: ${(p) => p.theme.screen.md}) {\n      background-color: ${(p) => p.theme.colors.white};\n    }\n  }\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  line-height: 40px;\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  margin-left: ${(p) => p.theme.spacing.sm};\n`;\n\n/**\n * Navigation component used in SideBar\n */\nconst Navigation = () => {\n  return (\n    <List>\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\n        <ListItem>\n          <Icon icon=\"home\" />\n          <Name>Home</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.SEARCH}>\n        <ListItem>\n          <Icon icon=\"search\" width={20} />\n          <Name>Explore</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\n        <ListItem>\n          <Icon icon=\"users\" />\n          <Name>People</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\n        <ListItem>\n          <Icon icon=\"bell\" />\n          <Name>Notifications</Name>\n        </ListItem>\n      </Link>\n\n      <Link\n        exact\n        activeClassName=\"selected\"\n        to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n      >\n        <ListItem>\n          <Icon icon=\"envelope\" />\n          <Name>Messages</Name>\n        </ListItem>\n      </Link>\n    </List>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { generatePath, withRouter, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Spacing } from \"../common/Layout\";\nimport Navigation from \"./Navigation\";\nimport UserImage from \"../common/UserImage\";\n\nimport {\n  SIDEBAR_DESKTOP_WIDTH,\n  SIDEBAR_MOBILE_WIDTH,\n  HEADER_HEIGHT,\n} from \"../../constants/size\";\n\nimport { useStore } from \"../../store\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding-top: ${HEADER_HEIGHT + 40}px;\n  height: 100%;\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\n  transition: margin-left 0.2s ease-in-out;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  z-index: ${(p) => p.theme.zIndex.sm};\n  background-color: ${(p) => p.theme.colors.white};\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    padding-top: 0;\n    position: sticky;\n    top: 100px;\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\n    flex-grow: 0;\n    flex-shrink: 0;\n    border: 0;\n    background-color: transparent;\n  }\n\n  @media (max-width: ${(p) => p.theme.screen.md}) {\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\n  }\n`;\n\nconst User = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  border: 1px solid transparent;\n\n  &:hover,\n  &.selected {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n\n    @media (min-width: ${(p) => p.theme.screen.md}) {\n      background-color: ${(p) => p.theme.colors.white};\n    }\n  }\n`;\n\nconst FullName = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  color: ${(p) =>\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\n`;\n\n/**\n * Displays left side bar\n */\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\n  const [{ auth }] = useStore();\n\n  const username = auth && auth.user && auth.user.username;\n  const isAuthUsersProfilePage = username === location.pathname.substring(1);\n\n  return (\n    <Root isOpen={isOpen} ref={sideBarRef}>\n      <User\n        exact\n        to={generatePath(Routes.USER_PROFILE, { username: username })}\n        activeClassName=\"selected\"\n      >\n        <UserImage image={auth.user.image} size={20} />\n\n        <Spacing left=\"xxs\">\n          <FullName active={isAuthUsersProfilePage}>\n            {auth.user.fullName}\n          </FullName>\n        </Spacing>\n      </User>\n\n      <Spacing top=\"sm\" />\n\n      <Navigation />\n    </Root>\n  );\n};\n\nSideBar.propTypes = {\n  location: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(SideBar);\n","import gql from \"graphql-tag\";\n\n/**\n * Creates a comment\n */\nexport const CREATE_COMMENT = gql`\n  mutation($input: CreateCommentInput!) {\n    createComment(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a comment\n */\nexport const DELETE_COMMENT = gql`\n  mutation($input: DeleteCommentInput!) {\n    deleteComment(input: $input) {\n      id\n    }\n  }\n`;\n","/**\n * Available Notification types\n */\n\nexport const NotificationType = {\n  LIKE: \"LIKE\",\n  FOLLOW: \"FOLLOW\",\n  COMMENT: \"COMMENT\"\n};\n","import { useApolloClient } from \"@apollo/react-hooks\";\nimport {\n  CREATE_NOTIFICATION,\n  DELETE_NOTIFICATION,\n} from \"../../graphql/Notification/index\";\nimport { useStore } from \"../../store/index\";\n\n/**\n * React hook that Creates or Deletes a notification after like, follow or comment\n */\nexport const useNotifications = () => {\n  const [{ auth }] = useStore();\n\n  const client = useApolloClient();\n\n  /**\n   * Helper function for mutation\n   */\n  const mutate = async (mutation, variables) => {\n    try {\n      return await client.mutate({\n        mutation,\n        variables: { input: { ...variables } },\n      });\n    } catch (error) {\n      console.error(\"Error while mutating a notification\", error);\n    }\n  };\n\n  /**\n   * Creates a notification\n   */\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\n    return mutate(CREATE_NOTIFICATION, {\n      authorId: auth.user.id,\n      userId: user.id,\n      postId,\n      notificationType,\n      notificationTypeId,\n    });\n  };\n\n  /**\n   * Removes a notification\n   */\n  const remove = ({ notificationId }) =>\n    mutate(DELETE_NOTIFICATION, { id: notificationId });\n\n  /**\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\n   */\n  const toggle = ({\n    user,\n    postId,\n    notificationType,\n    notificationTypeId,\n    hasDone,\n  }) => {\n    const type = notificationType.toLowerCase();\n    const isNotified = user.notifications.find(\n      (n) => n[type] && hasDone && n[type].id === hasDone.id\n    );\n    const notificationId = isNotified ? isNotified.id : null;\n    const operation = notificationId ? \"delete\" : \"create\";\n    const options = {\n      create: {\n        mutation: CREATE_NOTIFICATION,\n        variables: {\n          authorId: auth.user.id,\n          userId: user.id,\n          postId,\n          notificationType,\n          notificationTypeId,\n        },\n      },\n      delete: {\n        mutation: DELETE_NOTIFICATION,\n        variables: { id: notificationId },\n      },\n    };\n\n    return mutate(options[operation].mutation, options[operation].variables);\n  };\n\n  return { create, remove, toggle };\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Mutation, withApollo } from \"react-apollo\";\n\nimport { GET_AUTH_USER, GET_USER } from \"../graphql/User/index\";\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from \"../graphql/Post/index\";\nimport { CREATE_COMMENT } from \"../graphql/Comment/index\";\nimport { Textarea, Button } from \"./common/Form\";\n\nimport { NotificationType } from \"../constants/notification\";\n\nimport { useNotifications } from \"./hooks/useNotification\";\n\nimport { useStore } from \"../store/index\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\n/**\n * Creates a comment for a post\n */\nconst PostComment = ({ post, focus }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const [comment, setComment] = useState(\"\");\n  const buttonEl = useRef(null);\n  const TextareaEl = useRef(false);\n\n  useEffect(() => {\n    focus && TextareaEl.current.focus();\n  }, [focus]);\n\n  const handleSubmit = async (e, createComment) => {\n    e.preventDefault();\n    const { data } = await createComment();\n    setComment(\"\");\n\n    // Create notification on comment\n    if (auth.user.id !== post.author.id) {\n      notification.create({\n        user: post.author,\n        postId: post.id,\n        notificationType: NotificationType.COMMENT,\n        notificationTypeId: data.createComment.id,\n      });\n    }\n  };\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      buttonEl.current.click();\n    }\n  };\n\n  return (\n    <Mutation\n      mutation={CREATE_COMMENT}\n      variables={{ input: { comment, author: auth.user.id, postId: post.id } }}\n      refetchQueries={() => [\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n        { query: GET_USER, variables: { username: auth.user.username } },\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_POST, variables: { id: post.id } },\n      ]}\n    >\n      {(createComment, { loading }) => (\n        <Form onSubmit={(e) => handleSubmit(e, createComment)}>\n          <Textarea\n            onChange={(e) => setComment(e.target.value)}\n            value={comment}\n            placeholder=\"Add a comment...\"\n            onKeyDown={onEnterPress}\n            ref={TextareaEl}\n          />\n\n          <Button\n            type=\"submit\"\n            color={comment ? \"primary.main\" : \"grey[500]\"}\n            weight=\"bold\"\n            text\n            ref={buttonEl}\n            disabled={!comment || loading}\n          >\n            Post\n          </Button>\n        </Form>\n      )}\n    </Mutation>\n  );\n};\n\nPostComment.propTypes = {\n  post: PropTypes.object.isRequired,\n  focus: PropTypes.bool,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(PostComment);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\n\n/**\n * Component that manages changes to document head\n * currently we are editing only title, but you can add meta description, image ...\n */\nconst Head = ({ title }) => (\n  <Helmet>\n    <title>{title}</title>\n  </Helmet>\n);\n\nHead.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nHead.defaultProps = {\n  title: process.env.REACT_APP_SITE_NAME,\n};\n\nexport default Head;\n","import gql from \"graphql-tag\";\n\n/**\n * Creates a following between two users\n */\nexport const CREATE_FOLLOW = gql`\n  mutation($input: CreateFollowInput!) {\n    createFollow(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * deletes a following\n */\nexport const DELETE_FOLLOW = gql`\n  mutation($input: DeleteFollowInput!) {\n    deleteFollow(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Mutation } from \"react-apollo\";\nimport styled from \"styled-components\";\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from \"../../graphql/Post/index\";\nimport { GET_AUTH_USER, GET_USER } from \"../../graphql/User/index\";\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from \"../../graphql/Follow/index\";\n\nimport { NotificationType } from \"../../constants/notification\";\nimport { HOME_PAGE_POSTS_LIMIT } from \"../../constants/dataLimit\";\n\nimport { useStore } from \"../../store\";\n\nimport { useNotifications } from \"../hooks/useNotification\";\n\nconst Button = styled.button`\n  height: 27px;\n  cursor: pointer;\n  outline: none;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  transition: background-color 0.2s, border-color 0.1s;\n  border-radius: ${(p) => p.theme.radius.sm};\n  color: ${(p) => !p.isFollowing && p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border: ${(p) =>\n    p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : \"0\"};\n  background-color: ${(p) =>\n    p.isFollowing ? \"transparent\" : p.theme.colors.primary.main};\n  &:hover {\n    border-color: ${(p) => p.theme.colors.border.dark};\n  }\n`;\n\n/**\n * Component for rendering follow button\n */\nconst Follow = ({ user }) => {\n  const [loading, setLoading] = useState(false);\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const isFollowing = auth.user.following.find((f) => f.user === user.id);\n\n  const handleClickFollow = async (mutate) => {\n    setLoading(true);\n    const { data } = await mutate();\n\n    // Create or Delete mutation for follow\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      hasDone: isFollowing,\n      notificationType: NotificationType.FOLLOW,\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\n    });\n    setLoading(false);\n  };\n\n  // Detect which mutation to use\n  const operation = isFollowing ? \"delete\" : \"create\";\n  const options = {\n    create: {\n      mutation: CREATE_FOLLOW,\n      variables: { userId: user.id, followerId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_FOLLOW,\n      variables: { id: isFollowing ? isFollowing.id : null },\n    },\n  };\n\n  return (\n    <Mutation\n      mutation={options[operation].mutation}\n      variables={{ input: { ...options[operation].variables } }}\n      refetchQueries={() => [\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        {\n          query: GET_FOLLOWED_POSTS,\n          variables: {\n            userId: auth.user.id,\n            skip: 0,\n            limit: HOME_PAGE_POSTS_LIMIT,\n          },\n        },\n        { query: GET_USER, variables: { username: user.username } },\n      ]}\n    >\n      {(mutate) => {\n        return (\n          <Button\n            onClick={() => handleClickFollow(mutate)}\n            disabled={loading}\n            isFollowing={isFollowing}\n          >\n            {isFollowing ? \"Following\" : \"Follow\"}\n          </Button>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nFollow.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default Follow;\n","export const HOME_PAGE_POSTS_LIMIT = 6;\n\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\n\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\n\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\n\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\n\nexport const MAX_POST_IMAGE_SIZE = 3000000;\n\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\n\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\n\nimport { Anchor } from \"../common/Text\";\nimport Follow from \"../common/Follow\";\nimport { Spacing } from \"../common/Layout\";\nimport UserImage from \"../common/UserImage\";\n\nimport * as Routes from \"../../routes/index\";\n\nimport { useStore } from \"../../store\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  padding: ${(p) => p.theme.spacing.xs};\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\n`;\n\nconst Author = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: ${(p) => p.theme.spacing.sm};\n`;\n\nconst UserName = styled.div`\n  max-width: 100%;\n  font-size: ${(p) => p.theme.font.size.xs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\n/**\n * Author info for PostPopup component\n */\nconst PostInfoOverlay = ({ author }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <Author>\n        <Anchor\n          to={generatePath(Routes.USER_PROFILE, { username: author.username })}\n        >\n          <UserImage image={author.image} />\n        </Anchor>\n\n        <Spacing left=\"xs\" inline>\n          <Anchor\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <UserName>{author.fullName}</UserName>\n          </Anchor>\n        </Spacing>\n      </Author>\n\n      {auth.user.id !== author.id && <Follow user={author} />}\n    </Root>\n  );\n};\n\nPostInfoOverlay.propTypes = {\n  author: PropTypes.object.isRequired,\n};\n\nexport default PostInfoOverlay;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\n\nimport { Icon } from \"./common/Icon\";\nimport { Anchor } from \"./common/Text\";\nimport { Spacing } from \"./common/Layout\";\nimport UserImage from \"./common/UserImage\";\n\nimport { GET_AUTH_USER, GET_USER } from \"../graphql/User\";\nimport { DELETE_COMMENT } from \"../graphql/Comment\";\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from \"../graphql/Post/index\";\n\nimport { useNotifications } from \"./hooks/useNotification\";\n\nimport { useStore } from \"../store/index\";\n\nimport * as Routes from \"../routes/index\";\n\nconst DeleteButton = styled.button`\n  cursor: pointer;\n  display: none;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  position: absolute;\n  right: 7px;\n  top: 6px;\n`;\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: ${(p) => p.theme.spacing.xxs} 0;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  &:hover ${DeleteButton} {\n    display: block;\n  }\n`;\n\nconst UserName = styled.div`\n  color: ${(p) => p.theme.colors.primary.main};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst CommentSection = styled.div`\n  position: relative;\n  word-wrap: break-word;\n  overflow: hidden;\n  padding: 0 ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.xxs}\n    ${(p) => p.theme.spacing.xs};\n  background-color: ${(p) => p.theme.colors.grey[100]};\n  border-radius: ${(p) => p.theme.radius.lg};\n  margin-left: ${(p) => p.theme.spacing.xxs};\n  color: ${(p) => p.theme.colors.text.main};\n`;\n\n/**\n * Renders comments UI\n */\nconst Comment = ({ comment, postId, postAuthor }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n\n  const handleDeleteComment = async (deleteComment) => {\n    await deleteComment();\n\n    // Delete notification after comment deletion\n    if (auth.user.id !== postAuthor.id) {\n      const isNotified = postAuthor.notifications.find(\n        (n) => n.comment && n.comment.id === comment.id\n      );\n      notification.remove({\n        notificationId: isNotified.id,\n      });\n    }\n  };\n\n  return (\n    <Mutation\n      mutation={DELETE_COMMENT}\n      variables={{ input: { id: comment.id } }}\n      refetchQueries={() => [\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n        { query: GET_USER, variables: { username: comment.author.username } },\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_POST, variables: { id: postId } },\n      ]}\n    >\n      {(deleteComment) => {\n        return (\n          <Root>\n            <Anchor\n              to={generatePath(Routes.USER_PROFILE, {\n                username: comment.author.username,\n              })}\n            >\n              <UserImage image={comment.author.image} />\n            </Anchor>\n\n            <CommentSection>\n              {comment.author.id === auth.user.id && (\n                <DeleteButton\n                  onClick={() => handleDeleteComment(deleteComment)}\n                >\n                  <Icon icon=\"close\" width=\"10\" />\n                </DeleteButton>\n              )}\n\n              <Spacing top=\"xxs\" />\n\n              <Spacing inline right=\"xxs\">\n                <Anchor\n                  to={generatePath(Routes.USER_PROFILE, {\n                    username: comment.author.username,\n                  })}\n                >\n                  <UserName>{comment.author.fullName}</UserName>\n                </Anchor>\n              </Spacing>\n\n              {comment.comment}\n            </CommentSection>\n          </Root>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default Comment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Comment from \"../Comment\";\nimport { Spacing } from \"../common/Layout\";\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: ${(p) => p.theme.spacing.sm};\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    max-height: 400px;\n  }\n`;\n\nconst Comments = styled.div`\n  max-height: ${(p) => (p.usedInModal ? \"100%\" : \"350px\")};\n  width: 100%;\n  overflow-y: scroll;\n  box-sizing: content-box;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Comments for PostOverlay component\n */\nconst PostCommentsOverlay = ({ comments, postId, postAuthor, usedInModal }) => (\n  <Root usedInModal={usedInModal}>\n    <Spacing top=\"xs\" />\n\n    <Comments usedInModal={usedInModal}>\n      {comments.map((comment) => (\n        <Comment\n          key={comment.id}\n          comment={comment}\n          postId={postId}\n          postAuthor={postAuthor}\n        />\n      ))}\n    </Comments>\n  </Root>\n);\n\nPostCommentsOverlay.propTypes = {\n  comments: PropTypes.array.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default PostCommentsOverlay;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Query } from \"react-apollo\";\n\n//import { Loading } from \"components/Loading\";\nimport { Icon } from \"../common/Icon\";\nimport PostComment from \"../PostComment\";\nimport { Spacing } from \"../common/Layout\";\nimport Head from \"../common/Head\";\nimport PostInfoOverlay from \"./PostInfoOverlay\";\nimport PostCommentsOverlay from \"./PostCommentsOverlay\";\nimport PostOptionsOverlay from \"./PostOptionsOverlay\";\n\nimport { GET_POST } from \"../../graphql/Post\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  margin: ${(p) => !p.usedInModal && p.theme.spacing.lg} 0;\n  box-shadow: ${(p) => p.theme.shadows.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => (p.usedInModal ? p.theme.zIndex.xl : \"inherit\")};\n  overflow: hidden;\n  width: 100%;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: auto;\n  }\n`;\n\nconst Container = styled.div`\n  max-height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\n  overflow-y: ${(p) => (p.usedInModal ? \"auto\" : \"inherit\")};\n  max-width: 1300px;\n  background-color: ${(p) => p.theme.colors.white};\n  display: flex;\n  flex-direction: column;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    flex-direction: ${(p) => (p.usedInModal ? \"row\" : \"column\")};\n    max-height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\n    overflow-y: inherit;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: ${(p) => (p.usedInModal ? \"center\" : \"flex-start\")};\n  justify-content: center;\n  background-color: ${(p) => p.theme.colors.black};\n  width: 100%;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    max-width: 1000px;\n    min-width: 500px;\n    height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: ${(p) => !p.usedInModal && \"100%\"};\n  max-height: ${(p) => (p.usedInModal ? \"600px\" : \"100%\")};\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n  width: 100%;\n  background-color: ${(p) => p.theme.colors.white};\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => (p.usedInModal ? \"360px\" : \"100%\")};\n    min-width: 360px;\n  }\n`;\n\nconst CloseOverlay = styled.div`\n  display: block;\n  position: fixed;\n  right: 20px;\n  top: 15px;\n  cursor: pointer;\n`;\n\nconst Title = styled.div`\n  font-size: ${(p) => p.theme.font.size.xs};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.light};\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Displays post with comments and options\n * Meant to be used in Modal or Page component\n */\nconst PostOverlay = ({ id, closeModal, usedInModal }) => {\n  return (\n    <Query query={GET_POST} variables={{ id }}>\n      {({ data, loading, error }) => {\n        /*if (loading) return <Loading top=\"lg\" />;\n        if (error) return <NotFound />;*/\n\n        const post = data.getPost;\n\n        return (\n          <Root usedInModal={usedInModal}>\n            <Head\n              title={post.title ? post.title : `${post.author.username}'s post`}\n            />\n\n            {closeModal && (\n              <CloseOverlay onClick={closeModal}>\n                <Icon icon=\"close\" />\n              </CloseOverlay>\n            )}\n\n            <Container usedInModal={usedInModal}>\n              <Left usedInModal={usedInModal}>\n                <Image src={post.image} usedInModal={usedInModal} />\n              </Left>\n\n              <Right usedInModal={usedInModal}>\n                <Spacing>\n                  <PostInfoOverlay author={post.author} />\n\n                  {post.title && <Title>{post.title}</Title>}\n\n                  <PostCommentsOverlay\n                    usedInModal={usedInModal}\n                    comments={post.comments}\n                    postId={post.id}\n                    postAuthor={post.author}\n                  />\n                </Spacing>\n\n                <Spacing>\n                  <PostOptionsOverlay\n                    postId={post.id}\n                    postAuthor={post.author}\n                    postLikes={post.likes}\n                  />\n\n                  <PostComment post={post} />\n                </Spacing>\n              </Right>\n            </Container>\n          </Root>\n        );\n      }}\n    </Query>\n  );\n};\n\nPostOverlay.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func,\n  usedInModal: PropTypes.bool.isRequired,\n};\n\nPostOverlay.defaultProps = {\n  usedInModal: true,\n};\n\nexport default withRouter(PostOverlay);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Form\";\nimport { Spacing } from \"./Layout\";\n\nconst Wrapper = styled.div`\n  margin: auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => p.theme.zIndex.sm};\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n`;\n\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\n  <Wrapper>\n    <div>{title}</div>\n\n    <Spacing top=\"md\" />\n\n    <ButtonGroup>\n      <Button onClick={onCancel}>{cancelText}</Button>\n\n      <Spacing left=\"xs\">\n        <Button color=\"red\" onClick={onOk}>\n          {okText}\n        </Button>\n      </Spacing>\n    </ButtonGroup>\n  </Wrapper>\n);\n\nConfirm.propTypes = {\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onOk: PropTypes.func.isRequired,\n  cancelText: PropTypes.string.isRequired,\n  okText: PropTypes.string.isRequired,\n};\n\nConfirm.defaultProps = {\n  title: \"Do you really want to delete this item?\",\n  cancelText: \"Cancel\",\n  okText: \"Delete\",\n};\n\nexport default Confirm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport Confirm from \"./Confirm\";\nimport { Overlay } from \"./Layout\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: ${(p) => p.theme.spacing.sm};\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: ${(p) => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    align-items: center;\n    top: 0;\n  }\n`;\n\n/**\n * Main component for rendering Modals\n */\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\n  if (!open) return null;\n\n  return (\n    <Root>\n      <Overlay onClick={onClose} />\n\n      {type === \"confirm\" ? <Confirm {...otherProps} /> : children}\n    </Root>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  type: PropTypes.oneOf([\"\", \"confirm\"]),\n};\n\nexport default Modal;\n","import gql from \"graphql-tag\";\n\n/**\n * Creates a like\n */\nexport const CREATE_LIKE = gql`\n  mutation($input: CreateLikeInput!) {\n    createLike(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a like\n */\nexport const DELETE_LIKE = gql`\n  mutation($input: DeleteLikeInput!) {\n    deleteLike(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\n\nimport { Icon } from \"./common/Icon\";\nimport { Spacing } from \"./common/Layout\";\nimport { Button } from \"./common/Form\";\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from \"../graphql/Post/index\";\nimport { GET_AUTH_USER } from \"../graphql/User/index\";\nimport { CREATE_LIKE, DELETE_LIKE } from \"../graphql/Like/index\";\n\nimport { NotificationType } from \"../constants/notification\";\n\nimport { useNotifications } from \"./hooks/useNotification\";\n\nimport { useStore } from \"../store/index\";\n\nconst StyledButton = styled(Button)`\n  padding: ${(p) => p.theme.spacing.xs} 0;\n`;\n\n/**\n * Component for rendering Like button\n */\nconst UpVote = ({ postId, user, likes, withText, fullWidth }) => {\n  const [loading, setLoading] = useState(false);\n\n  const [{ auth }] = useStore();\n\n  const notification = useNotifications();\n\n  const hasLiked = likes.find(\n    (l) => l.user === auth.user.id && l.post === postId\n  );\n\n  const handleButtonClick = async (mutate) => {\n    setLoading(true);\n    const { data } = await mutate();\n\n    // Create or delete notification for like\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      postId,\n      hasDone: hasLiked,\n      notificationType: NotificationType.LIKE,\n      notificationTypeId: data.createLike ? data.createLike.id : null,\n    });\n    setLoading(false);\n  };\n\n  // Detect which mutation to use\n  const operation = hasLiked ? \"delete\" : \"create\";\n  const options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: { postId, userId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: { id: hasLiked ? hasLiked.id : null },\n    },\n  };\n\n  return (\n    <Mutation\n      mutation={options[operation].mutation}\n      variables={{ input: { ...options[operation].variables } }}\n      refetchQueries={() => [\n        { query: GET_AUTH_USER },\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      ]}\n    >\n      {(mutate) => {\n        return (\n          <StyledButton\n            fullWidth={fullWidth}\n            disabled={loading}\n            text\n            onClick={() => handleButtonClick(mutate)}\n            color={hasLiked && \"primary.main\"}\n          >\n            <Icon icon=\"thumbs-up\" />\n            <Spacing inline left=\"xxs\" />\n            {withText && <b>UpVote</b>}\n          </StyledButton>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nUpVote.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nexport default UpVote;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { generatePath } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Button } from \"../common/Form\";\nimport Follow from \"../common/Follow\";\n\nimport { useStore } from \"../../store\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  background-color: ${(p) => p.theme.colors.white};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => p.theme.zIndex.lg};\n  box-shadow: ${(p) => p.theme.shadows.xl};\n`;\n\nconst FollowItem = styled.div`\n  padding: ${(p) => p.theme.spacing.sm} 0;\n  text-align: center;\n`;\n\nconst StyledButton = styled(Button)`\n  padding: ${(p) => p.theme.spacing.sm} 0;\n  text-align: center;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main} !important;\n  &:first-child {\n    border-top: 0 !important ;\n  }\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n    color: ${(p) => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Post Card options, meant to be used in PostCard components Modal\n */\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\n  const [{ auth }] = useStore();\n\n  const copyToClipboard = () => {\n    try {\n      navigator.clipboard.writeText(\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\n          id: postId,\n        })}`\n      );\n    } catch (error) {\n      console.error(\"Failed to read clipboard contents: \", error);\n    }\n\n    closeOption();\n  };\n\n  return (\n    <Root>\n      {auth.user.id !== author.id && (\n        <FollowItem>\n          <Follow user={author} />\n        </FollowItem>\n      )}\n\n      <StyledButton fullWidth text onClick={copyToClipboard}>\n        Copy link\n      </StyledButton>\n\n      {auth.user.id === author.id && (\n        <StyledButton fullWidth text onClick={deletePost}>\n          Delete post\n        </StyledButton>\n      )}\n\n      <StyledButton fullWidth onClick={closeOption} text>\n        Cancel\n      </StyledButton>\n    </Root>\n  );\n};\n\nPostCardOption.propTypes = {\n  postId: PropTypes.string.isRequired,\n  author: PropTypes.object.isRequired,\n  closeOption: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nexport default PostCardOption;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { generatePath } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { withApollo } from \"react-apollo\";\n\nimport Comment from \"../Comment\";\nimport CreateComment from \"../PostComment\";\nimport UpVote from \"../UpVote\";\nimport { Icon } from \"../common/Icon\";\nimport { Spacing } from \"../common/Layout\";\nimport { Anchor, H3 } from \"../common/Text\";\nimport { Button } from \"../common/Form\";\nimport PostCardOption from \"./PostCardOption\";\nimport Modal from \"../common/Modal\";\nimport UserImage from \"../common/UserImage\";\n\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from \"../../graphql/Post/index\";\nimport { GET_AUTH_USER, GET_USER_POSTS } from \"../../graphql/User/index\";\n\nimport {\n  HOME_PAGE_POSTS_LIMIT,\n  PROFILE_PAGE_POSTS_LIMIT,\n} from \"../../constants/dataLimit\";\n\nimport { useStore } from \"../../store\";\n\nimport * as Routes from \"../../routes/index\";\n\nimport { timeAgo } from \"../../utils/time\";\n\nconst Root = styled.div`\n  width: 100%;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding-bottom: ${(p) => p.theme.spacing.xs};\n  background-color: ${(p) => p.theme.colors.white};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst TopRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.text.hint};\n  border-bottom: 1px solid ${(p) => p.theme.colors.text.secondary};\n  border: 0;\n  margin-top: 2px;\n`;\n\nconst Author = styled(Anchor)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.span`\n  font-size: ${(p) => p.theme.font.size.xs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  color: ${(p) => p.theme.colors.primary.main};\n`;\n\nconst Poster = styled.img`\n  display: block;\n  width: 100%;\n  max-height: 700px;\n  object-fit: cover;\n  cursor: pointer;\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n`;\n\nconst BottomRow = styled.div`\n  overflow: hidden;\n`;\n\nconst CountAndIcons = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Count = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: ${(p) => p.theme.spacing.xs};\n  font-size: ${(p) => p.theme.font.size.xs};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst Comments = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst StyledButton = styled(Button)`\n  padding: 0;\n  padding-left: 4px;\n  font-size: ${(p) => p.theme.font.size.xxs};\n`;\n\nconst CommentLine = styled.div`\n  margin-bottom: 5px;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\n/**\n * Component for rendering user post\n */\nconst PostCard = ({\n  author,\n  imagePublicId,\n  comments,\n  title,\n  createdAt,\n  image,\n  likes,\n  postId,\n  openModal,\n  client,\n}) => {\n  const [{ auth }] = useStore();\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\n\n  const toggleCreateComment = () => {\n    setIsCommentOpen(true);\n  };\n\n  const toggleComment = () => {\n    setIsCommentOpen(!isCommentOpen);\n  };\n\n  const closeOption = () => setIsOptionOpen(false);\n\n  const openOption = () => setIsOptionOpen(true);\n\n  const deletePost = async () => {\n    try {\n      await client.mutate({\n        mutation: DELETE_POST,\n        variables: { input: { id: postId, imagePublicId } },\n        refetchQueries: () => [\n          {\n            query: GET_FOLLOWED_POSTS,\n            variables: {\n              userId: auth.user.id,\n              skip: 0,\n              limit: HOME_PAGE_POSTS_LIMIT,\n            },\n          },\n          { query: GET_AUTH_USER },\n          {\n            query: GET_USER_POSTS,\n            variables: {\n              username: auth.user.username,\n              skip: 0,\n              limit: PROFILE_PAGE_POSTS_LIMIT,\n            },\n          },\n        ],\n      });\n    } catch (err) {}\n\n    setIsOptionOpen(false);\n  };\n\n  return (\n    <>\n      <Root>\n        <Modal onClose={closeOption} open={isOptionOpen}>\n          <PostCardOption\n            postId={postId}\n            closeOption={closeOption}\n            author={author}\n            deletePost={deletePost}\n          />\n        </Modal>\n\n        <TopRow>\n          <Author\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <UserImage image={author.image} />\n\n            <Spacing left=\"xs\">\n              <Name>{author.fullName}</Name>\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\n            </Spacing>\n          </Author>\n\n          <Button ghost onClick={openOption}>\n            <Icon icon=\"ellipsis-h\" />\n          </Button>\n        </TopRow>\n\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\">\n          <H3>{title}</H3>\n        </Spacing>\n\n        {image && <Poster src={image} onClick={openModal} />}\n\n        <BottomRow>\n          <CountAndIcons>\n            <Count>\n              {likes.length} likes\n              <Spacing />\n              <StyledButton onClick={toggleComment} text>\n                {comments.length} comments\n              </StyledButton>\n            </Count>\n\n            <Icons>\n              <UpVote\n                fullWidth\n                withText\n                user={author}\n                postId={postId}\n                likes={likes}\n              />\n\n              <Button fullWidth text onClick={toggleCreateComment}>\n                <Icon icon=\"comment\" /> <Spacing inline left=\"xxs\" />{\" \"}\n                <b>Comment</b>\n              </Button>\n            </Icons>\n          </CountAndIcons>\n\n          {isCommentOpen && (\n            <>\n              <Spacing top=\"xs\">\n                <CommentLine />\n                <CreateComment\n                  post={{ id: postId, author }}\n                  focus={isCommentOpen}\n                />\n              </Spacing>\n\n              {comments.length > 0 && <CommentLine />}\n\n              <Comments>\n                {comments.map((comment) => (\n                  <Comment\n                    key={comment.id}\n                    comment={comment}\n                    postId={postId}\n                    postAuthor={author}\n                  />\n                ))}\n              </Comments>\n            </>\n          )}\n        </BottomRow>\n      </Root>\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  author: PropTypes.object.isRequired,\n  imagePublicId: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  likes: PropTypes.array.isRequired,\n  comments: PropTypes.array,\n  createdAt: PropTypes.string.isRequired,\n  postId: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(PostCard);\n","import { useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { set, get, uniqBy } from \"lodash\";\n\n/**\n * Component that adds Infinite scroll functionality to UI\n */\nconst InfiniteScroll = ({\n  data,\n  dataKey,\n  fetchMore,\n  variables,\n  count,\n  children,\n}) => {\n  const handleScroll = useMemo(\n    () => async () => {\n      const loadMore = () => {\n        return fetchMore({\n          variables: { ...variables, skip: data.length },\n          updateQuery: (prev, { fetchMoreResult }) => {\n            const previousData = get(prev, dataKey);\n            const fetchMoreData = get(fetchMoreResult, dataKey);\n            return set(\n              prev,\n              dataKey,\n              uniqBy([...previousData, ...fetchMoreData], \"id\")\n            );\n          },\n        });\n      };\n\n      const windowHeight = window.innerHeight;\n      const scrollTop = document.documentElement.scrollTop;\n      const offsetHeight = document.documentElement.offsetHeight;\n      const scrolled =\n        windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\n\n      // Stop event listener if all the data has been loaded\n      if (data.length >= count) {\n        window.removeEventListener(\"scroll\", handleScroll);\n        return;\n      }\n\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\n      if (scrolled) {\n        window.removeEventListener(\"scroll\", handleScroll);\n        loadMore();\n      }\n    },\n    [count, data.length, dataKey, fetchMore, variables]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [handleScroll]);\n\n  return children(data);\n};\n\nInfiniteScroll.propTypes = {\n  data: PropTypes.array.isRequired,\n  dataKey: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  fetchMore: PropTypes.func.isRequired,\n  variables: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default InfiniteScroll;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: ${(p) => p.width && `${p.width}px`};\n  height: ${(p) => p.height && `${p.height}px`};\n  display: ${(p) => p.inline && `inline-block`};\n  margin-top: ${(p) => p.theme.spacing[p.top]};\n  margin-left: ${(p) => p.theme.spacing[p.left]};\n  margin-right: ${(p) => p.theme.spacing[p.right]};\n  margin-bottom: ${(p) => p.theme.spacing[p.bottom]};\n  background-color: ${(p) => p.theme.colors.grey[200]};\n  border-radius: ${(p) =>\n    p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm};\n`;\n\nconst Skeleton = ({\n  count,\n  width,\n  height,\n  inline,\n  top,\n  right,\n  bottom,\n  left,\n  radius,\n}) => {\n  const loopSkeleton = () => {\n    let skeleton = [];\n    for (let i = 0; i < count; i++) {\n      skeleton.push(\n        <Container\n          key={i}\n          top={top}\n          left={left}\n          right={right}\n          width={width}\n          height={height}\n          inline={inline}\n          bottom={bottom}\n          radius={radius}\n        />\n      );\n    }\n    return skeleton;\n  };\n\n  return loopSkeleton();\n};\n\nSkeleton.propTypes = {\n  inline: PropTypes.bool,\n  count: PropTypes.number,\n  width: PropTypes.number,\n  left: PropTypes.string,\n  top: PropTypes.string,\n  right: PropTypes.string,\n  bottom: PropTypes.string,\n  height: PropTypes.number,\n};\n\nSkeleton.defaultProps = {\n  count: 1,\n};\n\nexport default Skeleton;\n","import { useStore } from \"../../store\";\nimport { SET_MESSAGE } from \"../../constants/actions\";\nimport { MessageType } from \"../../constants/message\";\n\n/**\n * React hook for dispatching global messages\n */\nexport const useGlobalMessage = () => {\n  const [, dispatch] = useStore();\n\n  const dispatchAction = (text, messageType, autoClose) => {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose,\n      },\n    });\n  };\n\n  const success = (text, autoClose) =>\n    dispatchAction(text, MessageType.SUCCESS, autoClose);\n\n  const info = (text, autoClose) =>\n    dispatchAction(text, MessageType.INFO, autoClose);\n\n  const warning = (text, autoClose) =>\n    dispatchAction(text, MessageType.WARNING, autoClose);\n\n  const error = (text, autoClose) =>\n    dispatchAction(text, MessageType.ERROR, autoClose);\n\n  return { success, info, warning, error };\n};\n","import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport styled from \"styled-components\";\n\nimport { Spacing, Overlay, Container } from \"./common/Layout\";\nimport { Error } from \"./common/Text\";\nimport { Button } from \"./common/Form\";\nimport UserImage from \"./common/UserImage\";\n\n//import ImageUpload from \"./ImageUpload\";\n\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from \"../graphql/Post/index\";\nimport { GET_AUTH_USER, GET_USER_POSTS } from \"../graphql/User/index\";\n\nimport { useStore } from \"../store/index\";\n\nimport {\n  PROFILE_PAGE_POSTS_LIMIT,\n  HOME_PAGE_POSTS_LIMIT,\n  MAX_POST_IMAGE_SIZE,\n} from \"../constants/dataLimit\";\n\nimport { useGlobalMessage } from \"./hooks/useGlobalMessage\";\n\nconst Root = styled(Container)`\n  border: 0;\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${(p) => p.theme.spacing.sm} 0;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  margin: 0 ${(p) => p.theme.spacing.xs};\n  padding-left: ${(p) => p.theme.spacing.sm};\n  padding-top: ${(p) => p.theme.spacing.xs};\n  border: 0;\n  outline: none;\n  resize: none;\n  transition: 0.1s ease-out;\n  height: ${(p) => (p.focus ? \"80px\" : \"40px\")};\n  font-size: ${(p) => p.theme.font.size.xs};\n  background-color: ${(p) => p.theme.colors.grey[100]};\n  border-radius: ${(p) => p.theme.radius.md};\n`;\n\nconst ImagePreviewContainer = styled.div`\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  flex-shrink: 0;\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst ImagePreview = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Options = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n  padding: ${(p) => p.theme.spacing.sm} 0;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n/**\n * Component for creating a post\n */\nconst CreatePost = () => {\n  const [{ auth }] = useStore();\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const message = useGlobalMessage();\n\n  const handleReset = () => {\n    setTitle(\"\");\n    setImage(\"\");\n    setIsFocused(false);\n    setError(\"\");\n  };\n\n  const handleOnFocus = () => setIsFocused(true);\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n\n  const handleSubmit = async (e, createPost) => {\n    e.preventDefault();\n    createPost();\n    handleReset();\n  };\n\n  return (\n    <Mutation\n      mutation={CREATE_POST}\n      variables={{ input: { title, image, authorId: auth.user.id } }}\n      refetchQueries={() => [\n        {\n          query: GET_FOLLOWED_POSTS,\n          variables: {\n            userId: auth.user.id,\n            skip: 0,\n            limit: HOME_PAGE_POSTS_LIMIT,\n          },\n        },\n        { query: GET_AUTH_USER },\n        {\n          query: GET_USER_POSTS,\n          variables: {\n            username: auth.user.username,\n            skip: 0,\n            limit: PROFILE_PAGE_POSTS_LIMIT,\n          },\n        },\n      ]}\n    >\n      {(createPost, { loading, error: apiError }) => {\n        const isShareDisabled = loading || (!loading && !image && !title);\n\n        return (\n          <>\n            {isFocused && <Overlay onClick={handleReset} />}\n\n            <Root\n              zIndex={isFocused ? \"md\" : \"xs\"}\n              color=\"white\"\n              radius=\"sm\"\n              padding=\"sm\"\n            >\n              <form onSubmit={(e) => handleSubmit(e, createPost)}>\n                <Wrapper>\n                  <UserImage image={auth.user.image} size={40} />\n\n                  <Textarea\n                    type=\"textarea\"\n                    name=\"title\"\n                    focus={isFocused}\n                    value={title}\n                    onFocus={handleOnFocus}\n                    onChange={handleTitleChange}\n                    placeholder=\"Ask your questions\"\n                  />\n                </Wrapper>\n\n                {image && (\n                  <Spacing bottom=\"sm\">\n                    <ImagePreviewContainer>\n                      <ImagePreview src={URL.createObjectURL(image)} />\n                    </ImagePreviewContainer>\n                  </Spacing>\n                )}\n\n                {isFocused && (\n                  <Options>\n                    <Buttons>\n                      <Button text type=\"button\" onClick={handleReset}>\n                        Cancel\n                      </Button>\n                      <Button disabled={isShareDisabled} type=\"submit\">\n                        Share\n                      </Button>\n                    </Buttons>\n                  </Options>\n                )}\n\n                {apiError ||\n                  (error && (\n                    <Spacing top=\"xs\" bottom=\"sm\">\n                      <Error size=\"xs\">\n                        {apiError\n                          ? \"Something went wrong, please try again.\"\n                          : error}\n                      </Error>\n                    </Spacing>\n                  ))}\n              </form>\n            </Root>\n          </>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default CreatePost;\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\n\nimport { Anchor } from \"../../components/common/Text\";\nimport PostOverlay from \"../../components/post/PostOverlay\";\nimport Modal from \"../../components/common/Modal\";\nimport PostCard from \"../../components/postcard/PostCard\";\nimport { Spacing, Container } from \"../../components/common/Layout\";\nimport { Loading } from \"../../components/common/Loading\";\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport CreatePost from \"../../components/CreatePost\";\nimport Head from \"../../components/common/Head\";\n\nimport { GET_FOLLOWED_POSTS } from \"../../graphql/Post/index\";\n\nimport { useStore } from \"../../store/index\";\n\nimport { HOME_PAGE_POSTS_LIMIT } from \"../../constants/size\";\n\nimport * as Routes from \"../../routes\";\n\nconst Empty = styled.div`\n  padding: ${(p) => p.theme.spacing.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: ${(p) => p.theme.spacing.lg};\n  background-color: ${(p) => p.theme.colors.white};\n`;\n\nconst StyledA = styled(Anchor)`\n  text-decoration: underline;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\n/**\n * Home page of the app\n */\nconst Home = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n\n  const closeModal = () => {\n    window.history.pushState(\"\", \"\", \"/\");\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const userid = auth && auth.user && auth.user.id;\n  const variables = {\n    userId: userid,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT,\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Head />\n\n      <Spacing top=\"lg\" />\n\n      <CreatePost />\n\n      <Query\n        query={GET_FOLLOWED_POSTS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <Skeleton\n                height={500}\n                bottom=\"lg\"\n                top=\"lg\"\n                count={HOME_PAGE_POSTS_LIMIT}\n              />\n            );\n          }\n\n          const { posts, count } = data.getFollowedPosts;\n\n          if (!posts.length) {\n            return (\n              <div>\n                <StyledA to={generatePath(Routes.SEARCH)}>\n                  Explore new posts\n                </StyledA>\n              </div>\n            );\n          }\n\n          return (\n            <InfiniteScroll\n              data={posts}\n              dataKey=\"getFollowedPosts.posts\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {(data) => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    {data.map((post) => (\n                      <Fragment key={post.id}>\n                        <Modal\n                          open={modalPostId === post.id}\n                          onClose={closeModal}\n                        >\n                          <PostOverlay id={post.id} closeModal={closeModal} />\n                        </Modal>\n\n                        <Spacing bottom=\"lg\" top=\"lg\">\n                          <PostCard\n                            author={post.author}\n                            imagePublicId={post.imagePublicId}\n                            postId={post.id}\n                            comments={post.comments}\n                            createdAt={post.createdAt}\n                            title={post.title}\n                            image={post.image}\n                            likes={post.likes}\n                            openModal={() => openModal(post.id)}\n                          />\n                        </Spacing>\n                      </Fragment>\n                    ))}\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { withApollo } from \"react-apollo\";\n\nimport { Icon } from \"../../components/common/Icon\";\nimport { Loading } from \"../../components/common/Loading\";\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from \"../../graphql/User\";\nimport { GET_FOLLOWED_POSTS } from \"../../graphql/Post\";\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from \"../../constants/size\";\nimport { useGlobalMessage } from \"../../components/hooks/useGlobalMessage\";\n\nimport { useStore } from \"../../store\";\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Overlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  visibility: hidden;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: ${(p) => p.theme.colors.white};\n  opacity: 0;\n  transition: visibility 0.2s linear, opacity 0.2s linear;\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 180px;\n  height: 180px;\n  display: block;\n  overflow: hidden;\n  cursor: ${(p) => p.authUser && \"pointer\"};\n  border-radius: 50%;\n  border: 4px solid ${(p) => p.theme.colors.border.main};\n  background-color: ${(p) => p.theme.colors.white};\n\n  &:hover ${Overlay} {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Displays and Updates user profile image\n */\nconst ProfileImageUpload = ({\n  userId,\n  image,\n  imagePublicId,\n  username,\n  client,\n}) => {\n  const [{ auth }] = useStore();\n\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async (e) => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = \"\";\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\n      setLoading(false);\n      message.error(\n        `File size should be less then ${\n          MAX_USER_PROFILE_IMAGE_SIZE / 1000000\n        }MB`\n      );\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  const renderProfileImage = () => {\n    if (loading) {\n      return <Loading top=\"xl\" />;\n    }\n\n    return image ? (\n      <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" />\n    ) : (\n      <Icon icon=\"user\" />\n    );\n  };\n\n  const authUser = auth.user.id === userId;\n\n  return (\n    <>\n      {authUser && (\n        <Input\n          name=\"image\"\n          type=\"file\"\n          id=\"image\"\n          accept=\"image/x-png,image/jpeg\"\n          onChange={handleImageChange}\n        />\n      )}\n\n      <Label authUser={authUser} htmlFor=\"image\">\n        {authUser && <Overlay>{image ? \"Change\" : \"Upload\"}</Overlay>}\n\n        {renderProfileImage()}\n      </Label>\n    </>\n  );\n};\n\nProfileImageUpload.propTypes = {\n  image: PropTypes.string,\n  imagePublicId: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  client: PropTypes.object.isRequired,\n};\n\nexport default withApollo(ProfileImageUpload);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link, generatePath } from \"react-router-dom\";\nimport { useSubscription } from \"@apollo/react-hooks\";\n\nimport { H1 } from \"../../components/common/Text\";\nimport { Spacing } from \"../../components/common/Layout\";\nimport Follow from \"../../components/common/Follow\";\nimport ProfileImageUpload from \"./ProfileImageUpload\";\n\nimport { useStore } from \"../../store\";\nimport * as Routes from \"../../routes\";\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from \"../../graphql/User\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ProfileImage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n`;\n\nconst FullName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: ${(p) => p.theme.spacing.sm};\n  position: relative;\n\n  ${H1} {\n    font-size: ${(p) => p.theme.font.size.lg};\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    ${H1} {\n      font-size: ${(p) => p.theme.font.size.xl};\n    }\n  }\n`;\n\nconst FollowAndMessage = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${(p) => p.theme.spacing.sm};\n`;\n\nconst Message = styled(Link)`\n  text-decoration: none;\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst Online = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.success};\n  margin-left: ${(p) => p.theme.spacing.sm};\n  border-radius: 50%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: ${(p) => p.theme.font.size.xs};\n  margin-top: ${(p) => p.theme.spacing.sm};\n`;\n\nconst List = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.grey[800]};\n  white-space: nowrap;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    padding: 0 ${(p) => p.theme.spacing.lg};\n  }\n`;\n\n/**\n * Renders user information in profile page\n */\nconst ProfileInfo = ({ user }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: { authUserId: auth.user.id, userId: user.id },\n  });\n\n  let isUserOnline = user.isOnline;\n  if (!loading && data) {\n    isUserOnline = data.isUserOnline.isOnline;\n  }\n\n  return (\n    <Root>\n      <ProfileImage>\n        <ProfileImageUpload\n          userId={user.id}\n          image={user.image}\n          imagePublicId={user.imagePublicId}\n          username={user.username}\n        />\n\n        <FullName>\n          <H1>{user.fullName}</H1>\n\n          {isUserOnline && auth.user.id !== user.id && <Online />}\n\n          {auth.user.id !== user.id && (\n            <FollowAndMessage>\n              <Follow user={user} />\n\n              <Spacing left=\"sm\" />\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>\n                Message\n              </Message>\n            </FollowAndMessage>\n          )}\n        </FullName>\n      </ProfileImage>\n\n      <Info>\n        <List>\n          <b>{user.posts.length} </b> posts\n        </List>\n        <List>\n          <b>{user.followers.length} </b> followers\n        </List>\n        <List>\n          <b>{user.following.length} </b> following\n        </List>\n      </Info>\n    </Root>\n  );\n};\n\nProfileInfo.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default ProfileInfo;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport { generatePath } from \"react-router-dom\";\n\nimport { Spacing } from \"../../components/common/Layout\";\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\nimport { Loading } from \"../../components/common/Loading\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport Modal from \"../../components/common/Modal\";\nimport PostOverlay from \"../../components/post\";\nimport PostCard from \"../../components/postcard/PostCard\";\n\nimport { PROFILE_PAGE_POSTS_LIMIT } from \"../../constants/dataLimit\";\n\nimport { GET_USER_POSTS } from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes\";\n\n/**\n * Renders posts in profile\n */\nconst ProfilePosts = ({ username }) => {\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\n  const [modalPostId, setModalPostId] = useState(\"\");\n\n  const openModal = (postId) => {\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n    setIsPostPopupOpen(true);\n  };\n\n  const closeModal = () => {\n    window.history.pushState(\n      \"\",\n      \"\",\n      generatePath(Routes.USER_PROFILE, { username })\n    );\n    setIsPostPopupOpen(false);\n  };\n\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\n\n  return (\n    <Query\n      query={GET_USER_POSTS}\n      variables={variables}\n      notifyOnNetworkStatusChange\n    >\n      {({ data, loading, fetchMore, networkStatus }) => {\n        if (loading && networkStatus === 1) {\n          return (\n            <Skeleton\n              height={500}\n              bottom=\"lg\"\n              top=\"lg\"\n              count={PROFILE_PAGE_POSTS_LIMIT}\n            />\n          );\n        }\n\n        const { posts, count } = data.getUserPosts;\n\n        if (!posts.length > 0) {\n          return <Spacing bottom=\"lg\">{\"No posts yet.\"}</Spacing>;\n        }\n\n        return (\n          <InfiniteScroll\n            data={posts}\n            dataKey=\"getUserPosts.posts\"\n            count={parseInt(count)}\n            variables={variables}\n            fetchMore={fetchMore}\n          >\n            {(data) => {\n              return data.map((post, i) => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && data.length - 1 === i;\n\n                return (\n                  <Fragment key={post.id}>\n                    {modalPostId === post.id && (\n                      <Modal open={isPostPopupOpen} onClose={closeModal}>\n                        <PostOverlay id={post.id} closeModal={closeModal} />\n                      </Modal>\n                    )}\n\n                    <Spacing bottom=\"lg\">\n                      <PostCard\n                        author={post.author}\n                        postId={post.id}\n                        imagePublicId={post.imagePublicId}\n                        comments={post.comments}\n                        title={post.title}\n                        image={post.image}\n                        likes={post.likes}\n                        createdAt={post.createdAt}\n                        openModal={() => openModal(post.id)}\n                      />\n                    </Spacing>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              });\n            }}\n          </InfiniteScroll>\n        );\n      }}\n    </Query>\n  );\n};\n\nProfilePosts.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default ProfilePosts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport styled from \"styled-components\";\n\nimport Head from \"../../components/common/Head\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport { Container, Spacing } from \"../../components/common/Layout\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport CreatePost from \"../../components/CreatePost\";\nimport ProfilePosts from \"./ProfilePosts\";\n\nimport { GET_USER } from \"../../graphql/User\";\n\nimport { useStore } from \"../../store\";\n\nconst Root = styled.div`\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\n/**\n * User Profile Page\n */\nconst Profile = ({ match }) => {\n  const [{ auth }] = useStore();\n  const { username } = match.params;\n\n  return (\n    <Root>\n      <Head title={username} />\n\n      <Query query={GET_USER} variables={{ username }}>\n        {({ data, loading, error }) => {\n          if (loading) {\n            return (\n              <Container padding=\"xxs\">\n                <Skeleton height={350} />\n                <Container maxWidth=\"sm\">\n                  <Spacing top=\"lg\" bottom=\"lg\">\n                    <Skeleton height={82} />\n                  </Spacing>\n                </Container>\n              </Container>\n            );\n          }\n\n          if (error || !data.getUser) return \"Not Found\";\n\n          return (\n            <Container padding=\"xxs\">\n              <ProfileInfo user={data.getUser} />\n\n              <Container maxWidth=\"sm\">\n                <Spacing top=\"lg\" bottom=\"lg\">\n                  {username === auth.user.username && <CreatePost />}\n                </Spacing>\n\n                <ProfilePosts username={username} />\n              </Container>\n            </Container>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nProfile.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Profile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Content } from \"../../components/common/Layout\";\nimport PostOverlay from \"../../components/post\";\n\n/**\n * Post detail page\n */\nconst Post = ({ match }) => {\n  return (\n    <Content>\n      <PostOverlay usedInModal={false} id={match.params.id} />\n    </Content>\n  );\n};\n\nPost.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Post);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { NavLink, generatePath, withRouter } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { GET_CONVERSATIONS } from \"../../graphql/User\";\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from \"../../graphql/Message\";\n\nimport Search from \"../../components/app/Search\";\nimport { Icon } from \"../../components/common/Icon\";\nimport { LoadingDots } from \"../../components/common/Loading\";\nimport UserImage from \"../../components/common/UserImage\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  width: 80px;\n  height: 100%;\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    width: 330px;\n  }\n`;\n\nconst HeadingContainer = styled.div`\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  height: 60px;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Heading = styled.h3`\n  display: none;\n  color: ${(p) => p.theme.colors.text.primary};\n  margin: 0;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst NewMessage = styled(NavLink)`\n  width: 40px;\n  height: 40px;\n  background-color: ${(p) => p.theme.colors.grey[200]};\n  border-radius: 50%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SearchContainer = styled.div`\n  display: none;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst UserContainer = styled.div`\n  margin-top: ${(p) => p.theme.spacing.sm};\n  padding: 0 ${(p) => p.theme.spacing.xxs};\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\n  border-radius: ${(p) => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.text.primary};\n\n  @media (max-width: ${(p) => p.theme.screen.lg}) {\n    ${(p) =>\n      !p.seen &&\n      `\n        background-color: ${p.theme.colors.primary.light};\n      `};\n  }\n\n  &.selected {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  display: none;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst FullNameUnSeen = styled.div`\n  width: 100%;\n  font-size: ${(p) => p.theme.font.size.sm};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst UnSeen = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.primary.light};\n  border-radius: 50%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\n/**\n * Component that renders users, with whom auth user had a chat\n */\nconst MessagesUsers = ({ location, authUser }) => {\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\n    variables: { authUserId: authUser.id },\n  });\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const { newConversation } = subscriptionData.data;\n        const oldConversations = prev.getConversations;\n\n        if (oldConversations.some((u) => u.id === newConversation.id)) {\n          return prev;\n        }\n\n        // Merge conversations\n        const conversations = newConversation;\n        delete conversations[\"receiverId\"];\n        const mergedConversations = [newConversation, ...oldConversations];\n\n        return { getConversations: mergedConversations };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  return (\n    <Root>\n      <HeadingContainer>\n        <Heading>Chats</Heading>\n\n        <NewMessage\n          exact\n          activeClassName=\"selected\"\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n        >\n          <Icon icon=\"user-edit\" />\n        </NewMessage>\n      </HeadingContainer>\n\n      <SearchContainer>\n        <Search\n          location={location}\n          backgroundColor=\"white\"\n          forMessage\n          placeholder=\"Search message\"\n        />\n      </SearchContainer>\n\n      {loading && <LoadingDots top=\"xl\" />}\n\n      {!loading && (\n        <UserContainer>\n          {data.getConversations.map((user) => {\n            const unseen = !user.lastMessageSender && !user.seen;\n\n            return (\n              <User\n                key={user.id}\n                activeClassName=\"selected\"\n                to={`/messages/${user.id}`}\n                seen={unseen ? 0 : 1}\n              >\n                <span>\n                  <UserImage image={user.image} size={50} />\n                </span>\n\n                <Info>\n                  <FullNameUnSeen>\n                    <FullName>{user.fullName}</FullName>\n\n                    {unseen && <UnSeen />}\n                  </FullNameUnSeen>\n\n                  <LastMessage>\n                    {user.lastMessageSender && \"You:\"} {user.lastMessage}\n                  </LastMessage>\n                </Info>\n              </User>\n            );\n          })}\n        </UserContainer>\n      )}\n    </Root>\n  );\n};\n\nMessagesUsers.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MessagesUsers);\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { Button, Textarea } from \"../../components/common/Form\";\nimport { Icon } from \"../../components/common/Icon\";\nimport UserImage from \"../../components/common/UserImage\";\nimport { Spacing } from \"../../components/common/Layout\";\n\nimport { CREATE_MESSAGE } from \"../../graphql/Message\";\nimport { GET_CONVERSATIONS } from \"../../graphql/User\";\n\nimport { currentDate } from \"../../utils/time\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  overflow-y: auto;\n  height: 100vh;\n  margin-top: -120px;\n  padding-top: 120px;\n  display: flex;\n  flex-direction: column;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${(p) => p.theme.colors.grey[500]};\n    border-radius: ${(p) => p.theme.radius.lg};\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${(p) => p.theme.colors.grey[600]};\n    }\n  }\n\n  &:hover {\n    ::-webkit-scrollbar-thumb {\n      visibility: visible;\n    }\n  }\n`;\n\nconst Conversation = styled.div`\n  flex: 1;\n`;\n\nconst MessageDate = styled.span`\n  position: absolute;\n  bottom: -${(p) => p.theme.spacing.sm};\n  left: ${(p) => !p.userMessage && p.theme.spacing.lg};\n  right: -${(p) => p.userMessage && 0};\n  display: none;\n  font-size: ${(p) => p.theme.font.size.tiny};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: ${(p) => p.userMessage && \"flex-end\"};\n  margin: ${(p) => p.theme.spacing.md} 0;\n\n  &:hover ${MessageDate} {\n    display: block;\n  }\n`;\n\nconst Message = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  max-width: 300px;\n  line-height: 21px;\n  font-size: ${(p) => p.theme.font.size.xs};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border-radius: ${(p) => p.theme.radius.lg};\n  color: ${(p) => p.userMessage && p.theme.colors.white};\n  background-color: ${(p) =>\n    p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200]};\n`;\n\nconst Form = styled.form`\n  background-color: ${(p) => p.theme.colors.white};\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  padding: ${(p) => p.theme.spacing.xxs};\n`;\n\nconst StyledTextarea = styled(Textarea)`\n  height: 38px;\n  border-radius: ${(p) => p.theme.radius.lg};\n  background-color: ${(p) => p.theme.colors.grey[200]};\n`;\n\nconst SendButton = styled(Button)`\n  margin-left: ${(p) => p.theme.spacing.sm};\n  align-self: center;\n`;\n\n/**\n * Component that renders messages conversations UI\n */\nconst MessagesChatConversation = ({\n  messages,\n  authUser,\n  chatUser,\n  data,\n  match,\n}) => {\n  const bottomRef = useRef(null);\n\n  const [messageText, setMessageText] = useState(\"\");\n\n  const [createMessage] = useMutation(CREATE_MESSAGE);\n\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView();\n    }\n  }, [bottomRef, data]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (!messageText) return;\n\n    setMessageText(\"\");\n    createMessage({\n      variables: {\n        input: {\n          sender: authUser.id,\n          receiver: chatUser ? chatUser.id : null,\n          message: messageText,\n        },\n      },\n      refetchQueries: ({ data }) => {\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\n          return [\n            {\n              query: GET_CONVERSATIONS,\n              variables: { authUserId: authUser.id },\n            },\n          ];\n        }\n      },\n    });\n  };\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage(e);\n    }\n  };\n\n  return (\n    <Root>\n      <Conversation>\n        {messages.map((message) => {\n          const isAuthUserReceiver = authUser.id === message.sender.id;\n\n          return (\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\n              {!isAuthUserReceiver && (\n                <Spacing right=\"xs\">\n                  <UserImage image={message.sender.image} />\n                </Spacing>\n              )}\n\n              <Message userMessage={isAuthUserReceiver}>\n                {message.message}\n              </Message>\n\n              <MessageDate userMessage={isAuthUserReceiver}>\n                {currentDate(message.createdAt)}\n              </MessageDate>\n            </MessageWrapper>\n          );\n        })}\n        <div ref={bottomRef} />\n      </Conversation>\n\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\n        <Form onSubmit={sendMessage}>\n          <StyledTextarea\n            placeholder=\"Type a message\"\n            value={messageText}\n            onChange={(e) => setMessageText(e.target.value)}\n            onKeyDown={onEnterPress}\n          />\n\n          <SendButton type=\"submit\" ghost>\n            <Icon icon=\"paper-plan\" />\n          </SendButton>\n        </Form>\n      )}\n    </Root>\n  );\n};\n\nMessagesChatConversation.propTypes = {\n  messages: PropTypes.array.isRequired,\n  authUser: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n  data: PropTypes.any,\n  match: PropTypes.object.isRequired,\n};\n\nexport default MessagesChatConversation;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { generatePath, withRouter, Link } from \"react-router-dom\";\nimport { useSubscription } from \"@apollo/react-hooks\";\n\nimport Search from \"../../components/app/Search\";\nimport UserImage from \"../../components/common/UserImage\";\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes\";\n\nimport { useStore } from \"../../store\";\n\nconst Root = styled.div`\n  position: relative;\n  background-color: ${(p) => p.theme.colors.white};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 60px;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  z-index: 1;\n`;\n\nconst InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  color: ${(p) => p.theme.colors.text.secondary};\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst To = styled.div`\n  margin-top: 1px;\n`;\n\nconst User = styled(Link)`\n  margin: 0 ${(p) => p.theme.spacing.xxs};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\n  border-radius: ${(p) => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nconst Info = styled.div`\n  padding-left: ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  font-size: ${(p) => p.theme.font.size.sm};\n  color: ${(p) => p.theme.colors.text.primary};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst Online = styled.div`\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.success};\n  margin-left: ${(p) => p.theme.spacing.xs};\n  border-radius: 50%;\n`;\n\n/**\n * Heading component for messages chat\n */\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: {\n      authUserId: auth.user.id,\n      userId: chatUser ? chatUser.id : null,\n    },\n    skip: !chatUser,\n  });\n\n  // Update user's isOnline field in real time\n  if (!loading && data && chatUser) {\n    chatUser.isOnline = data.isUserOnline.isOnline;\n  }\n\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\n    return (\n      <Root>\n        <InputContainer>\n          <To>To:</To>\n          <Search\n            location={location}\n            backgroundColor=\"white\"\n            hideIcon\n            forMessage\n            placeholder=\"Type the name of a person\"\n            autoFocus\n          />\n        </InputContainer>\n      </Root>\n    );\n  }\n\n  if (chatUser) {\n    return (\n      <Root>\n        <User\n          to={generatePath(Routes.USER_PROFILE, {\n            username: chatUser.username,\n          })}\n        >\n          <UserImage image={chatUser.image} size={40} />\n\n          <Info>\n            <FullName>{chatUser.fullName}</FullName>\n\n            {chatUser.isOnline && <Online />}\n          </Info>\n        </User>\n      </Root>\n    );\n  }\n\n  return null;\n};\n\nMessagesChatHeading.propTypes = {\n  match: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n};\n\nexport default withRouter(MessagesChatHeading);\n","import React, { useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useQuery, useApolloClient } from \"@apollo/react-hooks\";\n\nimport { LoadingDots } from \"../../components/common/Loading\";\nimport MessagesChatConversation from \"./MessagesChatConversation\";\nimport MessagesChatHeading from \"./MessagesChatHeading\";\n\nimport {\n  GET_MESSAGES,\n  GET_MESSAGES_SUBSCRIPTION,\n  UPDATE_MESSAGE_SEEN,\n} from \"../../graphql/Message\";\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n/**\n * Messages chat wrapper\n */\nconst MessagesChat = ({ match, authUser }) => {\n  const { userId } = match.params;\n\n  const client = useApolloClient();\n\n  const { data, loading } = useQuery(GET_USER, {\n    variables: { id: userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n  });\n\n  const {\n    subscribeToMore,\n    data: messages,\n    loading: messagesLoading,\n  } = useQuery(GET_MESSAGES, {\n    variables: { authUserId: authUser.id, userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n    fetchPolicy: \"network-only\",\n  });\n\n  const updateMessageSeen = useCallback(async () => {\n    try {\n      await client.mutate({\n        mutation: UPDATE_MESSAGE_SEEN,\n        variables: {\n          input: {\n            receiver: authUser.id,\n            sender: userId,\n          },\n        },\n        refetchQueries: () => [\n          {\n            query: GET_CONVERSATIONS,\n            variables: { authUserId: authUser.id },\n          },\n          { query: GET_AUTH_USER },\n        ],\n      });\n    } catch (err) {}\n  }, [authUser.id, client, userId]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_MESSAGES_SUBSCRIPTION,\n      variables: { authUserId: authUser.id, userId },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        updateMessageSeen();\n\n        const newMessage = subscriptionData.data.messageCreated;\n        const mergedMessages = [...prev.getMessages, newMessage];\n\n        return { getMessages: mergedMessages };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\n\n  useEffect(() => {\n    if (userId !== Routes.NEW_ID_VALUE) {\n      updateMessageSeen();\n    }\n  }, [userId, updateMessageSeen]);\n\n  if (loading || messagesLoading) {\n    return (\n      <Root>\n        <LoadingDots />\n      </Root>\n    );\n  }\n\n  let chatUser = null;\n  if (data && data.getUser) {\n    chatUser = data.getUser;\n  }\n\n  return (\n    <Root>\n      <MessagesChatHeading match={match} chatUser={chatUser} />\n\n      <MessagesChatConversation\n        authUser={authUser}\n        messages={messages ? messages.getMessages : []}\n        chatUser={chatUser}\n        data={messages}\n        match={match}\n      />\n    </Root>\n  );\n};\n\nMessagesChat.propTypes = {\n  match: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default MessagesChat;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { useStore } from \"../../store\";\n\nimport { HEADER_HEIGHT } from \"../../constants/size\";\n\nimport MessagesUsers from \"./MessagesUsers\";\nimport MessagesChat from \"./MessagesChat\";\n\nconst Root = styled.div`\n  background-color: ${(p) => p.theme.colors.white};\n  position: relative;\n  margin-top: -${HEADER_HEIGHT}px;\n  padding-top: ${HEADER_HEIGHT}px;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    border-left: 1px solid ${(p) => p.theme.colors.border.main};\n    border-right: 1px solid ${(p) => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Messages page\n */\nconst Messages = ({ match }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <MessagesUsers authUser={auth.user} match={match} />\n\n      <MessagesChat match={match} authUser={auth.user} />\n    </Root>\n  );\n};\n\nMessages.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Messages;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\n\nimport { Anchor } from \"../../components/common/Text\";\nimport { Spacing } from \"../../components/common/Layout\";\nimport Follow from \"../../components/common/Follow\";\nimport theme from \"../../utils/theme\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 280px;\n  background-color: white;\n  padding: ${(p) => p.theme.spacing.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  transition: border-color 0.1s;\n`;\n\nconst ImageContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst InitialLetters = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  text-transform: uppercase;\n  color: ${(p) => p.theme.colors.white};\n  font-size: ${(p) => p.theme.font.size.lg};\n  background-color: ${(p) => p.color};\n`;\n\nconst FullName = styled.span`\n  max-width: 200px;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.span`\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\n/**\n * Card component for rendering user info, meant to be used in Peoples page\n */\nconst PeopleCard = ({ user }) => {\n  const [color, setColor] = useState(\"\");\n\n  const { fullName, username, image } = user;\n\n  useEffect(() => {\n    const { primary, secondary, success, error } = theme.colors;\n    const colors = [primary.main, secondary.main, success, error.main];\n    const randomColor = Math.floor(Math.random() * colors.length);\n    setColor(colors[randomColor]);\n  }, []);\n\n  const splitFullName = () => {\n    // If a fullName contains more word than two, take first two word\n    const splitWords = fullName.split(\" \").slice(0, 2).join(\" \");\n\n    // Take only first letters from split words\n    const firstLetters = splitWords\n      .split(\" \")\n      .map((a) => a.charAt(0))\n      .join(\" \");\n\n    return firstLetters;\n  };\n\n  return (\n    <Root>\n      <Anchor to={generatePath(Routes.USER_PROFILE, { username })}>\n        <ImageContainer>\n          {image ? (\n            <Image src={image} />\n          ) : (\n            <InitialLetters color={color}>{splitFullName()}</InitialLetters>\n          )}\n        </ImageContainer>\n      </Anchor>\n\n      <Spacing top=\"sm\" bottom=\"xs\">\n        <Anchor to={generatePath(Routes.USER_PROFILE, { username })}>\n          <FullName>{fullName}</FullName>\n        </Anchor>\n      </Spacing>\n\n      <UserName>@{username}</UserName>\n\n      <Spacing top=\"lg\" />\n\n      <Follow user={user} />\n    </Root>\n  );\n};\n\nPeopleCard.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default PeopleCard;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Container } from \"../../components/common/Layout\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport { Loading } from \"../../components/common/Loading\";\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\nimport Head from \"../../components/common/Head\";\nimport PeopleCard from \"./PeopleCard\";\nimport { Query } from \"react-apollo\";\n\nimport { GET_USERS } from \"../../graphql/User\";\n\nimport { PEOPLE_PAGE_USERS_LIMIT } from \"../../constants/dataLimit\";\n\nimport { useStore } from \"../../store\";\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PeopleContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  margin-bottom: ${(p) => p.theme.spacing.lg};\n`;\n\n/**\n * People page\n */\nconst People = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: PEOPLE_PAGE_USERS_LIMIT,\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Find new People\" />\n\n      <Query\n        query={GET_USERS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <PeopleContainer>\n                <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\n              </PeopleContainer>\n            );\n          }\n\n          const { users, count } = data.getUsers;\n\n          if (!users.length > 0) return \"No people yet.\";\n\n          return (\n            <InfiniteScroll\n              data={users}\n              dataKey=\"getUsers.users\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {(data) => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    <PeopleContainer>\n                      {data.map((user) => (\n                        <PeopleCard key={user.id} user={user} />\n                      ))}\n                    </PeopleContainer>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nexport default People;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Query } from \"react-apollo\";\n\nimport { Container, Content } from \"../../components/common/Layout\";\nimport { Loading } from \"../../components/common/Loading\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport Notification from \"../../components/app/Notification\";\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\nimport Head from \"../../components/common/Head\";\n\nimport { useStore } from \"../../store\";\n\nimport { GET_USER_NOTIFICATION } from \"../../graphql/Notification\";\n\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from \"../../constants/dataLimit\";\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n`;\n\nconst List = styled.div`\n  overflow: hidden;\n  border-radius: ${(p) => p.theme.radius.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\n/**\n * Notifications page\n */\nconst Notifications = () => {\n  const [{ auth }] = useStore();\n\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\n  };\n\n  return (\n    <Content>\n      <Root maxWidth=\"md\">\n        <Head title={`${auth.user.username}'s Notifications`} />\n\n        <Query\n          query={GET_USER_NOTIFICATION}\n          variables={variables}\n          notifyOnNetworkStatusChange\n        >\n          {({ data, loading, fetchMore, networkStatus }) => {\n            if (loading && networkStatus === 1) {\n              return (\n                <Skeleton\n                  height={56}\n                  bottom=\"xxs\"\n                  count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT}\n                />\n              );\n            }\n\n            const { notifications, count } = data.getUserNotifications;\n\n            if (!notifications.length) {\n              return \"no notification yet\";\n            }\n\n            return (\n              <InfiniteScroll\n                data={notifications}\n                dataKey=\"getUserNotifications.notifications\"\n                count={parseInt(count)}\n                variables={variables}\n                fetchMore={fetchMore}\n              >\n                {(data) => {\n                  const showNextLoading =\n                    loading && networkStatus === 3 && count !== data.length;\n\n                  return (\n                    <>\n                      <List>\n                        {data.map((notification) => (\n                          <Notification\n                            key={notification.id}\n                            notification={notification}\n                            close={() => false}\n                          />\n                        ))}\n                      </List>\n\n                      {showNextLoading && <Loading top=\"lg\" />}\n                    </>\n                  );\n                }}\n              </InfiniteScroll>\n            );\n          }}\n        </Query>\n      </Root>\n    </Content>\n  );\n};\n\nexport default Notifications;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { Spacing } from \"../../components/common/Layout\";\nimport { Icon } from \"../../components/common/Icon\";\n\nconst Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  opacity: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s, visibility 0.3s;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: ${(p) => p.theme.colors.white};\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n  border-radius: ${(p) => p.theme.radius.sm};\n  overflow: hidden;\n\n  &:hover ${Overlay} {\n    opacity: 1;\n  }\n`;\n\nconst Photo = styled.div`\n  width: 100%;\n  height: 300px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-color: ${(p) => p.theme.colors.grey[300]};\n`;\n\n/**\n * Card component, meant to be used in Explore page\n */\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n\n    img.onload = () => {\n      setImageLoaded(true);\n    };\n\n    return () => {\n      img.onload = null;\n    };\n  }, [image]);\n\n  return (\n    <Root>\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\n\n      <Overlay onClick={openPostPopup}>\n        <Icon icon=\"thumbs-up\" />\n\n        <Spacing left=\"xs\" right=\"lg\">\n          {countLikes}\n        </Spacing>\n\n        <Icon icon=\"comment\" />\n\n        <Spacing left=\"xs\">{countComments}</Spacing>\n      </Overlay>\n    </Root>\n  );\n};\n\nExploreCard.propTypes = {\n  openPostPopup: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  countLikes: PropTypes.number.isRequired,\n  countComments: PropTypes.number.isRequired,\n};\n\nexport default ExploreCard;\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { generatePath } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\n\nimport { Container } from \"../../components/common/Layout\";\nimport SearchCard from \"./SearchCard\";\nimport Skeleton from \"../../components/common/Skeleton\";\nimport PostOverlay from \"../../components/post\";\nimport Modal from \"../../components/common/Modal\";\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\nimport { Loading } from \"../../components/common/Loading\";\nimport Head from \"../../components/common/Head\";\n\nimport { GET_POSTS } from \"../../graphql/Post\";\n\nimport { EXPLORE_PAGE_POSTS_LIMIT } from \"../../constants/size\";\n\nimport { useStore } from \"../../store\";\n\nimport * as Routes from \"../../routes\";\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n`;\n\n/**\n * Explore page\n */\nconst Explore = () => {\n  const [{ auth }] = useStore();\n\n  const [modalPostId, setModalPostId] = useState(null);\n\n  const closeModal = () => {\n    window.history.pushState(\"\", \"\", \"/explore\");\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const variables = {\n    authUserId: auth.user.id,\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Explore New Posts and Users\" />\n\n      <Query\n        query={GET_POSTS}\n        variables={variables}\n        notifyOnNetworkStatusChange\n      >\n        {({ data, loading, fetchMore, networkStatus }) => {\n          if (loading && networkStatus === 1) {\n            return (\n              <PostsContainer>\n                <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\n              </PostsContainer>\n            );\n          }\n\n          const { posts, count } = data.getPosts;\n\n          if (!posts.length > 0) return \"No posts yet.\";\n\n          return (\n            <InfiniteScroll\n              data={posts}\n              dataKey=\"getPosts.posts\"\n              count={parseInt(count)}\n              variables={variables}\n              fetchMore={fetchMore}\n            >\n              {(data) => {\n                const showNextLoading =\n                  loading && networkStatus === 3 && count !== data.length;\n\n                return (\n                  <Fragment>\n                    <PostsContainer>\n                      {data.map((post) => (\n                        <Fragment key={post.id}>\n                          <Modal\n                            open={modalPostId === post.id}\n                            onClose={closeModal}\n                          >\n                            <PostOverlay id={post.id} closeModal={closeModal} />\n                          </Modal>\n\n                          <SearchCard\n                            image={post.image}\n                            countLikes={post.likes.length}\n                            countComments={post.comments.length}\n                            openPostPopup={() => openModal(post.id)}\n                          />\n                        </Fragment>\n                      ))}\n                    </PostsContainer>\n\n                    {showNextLoading && <Loading top=\"lg\" />}\n                  </Fragment>\n                );\n              }}\n            </InfiniteScroll>\n          );\n        }}\n      </Query>\n    </Root>\n  );\n};\n\nexport default Explore;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Header from \"../components/app/Header\";\nimport SideBar from \"../components/app/SideBar\";\n//import UserSuggestions from \"./UserSuggestions\";\n\nimport Home from \"../pages/Home\";\nimport Profile from \"../pages/Profile\";\nimport Post from \"../pages/Posts\";\nimport Messages from \"../pages/Messages\";\nimport People from \"../pages/People\";\nimport Notifications from \"../pages/Notifications\";\nimport Search from \"../pages/Search\";\n\nimport { useWindowSize } from \"../components/hooks/useWindowSize\";\nimport { useClickOutside } from \"../components/hooks/useClickOutside\";\n\nimport * as Routes from \"../routes\";\n\nimport theme from \"../utils/theme\";\n\nimport { useStore } from \"../store\";\nimport { SET_AUTH_USER } from \"../constants/actions\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.md};\n  }\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + \"px\"}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\n/**\n * Main layout of the app, when user is authenticated\n */\nconst ApplicationLayout = ({ location, authUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n\n  const sideBarRef = useRef(\"\");\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n\n  if (!auth.user) return null;\n\n  return (\n    <>\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\n\n      <Root>\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\n\n        <Switch>\n          <Route exact path={Routes.HOME} component={Home} />\n\n          <Route exact path={Routes.SEARCH} component={Search} />\n\n          <Route exact path={Routes.PEOPLE} component={People} />\n\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\n\n          <Route exact path={Routes.MESSAGES} component={Messages} />\n\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\n\n          <Route exact path={Routes.POST} component={Post} />\n        </Switch>\n      </Root>\n    </>\n  );\n};\n\nApplicationLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(ApplicationLayout);\n","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * React hook for detecting window resizing\n */\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => {\n      return {\n        width: isClient ? window.innerWidth : undefined,\n        height: isClient ? window.innerHeight : undefined,\n      };\n    },\n    [isClient]\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(\n    () => {\n      if (!isClient) {\n        return false;\n      }\n\n      function handleResize() {\n        setWindowSize(getSize());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    },\n    [getSize, isClient]\n  );\n\n  return windowSize;\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\nimport styled from \"styled-components\";\n\nimport { Anchor, Error } from \"../../components/common/Text\";\nimport { Spacing } from \"../../components/common/Layout\";\nimport { InputText, Button } from \"../../components/common/Form\";\n\nimport { SIGN_IN } from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes/index\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: space-between;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  margin-top: ${(p) => p.theme.spacing.sm};\n`;\n\nconst InputContainer = styled(Spacing)`\n  width: 100%;\n  margin-right: 24px;\n`;\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  top: 1px;\n`;\n\nconst ForgetPassword = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  color: ${(p) => p.theme.colors.white};\n`;\n\n/**\n * Sign In page\n */\nconst SignIn = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ emailOrUsername: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setError(\"\");\n  }, [location.pathname]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (e, signin) => {\n    e.preventDefault();\n\n    if (!emailOrUsername || !password) {\n      setError(\"All fields are required\");\n      return;\n    }\n\n    setError(\"\");\n    signin().then(async ({ data }) => {\n      localStorage.setItem(\"token\", data.signin.token);\n      await refetch();\n      history.push(Routes.HOME);\n    });\n  };\n\n  const renderErrors = (apiError) => {\n    let errorMessage;\n\n    if (error) {\n      errorMessage = error;\n    } else if (apiError) {\n      errorMessage = apiError.graphQLErrors[0].message;\n    }\n\n    if (errorMessage) {\n      return (\n        <ErrorMessage>\n          <Error size=\"xxs\" color=\"white\">\n            {errorMessage}\n          </Error>\n        </ErrorMessage>\n      );\n    }\n\n    return null;\n  };\n\n  const { emailOrUsername, password } = values;\n\n  return (\n    <Mutation\n      mutation={SIGN_IN}\n      variables={{ input: { emailOrUsername, password } }}\n    >\n      {(signin, { loading, error: apiError }) => (\n        <form onSubmit={(e) => handleSubmit(e, signin)}>\n          <Root>\n            <InputContainer>\n              {renderErrors(apiError)}\n\n              <InputText\n                autoFocus\n                type=\"text\"\n                name=\"emailOrUsername\"\n                values={emailOrUsername}\n                onChange={handleChange}\n                placeholder=\"Email or Username\"\n                borderColor=\"white\"\n              />\n            </InputContainer>\n\n            <InputContainer left=\"xs\" right=\"xs\">\n              <InputText\n                type=\"password\"\n                name=\"password\"\n                values={password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n                borderColor=\"white\"\n              />\n              <Anchor to={Routes.FORGET_PASSWORD}>\n                <ForgetPassword>Forgot password?</ForgetPassword>\n              </Anchor>\n            </InputContainer>\n\n            <Button disabled={loading}>Log in</Button>\n          </Root>\n        </form>\n      )}\n    </Mutation>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport * as Routes from \"../../routes/index\";\n\nimport { Container } from \"../../components/common/Layout\";\nimport { Anchor } from \"../../components/common/Text\";\nimport SignIn from \"./SignIn\";\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 80px;\n  background-color: transparent;\n`;\n\nconst StyledContainer = styled(Container)`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Logo = styled(Anchor)`\n  display: none;\n  color: ${(p) => p.theme.colors.white};\n  font-size: ${(p) => p.theme.font.size.sm};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  &:hover {\n    color: ${(p) => p.theme.colors.white};\n  }\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst SignInContainer = styled.div`\n  width: 600px;\n`;\n\n/**\n * Header of the App when user isn't authenticated\n */\nconst Header = ({ refetch }) => {\n  return (\n    <Root>\n      <StyledContainer maxWidth=\"lg\">\n        <Logo to={Routes.HOME}>{process.env.REACT_APP_SITE_NAME}</Logo>\n\n        <SignInContainer>\n          <SignIn refetch={refetch} />\n        </SignInContainer>\n      </StyledContainer>\n    </Root>\n  );\n};\n\nHeader.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","export const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\n\nimport { Spacing, Container } from \"../../components/common/Layout\";\nimport { H1, H3, Error } from \"../../components/common/Text\";\nimport { InputText, SecondaryButton } from \"../../components/common/Form\";\nimport Head from \"../../components/common/Head\";\n\nimport { emailRegex, usernameRegex } from \"../../constants/regex\";\n\nimport { SIGN_UP } from \"../../graphql/User/index\";\n\nimport * as Routes from \"../../routes/index\";\n\nconst Root = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 60px;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: space-between;\n    margin-top: 120px;\n  }\n`;\n\nconst Form = styled.div`\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  background-color: rgba(255, 255, 255, 0.8);\n  width: 100%;\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n`;\n\n/**\n * Sign Up page\n */\nconst SignUp = ({ history, refetch }) => {\n  const [error, setError] = useState(\"\");\n  const [values, setValues] = useState({\n    fullName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const validate = () => {\n    if (!fullName || !email || !username || !password) {\n      return \"All fields are required\";\n    }\n\n    if (fullName.length > 50) {\n      return \"Full name no more than 50 characters\";\n    }\n\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      return \"Enter a valid email address.\";\n    }\n\n    if (!usernameRegex.test(username)) {\n      return \"Usernames can only use letters, numbers, underscores and periods\";\n    } else if (username.length > 20) {\n      return \"Username no more than 50 characters\";\n    }\n\n    if (password.length < 6) {\n      return \"Password min 6 characters\";\n    }\n\n    return false;\n  };\n\n  const handleSubmit = (e, signup) => {\n    e.preventDefault();\n    const error = validate();\n    if (error) {\n      setError(error);\n      return false;\n    }\n\n    signup().then(async ({ data }) => {\n      localStorage.setItem(\"token\", data.signup.token);\n      await refetch();\n      history.push(Routes.HOME);\n    });\n  };\n\n  const renderErrors = (apiError) => {\n    let errorMessage;\n\n    if (error) {\n      errorMessage = error;\n    } else if (apiError) {\n      errorMessage =\n        apiError &&\n        apiError.graphQLErrors[0] &&\n        apiError.graphQLErrors[0].message;\n    }\n\n    if (errorMessage) {\n      return (\n        <Spacing bottom=\"sm\" top=\"sm\">\n          <Error>{errorMessage}</Error>\n        </Spacing>\n      );\n    }\n\n    return null;\n  };\n\n  const { fullName, email, password, username } = values;\n\n  return (\n    <Mutation\n      mutation={SIGN_UP}\n      variables={{ input: { fullName, email, password, username } }}\n    >\n      {(signup, { loading, error: apiError }) => {\n        return (\n          <Root maxWidth=\"lg\">\n            <Head />\n            <Form>\n              <Spacing bottom=\"md\">\n                <H1>Create an Account</H1>\n                <H3>Its quick and easy</H3>\n              </Spacing>\n\n              <form onSubmit={(e) => handleSubmit(e, signup)}>\n                <InputText\n                  type=\"text\"\n                  name=\"fullName\"\n                  values={fullName}\n                  onChange={handleChange}\n                  placeholder=\"Full name\"\n                  borderColor=\"white\"\n                />\n                <Spacing top=\"xs\" bottom=\"xs\">\n                  <InputText\n                    type=\"text\"\n                    name=\"email\"\n                    values={email}\n                    onChange={handleChange}\n                    placeholder=\"Email\"\n                    borderColor=\"white\"\n                  />\n                </Spacing>\n                <InputText\n                  type=\"text\"\n                  name=\"username\"\n                  values={username}\n                  onChange={handleChange}\n                  placeholder=\"Username\"\n                  borderColor=\"white\"\n                />\n                <Spacing top=\"xs\" bottom=\"xs\">\n                  <InputText\n                    type=\"password\"\n                    name=\"password\"\n                    values={password}\n                    onChange={handleChange}\n                    placeholder=\"Password\"\n                    borderColor=\"white\"\n                  />\n                </Spacing>\n\n                {renderErrors(apiError)}\n\n                <Spacing top=\"sm\" />\n                <SecondaryButton size=\"large\" disabled={loading}>\n                  Sign up\n                </SecondaryButton>\n              </form>\n            </Form>\n          </Root>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Mutation } from \"react-apollo\";\n\nimport { Spacing } from \"../../components/common/Layout\";\nimport { H1, Anchor, Error } from \"../../components/common/Text\";\nimport { InputText, Button } from \"../../components/common/Form\";\nimport Head from \"../../components/common/Head\";\n\nimport { REQUEST_PASSWORD_RESET } from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes/index\";\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  width: 100%;\n  margin-top: 80px;\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: ${(p) => p.theme.font.size.xs};\n  line-height: 22px;\n`;\n\n/**\n * Forgot password page\n */\nconst ForgetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = (e, requestResetPassword) => {\n    e.preventDefault();\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      setError(\"Enter a valid email address.\");\n      return;\n    }\n\n    setError(\"\");\n    setEmail(\"\");\n    requestResetPassword().then(async ({ data }) => {\n      setMessage(data.requestPasswordReset.message);\n    });\n  };\n\n  if (message) {\n    return (\n      <Root>\n        <Container>\n          <Spacing bottom=\"sm\">\n            <H1>{message}</H1>\n          </Spacing>\n        </Container>\n      </Root>\n    );\n  }\n\n  return (\n    <Mutation\n      mutation={REQUEST_PASSWORD_RESET}\n      variables={{ input: { email } }}\n    >\n      {(requestResetPassword, { data, loading, error: apiError }) => (\n        <Root>\n          <Head title=\"Forgot Password\" />\n\n          <Container>\n            <Spacing bottom=\"sm\">\n              <H1>Reset Password</H1>\n              <Text>\n                Enter the email address associated with your account, and we’ll\n                email you a link to reset your password.\n              </Text>\n            </Spacing>\n\n            <form onSubmit={(e) => handleSubmit(e, requestResetPassword)}>\n              <InputText\n                type=\"text\"\n                name=\"email\"\n                values={email}\n                onChange={handleEmailChange}\n                placeholder=\"Email\"\n              />\n\n              {error && (\n                <Spacing bottom=\"sm\" top=\"sm\">\n                  <Error>{error}</Error>\n                </Spacing>\n              )}\n\n              {apiError && (\n                <Spacing bottom=\"sm\" top=\"sm\">\n                  <Error>\n                    {apiError.graphQLErrors.map((e) => (\n                      <div key={e.message}>{e.message}</div>\n                    ))}\n                  </Error>\n                </Spacing>\n              )}\n\n              <Spacing top=\"xs\" />\n\n              <Button disabled={loading}>Send reset link</Button>\n\n              <Spacing top=\"sm\">\n                <Anchor to={Routes.HOME}>&larr; Back to Sign Up</Anchor>\n              </Spacing>\n            </form>\n          </Container>\n        </Root>\n      )}\n    </Mutation>\n  );\n};\n\nForgetPassword.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default ForgetPassword;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query, Mutation } from \"react-apollo\";\n\nimport { Spacing } from \"../../components/common/Layout\";\nimport { H1, Error } from \"../../components/common/Text\";\nimport { InputText, Button } from \"../../components/common/Form\";\nimport Head from \"../../components/common/Head\";\n\nimport {\n  VERIFY_RESET_PASSWORD_TOKEN,\n  RESET_PASSWORD,\n} from \"../../graphql/User\";\n\nimport * as Routes from \"../../routes/index\";\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: 80px;\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\n/**\n * Reset password page\n */\nconst ResetPassword = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ password: \"\", confirmPassword: \"\" });\n  const [error, setError] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (e, resetPassword) => {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError(\"Enter password and Confirm password.\");\n      return;\n    } else if (password.length < 6) {\n      setError(\"Password min 6 characters\");\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError(\"\");\n    resetPassword()\n      .then(async ({ data }) => {\n        localStorage.setItem(\"token\", data.resetPassword.token);\n        await refetch();\n        history.push(Routes.HOME);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  };\n\n  const { password, confirmPassword } = values;\n\n  const url = new URLSearchParams(location.search);\n  const email = url.get(\"email\");\n  const token = url.get(\"token\");\n\n  return (\n    <Root>\n      <Head title=\"Reset Password\" />\n\n      <Container>\n        <Query query={VERIFY_RESET_PASSWORD_TOKEN} variables={{ email, token }}>\n          {({ loading, error: apiError }) => {\n            if (apiError)\n              return <H1>This token is either invalid or expired!</H1>;\n\n            return (\n              <Mutation\n                mutation={RESET_PASSWORD}\n                variables={{ input: { email, password, token } }}\n              >\n                {(resetPassword, { loading, error: apiError }) => {\n                  if (apiError) return <H1>{apiError}</H1>;\n\n                  return (\n                    <>\n                      <Spacing bottom=\"md\">\n                        <H1>Password Reset</H1>\n                      </Spacing>\n\n                      <form onSubmit={(e) => handleSubmit(e, resetPassword)}>\n                        <InputText\n                          type=\"password\"\n                          name=\"password\"\n                          values={password}\n                          onChange={handleChange}\n                          placeholder=\"Password\"\n                        />\n\n                        <Spacing top=\"xs\" bottom=\"sm\">\n                          <InputText\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            values={confirmPassword}\n                            onChange={handleChange}\n                            placeholder=\"Confirm Password\"\n                          />\n                        </Spacing>\n\n                        {error && (\n                          <Spacing bottom=\"sm\" top=\"sm\">\n                            <Error>{error}</Error>\n                          </Spacing>\n                        )}\n\n                        <Button disabled={loading}>Reset Password</Button>\n                      </form>\n                    </>\n                  );\n                }}\n              </Mutation>\n            );\n          }}\n        </Query>\n      </Container>\n    </Root>\n  );\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ResetPassword);\n","export default __webpack_public_path__ + \"static/media/auth-bg.e1d81745.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport {\n  Header,\n  SignUp,\n  ForgetPassword,\n  ResetPassword,\n} from \"../pages/Auth/index\";\n\nimport { HOME, FORGET_PASSWORD, RESET_PASSWORD } from \"../routes/index\";\n\nimport { Overlay } from \"../components/common/Layout\";\n\nimport bgImage from \"../static/images/auth-bg.jpg\";\n\nconst Root = styled.div`\n  background: url(${bgImage}) no-repeat top / cover;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: ${(p) => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: center;\n  }\n`;\n\nconst Pages = styled.div`\n  margin-top: 80px;\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: -120px;\n  }\n`;\n\n/**\n * Main Layout for the app, when user isn't authenticated\n */\nconst AuthenticationLayout = ({ refetch }) => {\n  return (\n    <Root>\n      <Overlay transparency=\"0.5\" />\n\n      <Container>\n        <Header refetch={refetch} />\n\n        <Pages>\n          <Switch>\n            <Route\n              exact\n              path={HOME}\n              render={() => <SignUp refetch={refetch} />}\n            />\n            <Route exact path={FORGET_PASSWORD} component={ForgetPassword} />\n            <Route\n              exact\n              path={RESET_PASSWORD}\n              render={() => <ResetPassword refetch={refetch} />}\n            />\n            <Redirect to={HOME} />\n          </Switch>\n        </Pages>\n      </Container>\n    </Root>\n  );\n};\n\nAuthenticationLayout.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default AuthenticationLayout;\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { GET_AUTH_USER } from \"../../graphql/User/index\";\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from \"../../graphql/Message/index\";\nimport { NOTIFICATION_CREATED_OR_DELETED } from \"../../graphql/Notification/index\";\n\nimport Message from \"../Message\";\nimport { Loading } from \"../common/Loading\";\nimport ApplicationLayout from \"../../layouts/ApplicationLayout\";\nimport AuthenticationLayout from \"../../layouts/AuthenticationLayout\";\n\nimport { useStore } from \"../../store\";\n\nconst App = () => {\n  const [{ message }] = useStore();\n\n  const { loading, subscribeToMore, data, refetch } = useQuery(GET_AUTH_USER);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: NOTIFICATION_CREATED_OR_DELETED,\n      updateQuery: async (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldNotifications = prev.getAuthUser.newNotifications;\n        const {\n          operation,\n          notification,\n        } = subscriptionData.data.notificationCreatedOrDeleted;\n\n        let newNotifications;\n\n        if (operation === \"CREATE\") {\n          // Don't show message notification in Header if user already is on notifications page\n          if (window.location.href.split(\"/\")[3] === \"notifications\") {\n            return prev;\n          }\n\n          // Add new notification\n          newNotifications = [notification, ...oldNotifications];\n        } else {\n          // Remove from notifications\n          const notifications = oldNotifications;\n          const index = notifications.findIndex(\n            (n) => n.id === notification.id\n          );\n          if (index > -1) {\n            notifications.splice(index, 1);\n          }\n\n          newNotifications = notifications;\n        }\n\n        // Attach new notifications to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newNotifications = newNotifications;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldConversations = prev.getAuthUser.newConversations;\n        const { newConversation } = subscriptionData.data;\n\n        // Don't show message notification in Header if user already is on messages page\n        if (window.location.href.split(\"/\")[3] === \"messages\") {\n          return prev;\n        }\n\n        // If authUser already has unseen message from that user,\n        // remove old message, so we can show the new one\n        const index = oldConversations.findIndex(\n          (u) => u.id === newConversation.id\n        );\n        if (index > -1) {\n          oldConversations.splice(index, 1);\n        }\n\n        // Merge conversations\n        const mergeConversations = [newConversation, ...oldConversations];\n\n        // Attach new conversation to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newConversations = mergeConversations;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  if (loading) return <Loading top=\"xl\" />;\n\n  return (\n    <Router>\n      <Switch>\n        {data && data.getAuthUser ? (\n          <Route\n            exact\n            render={() => <ApplicationLayout authUser={data.getAuthUser} />}\n          />\n        ) : (\n          <Route\n            exact\n            render={() => <AuthenticationLayout refetch={refetch} />}\n          />\n        )}\n      </Switch>\n      {message.content.text && (\n        <Message\n          type={message.content.type}\n          autoClose={message.content.autoClose}\n        >\n          {message.content.text}\n        </Message>\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","import dotenv from \"dotenv\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"@apollo/react-hooks\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nimport initApolloClient from \"./apollo/initApolloClient\";\nimport { AppStoreProvider } from \"./store\";\nimport App from \"./components/app/App\";\nimport theme from \"../src/utils/theme\";\n//import \"./styles/index.scss\";\nconsole.log(\"process env\", process.env);\nconsole.log(\"server url\", process.env.SERVER_URL);\nconst SERVER_URL = \"http://localhost:4000/graphql\";\n\ndotenv.config();\nconst serverUrl = process.env.REACT_APP_API_URL || SERVER_URL;\nconst client = initApolloClient(serverUrl);\n\nrender(\n  <ApolloProvider client={client}>\n    <ApolloHooksProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <AppStoreProvider>\n          <App />\n        </AppStoreProvider>\n      </ThemeProvider>\n    </ApolloHooksProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}