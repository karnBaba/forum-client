{"version":3,"sources":["styles/mixins/_icon.scss","components/common/Icon/icon.scss","apollo/initApolloClient.js","store/auth.js","constants/actions.js","store/message.js","store/store.js","graphql/Post/index.js","graphql/User/index.js","graphql/Message/index.js","graphql/Notification/index.js","utils/svgstore-path.js","components/common/Icon/index.js","utils/class-names.js","components/common/Layout.js","components/common/Form.js","utils/theme.js","constants/message.js","components/Message.js","components/common/Loading.js","components/common/Text.js","components/common/UserImage.js","components/app/Search/SearchInput.js","routes/index.js","components/app/Search/SearchResult.js","components/hooks/useClickOutside.js","components/app/Search/Search.js","components/hooks/useDebounce.js","components/app/LogOut.js","components/app/Header/HeaderUserDropDown.js","components/app/Notification.js","components/app/Header/HeaderNotificationDropDown.js","utils/time.js","components/app/Header/HeaderMessageDropDown.js","components/app/Header/HeaderDropDowns.js","components/app/Header/Header.js","constants/size.js","components/app/Navigation.js","components/app/SideBar.js","graphql/Comment/index.js","constants/notification.js","components/hooks/useNotification.js","components/PostComment.js","components/common/Head.js","graphql/Follow/index.js","components/common/Follow.js","constants/dataLimit.js","components/post/PostInfoOverlay.js","components/Comment.js","components/post/PostCommentsOverlay.js","components/post/PostOverlay.js","components/common/Confirm.js","components/common/Modal.js","graphql/Like/index.js","components/UpVote.js","components/postcard/PostCardOption.js","components/postcard/PostCard.js","components/common/InfiniteScroll.js","components/common/Skeleton.js","components/hooks/useGlobalMessage.js","components/CreatePost.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/ProfileInfo.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Posts/Posts.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Search/SearchCard.js","pages/Search/Search.js","layouts/ApplicationLayout.js","components/hooks/useWindowSize.js","pages/Auth/SignIn.js","pages/Auth/Header.js","constants/regex.js","pages/Auth/SignUp.js","pages/Auth/ForgetPassword.js","pages/Auth/ResetPassword.js","static/images/auth-bg.jpg","layouts/AuthenticationLayout.js","components/app/App.js","index.js"],"names":["module","exports","apolloCLient","createAuthenticationLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","createApolloClient","apolloConfig","authLink","uploadLink","wsLink","cache","InMemoryCache","errorLink","onError","graphQLErrors","networkError","console","log","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","split","query","getMainDefinition","kind","config","link","from","ApolloClient","initialState","user","authReducer","state","action","type","payload","messageInitialState","content","text","autoClose","messageReducer","AppStoreContext","React","createContext","store","message","auth","reducers","AppStoreProvider","children","Provider","value","useReducer","useStore","useContext","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","GET_FOLLOWED_POSTS","GET_POSTS","GET_POST","DELETE_POST","userPayload","GET_USER","GET_USER_POSTS","GET_AUTH_USER","GET_USERS","SEARCH_USERS","UPLOAD_PHOTO","SIGN_UP","SIGN_IN","REQUEST_PASSWORD_RESET","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","GET_CONVERSATIONS","IS_USER_ONLINE_SUBSCRIPTION","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED","SVGSTORE_PATH","allowedSizes","Object","keys","iconSizes","filter","size","startsWith","map","replace","Icon","className","icon","style","includes","iconClassName","args","reduce","acc","arg","processedClass","prop","length","join","classNames","displayName","name","xmlns","xmlnsXlink","focusable","xlinkHref","defaultProps","Container","styled","div","p","maxWidth","theme","screen","marginTop","spacing","padding","sm","zIndex","color","colors","radius","Content","md","xs","lg","Spacing","top","right","bottom","left","inline","hideOnSm","Overlay","transparency","Button","button","white","font","primary","main","weight","normal","disabled","grey","get","secondary","ghost","fullWidth","SecondaryButton","mainhover","InputText","input","borderColor","border","Textarea","textarea","form","family","light","bold","tiny","xxs","xl","black","success","body","dark","contrastText","hint","warning","info","50","100","200","300","400","500","600","700","800","900","shadows","none","MessageType","SUCCESS","INFO","WARNING","ERROR","fade","keyframes","Root","Close","Message","dispatch","useEffect","timer","setTimeout","clearTimeout","Colors","onClick","Load","Round","Loading","LoadingDots","Anchor","Link","Error","getHeadingStyles","css","H1","h1","H3","h2","h3","h4","Image","img","UserImage","image","src","IconContainer","Input","hideIcon","backgroundColor","SearchInput","onChange","onFocus","inputRef","placeholder","autoFocus","ref","MESSAGES","POST","StyledA","Item","Name","UserName","NoSearchResult","SearchResult","users","forMessage","key","id","to","generatePath","Routes","userId","username","fullName","useClickOutside","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","StyledLoading","Search","location","others","client","useApolloClient","useState","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","loading","setLoading","useRef","debounceSearchQuery","delay","debouncedValue","setDebouncedValue","useDebounce","pathname","a","variables","data","searchUsers","search","handleInputChange","e","withRouter","withApollo","history","removeItem","resetStore","push","CSS","HeaderUserDropDown","userRef","NotificationItem","LeftSide","Action","PostImage","notification","close","mutate","mutation","refetchQueries","updateNotificationSeen","newNotifications","follow","like","comment","author","post","Empty","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","timeAgo","timestamp","date","Date","parseInt","seconds","Math","floor","interval","Heading","User","NavLink","Info","FullName","LastMessage","CreatedAt","HeaderMessageDropDown","messageRef","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","USER","NOTIFICATION","MESSAGE","Wrapper","Hamburger","Logo","RightSide","countCSS","NotificationCount","span","MessageCount","toggleSideBar","newConversations","userImage","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","process","List","ul","ListItem","li","Navigation","exact","activeClassName","width","HEADER_HEIGHT","isOpen","active","sideBarRef","isAuthUsersProfilePage","substring","CREATE_COMMENT","DELETE_COMMENT","NotificationType","useNotifications","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","toLowerCase","isNotified","notifications","find","n","options","delete","Form","focus","setComment","buttonEl","TextareaEl","handleSubmit","createComment","preventDefault","onEnterPress","keyCode","click","authUserId","onSubmit","onKeyDown","Head","title","Helmet","CREATE_FOLLOW","DELETE_FOLLOW","isFollowing","Follow","following","f","handleClickFollow","createFollow","followerId","skip","limit","Author","PostInfoOverlay","DeleteButton","CommentSection","Comment","postAuthor","handleDeleteComment","deleteComment","Comments","usedInModal","PostCommentsOverlay","comments","Left","Right","CloseOverlay","Title","PostOverlay","closeModal","getPost","postLikes","likes","ButtonGroup","Confirm","onCancel","onOk","cancelText","okText","Modal","open","onClose","otherProps","CREATE_LIKE","DELETE_LIKE","StyledButton","UpVote","withText","hasLiked","l","handleButtonClick","createLike","FollowItem","PostCardOption","closeOption","deletePost","navigator","clipboard","writeText","TopRow","Poster","BottomRow","CountAndIcons","Count","Icons","CommentLine","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","updateQuery","prev","fetchMoreResult","previousData","fetchMoreData","set","uniqBy","windowHeight","window","innerHeight","scrollTop","documentElement","offsetHeight","scrolled","propTypes","PropTypes","array","isRequired","string","number","func","object","height","Skeleton","skeleton","i","loopSkeleton","useGlobalMessage","dispatchAction","messageType","ImagePreviewContainer","ImagePreview","Options","Buttons","CreatePost","setTitle","setImage","isFocused","setIsFocused","setError","handleReset","handleOnFocus","handleTitleChange","createPost","apiError","isShareDisabled","URL","createObjectURL","Home","modalPostId","setModalPostId","pushState","notifyOnNetworkStatusChange","networkStatus","getFollowedPosts","posts","showNextLoading","Label","label","authUser","handleImageChange","file","files","MAX_USER_PROFILE_IMAGE_SIZE","accept","htmlFor","alt","ProfileImage","FollowAndMessage","Online","ProfileInfo","useSubscription","isUserOnline","isOnline","followers","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","getUserPosts","match","params","getUser","HeadingContainer","NewMessage","SearchContainer","UserContainer","seen","FullNameUnSeen","UnSeen","useQuery","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","unseen","lastMessageSender","Conversation","MessageDate","userMessage","MessageWrapper","StyledTextarea","SendButton","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","useMutation","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","isAuthUserReceiver","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","currentDate","shiftKey","InputContainer","To","MessagesChat","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","Messages","ImageContainer","InitialLetters","PeopleCard","setColor","randomColor","random","slice","charAt","PeopleContainer","People","getUsers","Notifications","getUserNotifications","Photo","ExploreCard","openPostPopup","countLikes","countComments","imageLoaded","setImageLoaded","onload","backgroundImage","PostsContainer","Explore","getPosts","SearchCard","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","path","component","Profile","Post","ErrorMessage","ForgetPassword","refetch","emailOrUsername","password","values","setValues","handleChange","signin","setItem","errorMessage","renderErrors","StyledContainer","SignInContainer","Header","emailRegex","usernameRegex","email","signup","test","String","Text","setEmail","setMessage","handleEmailChange","requestResetPassword","requestPasswordReset","confirmPassword","url","URLSearchParams","resetPassword","err","bgImage","Pages","AuthenticationLayout","render","App","oldNotifications","getAuthUser","notificationCreatedOrDeleted","href","index","findIndex","splice","mergeConversations","SERVER_URL","dotenv","serverUrl","serverWebSoketUrl","createUploadLink","uri","WebSocketLink","timeout","reconnect","connectionParams","initApolloClient","getElementById"],"mappings":"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","file":"static/js/main.8042e1cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"#fff\",\"light\":\"#aeb6be\",\"lighter\":\"#ece6f3\",\"dark\":\"#676869\",\"darker\":\"#22263f\",\"blue\":\"#2878c4\",\"blue-light\":\"#3b98e2\",\"icon-smlst\":\"12px\",\"icon-sm\":\"16px\",\"icon-md\":\"24px\",\"icon-md-plus\":\"26px\",\"icon-lg\":\"32px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white\":\"#fff\",\"light\":\"#aeb6be\",\"lighter\":\"#ece6f3\",\"dark\":\"#676869\",\"darker\":\"#22263f\",\"blue\":\"#2878c4\",\"blue-light\":\"#3b98e2\",\"icon-smlst\":\"12px\",\"icon-sm\":\"16px\",\"icon-md\":\"24px\",\"icon-md-plus\":\"26px\",\"icon-lg\":\"32px\"};","import { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloLink, Observable, split } from \"apollo-link\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\n\r\nlet apolloCLient = null;\r\n\r\nconst createDefaultCache = () => new InMemoryCache();\r\n\r\nconst createAuthenticationLink = () => {\r\n  const request = (operation) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    });\r\n  };\r\n\r\n  return new ApolloLink(\r\n    (operation, forward) =>\r\n      new Observable((observer) => {\r\n        let handle;\r\n        Promise.resolve(operation)\r\n          .then((oper) => request(oper))\r\n          .then(() => {\r\n            handle = forward(operation).subscribe({\r\n              next: observer.next.bind(observer),\r\n              error: observer.error.bind(observer),\r\n              complete: observer.complete.bind(observer),\r\n            });\r\n          })\r\n          .catch(observer.error.bind(observer));\r\n\r\n        return () => {\r\n          if (handle) handle.unsubscribe();\r\n        };\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Helper functions that handles error cases\r\n */\r\nconst handleErrors = () => {\r\n  return onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors) {\r\n      console.log(\"graphQLErrors\", graphQLErrors);\r\n    }\r\n    if (networkError) {\r\n      console.log(\"networkError\", networkError);\r\n    }\r\n  });\r\n};\r\n\r\nconst createApolloClient = (apolloConfig) => {\r\n  const { authLink, uploadLink, wsLink } = apolloConfig;\r\n  const cache = createDefaultCache();\r\n  const errorLink = handleErrors();\r\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\r\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\r\n  const terminatingLink = split(\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n    },\r\n    wsLink,\r\n    uploadLink\r\n  );\r\n\r\n  const config = {\r\n    cache,\r\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\r\n  };\r\n\r\n  return new ApolloClient(config);\r\n};\r\n\r\nexport default (serverUrl) => {\r\n  const serverWebSoketUrl =\r\n    serverUrl &&\r\n    serverUrl.replace(\"https://\", \"ws://\").replace(\"http://\", \"ws://\");\r\n  const authLink = createAuthenticationLink();\r\n  const uploadLink = createUploadLink({ uri: serverUrl });\r\n\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  const wsLink = new WebSocketLink({\r\n    uri: serverWebSoketUrl,\r\n    options: {\r\n      timeout: process.env.REACT_APP_WEBSOCKET_TIMEOUT,\r\n      reconnect: true,\r\n      connectionParams: {\r\n        authorization: token,\r\n      },\r\n    },\r\n  });\r\n\r\n  const apolloConfig = {\r\n    authLink,\r\n    uploadLink,\r\n    wsLink,\r\n  };\r\n\r\n  if (!apolloCLient) {\r\n    apolloCLient = createApolloClient(apolloConfig);\r\n  }\r\n  return apolloCLient;\r\n};\r\n","import { SET_AUTH_USER, CLEAR_AUTH_USER } from \"../constants/actions\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CLEAR_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//Actions\r\n\r\nexport const SET_AUTH_USER = \"SET_AUTH_USER\";\r\nexport const CLEAR_AUTH_USER = \"CLEAR_AUTH_USER\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../constants/actions\";\r\n/**\r\n * Initial State\r\n */\r\nexport const messageInitialState = {\r\n  content: {\r\n    type: \"\",\r\n    text: \"\",\r\n    autoClose: true\r\n  }\r\n};\r\n\r\n/**\r\n * Message Reducer\r\n */\r\nexport const messageReducer = (state = messageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        content: {\r\n          type: action.payload.type,\r\n          text: action.payload.text,\r\n          autoClose: action.payload.autoClose\r\n        }\r\n      };\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        ...messageInitialState\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport { initialState, authReducer } from \"./auth\";\r\nimport { messageReducer, messageInitialState } from \"./message\";\r\n\r\nconst AppStoreContext = React.createContext();\r\n\r\nconst store = {\r\n  message: messageInitialState,\r\n  auth: initialState,\r\n};\r\n\r\nconst reducers = (store, action) => ({\r\n  message: messageReducer(store.message, action),\r\n  auth: authReducer(store.auth, action),\r\n});\r\n\r\nexport const AppStoreProvider = ({ children }) => (\r\n  <AppStoreContext.Provider value={useReducer(reducers, store)}>\r\n    {children}\r\n  </AppStoreContext.Provider>\r\n);\r\n\r\nexport const useStore = () => useContext(AppStoreContext);\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Records to select from post comments\r\n */\r\nexport const postCommentsPayload = `\r\n  comments {\r\n    id\r\n    comment\r\n    author {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post author\r\n */\r\nexport const postAuthorPayload = `\r\n  author {\r\n    id\r\n    username\r\n    fullName\r\n    image\r\n    following {\r\n      id\r\n      user\r\n    }\r\n    followers {\r\n      id\r\n      user\r\n    }\r\n    notifications {\r\n      id\r\n      author {\r\n        id\r\n        username\r\n      }\r\n      follow {\r\n        id\r\n      }\r\n      like {\r\n        id\r\n      }\r\n      comment {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post likes\r\n */\r\nexport const postLikesPayload = `\r\n  likes {\r\n    id\r\n    user\r\n    post\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a post\r\n */\r\nexport const CREATE_POST = gql`\r\n  mutation($input: CreatePostInput!) {\r\n    createPost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all posts from followed users\r\n */\r\nexport const GET_FOLLOWED_POSTS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available posts\r\n */\r\nexport const GET_POSTS = gql`\r\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\r\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets specific post by id\r\n */\r\nexport const GET_POST = gql`\r\n  query($id: ID!) {\r\n    getPost(id: $id) {\r\n      id\r\n      title\r\n      image\r\n      createdAt\r\n      ${postAuthorPayload}\r\n      ${postCommentsPayload}\r\n      ${postLikesPayload}\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a post\r\n */\r\nexport const DELETE_POST = gql`\r\n  mutation($input: DeletePostInput!) {\r\n    deletePost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\nimport {\r\n  postCommentsPayload,\r\n  postAuthorPayload,\r\n  postLikesPayload,\r\n} from \"../Post/index\";\r\n\r\n/**\r\n * Records to select from user\r\n */\r\nconst userPayload = `\r\n  id\r\n  username\r\n  email\r\n  fullName\r\n  image\r\n  imagePublicId\r\n  coverImage\r\n  coverImagePublicId\r\n  createdAt\r\n`;\r\n\r\n/**\r\n * Gets specific user by username\r\n */\r\nexport const GET_USER = gql`\r\n  query($username: String, $id: ID) {\r\n    getUser(username: $username, id: $id) {\r\n      ${userPayload}\r\n      isOnline\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n      notifications {\r\n        id\r\n        author {\r\n          id\r\n          username\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        like {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user posts\r\n */\r\nexport const GET_USER_POSTS = gql`\r\n  query($username: String!, $skip: Int, $limit: Int) {\r\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets authenticated user\r\n */\r\nexport const GET_AUTH_USER = gql`\r\n  query {\r\n    getAuthUser {\r\n      ${userPayload}\r\n      newNotifications {\r\n        id\r\n        createdAt\r\n        author {\r\n          id\r\n          fullName\r\n          username\r\n          image\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n        like {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n      }\r\n      newConversations {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        lastMessage\r\n        lastMessageCreatedAt\r\n      }\r\n      likes {\r\n        id\r\n        user\r\n        post\r\n      }\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n        user\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available users\r\n */\r\nexport const GET_USERS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      users {\r\n        id\r\n        fullName\r\n        username\r\n        image\r\n        following {\r\n          id\r\n          user\r\n        }\r\n        followers {\r\n          id\r\n        }\r\n        notifications {\r\n          id\r\n          author {\r\n            id\r\n            username\r\n          }\r\n          follow {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Searches users by username or fullName\r\n */\r\nexport const SEARCH_USERS = gql`\r\n  query($searchQuery: String!) {\r\n    searchUsers(searchQuery: $searchQuery) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Uploads user photo\r\n */\r\nexport const UPLOAD_PHOTO = gql`\r\n  mutation($input: UploadUserPhotoInput!) {\r\n    uploadUserPhoto(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign up user\r\n */\r\nexport const SIGN_UP = gql`\r\n  mutation($input: SignUpInput!) {\r\n    signup(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign in user\r\n */\r\nexport const SIGN_IN = gql`\r\n  mutation($input: SignInInput!) {\r\n    signin(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Request reset password\r\n */\r\nexport const REQUEST_PASSWORD_RESET = gql`\r\n  mutation($input: RequestPasswordResetInput!) {\r\n    requestPasswordReset(input: $input) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Verify reset password token\r\n */\r\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\r\n  query($email: String!, $token: String!) {\r\n    verifyResetPasswordToken(email: $email, token: $token) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password\r\n */\r\nexport const RESET_PASSWORD = gql`\r\n  mutation($input: ResetPasswordInput!) {\r\n    resetPassword(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * People suggestions for auth user\r\n */\r\nexport const USER_SUGGESTIONS = gql`\r\n  query($userId: String!) {\r\n    suggestPeople(userId: $userId) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get users with whom authUser had a conversation\r\n */\r\nexport const GET_CONVERSATIONS = gql`\r\n  query($authUserId: ID!) {\r\n    getConversations(authUserId: $authUserId) {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Checks if user is online in real time\r\n */\r\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\r\n      userId\r\n      isOnline\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Gets user's specific conversation\r\n */\r\nexport const GET_MESSAGES = gql`\r\n  query($authUserId: ID!, $userId: ID!) {\r\n    getMessages(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user's specific conversation in real time\r\n */\r\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    messageCreated(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a message\r\n */\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation($input: CreateMessageInput!) {\r\n    createMessage(input: $input) {\r\n      id\r\n      isFirstMessage\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's new conversation in real time\r\n */\r\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newConversation {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates message seen property\r\n */\r\nexport const UPDATE_MESSAGE_SEEN = gql`\r\n  mutation($input: UpdateMessageSeenInput!) {\r\n    updateMessageSeen(input: $input)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Records to select from notifications\r\n */\r\nconst notificationPayload = `\r\n  id\r\n  createdAt\r\n  author {\r\n    id\r\n    fullName\r\n    username\r\n    image\r\n  }\r\n  follow {\r\n    id\r\n  }\r\n  comment {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n  like {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a notification for user\r\n */\r\nexport const CREATE_NOTIFICATION = gql`\r\n  mutation($input: CreateNotificationInput!) {\r\n    createNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a notification\r\n */\r\nexport const DELETE_NOTIFICATION = gql`\r\n  mutation($input: DeleteNotificationInput!) {\r\n    deleteNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets notifications for user\r\n */\r\nexport const GET_USER_NOTIFICATION = gql`\r\n  query($userId: ID!, $skip: Int, $limit: Int) {\r\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      notifications {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates notification seen property\r\n */\r\nexport const UPDATE_NOTIFICATION_SEEN = gql`\r\n  mutation($input: UpdateNotificationSeenInput!) {\r\n    updateNotificationSeen(input: $input)\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's notifications in real time\r\n */\r\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\r\n  subscription {\r\n    notificationCreatedOrDeleted {\r\n      operation\r\n      notification {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const SVGSTORE_FILENAME = \"solid.svg\";\r\nconst SVGSTORE_PATH = `/static/fonts/icons/${SVGSTORE_FILENAME}`;\r\nexport default SVGSTORE_PATH;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import \"svgxuse\";\r\nimport classNames from \"../../../utils/class-names\";\r\nimport SVGSTORE_PATH from \"../../../utils/svgstore-path\";\r\nimport iconSizes from \"../../../styles/mixins/_icon.scss\";\r\nimport \"./icon.scss\";\r\n\r\nconst DEFAULT_ICON_SIZE = \"sm\";\r\nconst iconPrefix = \"icon-\";\r\n\r\nconst allowedSizes = Object.keys(iconSizes)\r\n  .filter((size) => size.startsWith(iconPrefix))\r\n  .map((size) => size.replace(iconPrefix, \"\"));\r\n\r\nexport const Icon = ({ className, icon, style, size }) => {\r\n  if (!allowedSizes.includes(size)) {\r\n    size = DEFAULT_ICON_SIZE;\r\n  }\r\n\r\n  const iconClassName = classNames(Icon.displayName, className, {\r\n    [`${Icon.displayName}--size-${size}`]: allowedSizes.includes(size),\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      className={`${iconClassName}`}\r\n      name={`icon-${icon}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      focusable={false}\r\n      style={style}\r\n    >\r\n      <use xlinkHref={`${SVGSTORE_PATH}#${icon}`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nIcon.displayName = \"Icon\";\r\n\r\nIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  icon: PropTypes.string.isRequired,\r\n  style: PropTypes.object,\r\n  size: PropTypes.oneOf(allowedSizes),\r\n};\r\n\r\nIcon.defaultProps = {\r\n  className: \"\",\r\n  style: {},\r\n  size: \"md\",\r\n};\r\n","export default (...args) =>\r\n  args\r\n    .reduce((acc, arg) => {\r\n      if (!arg) {\r\n        return acc;\r\n      }\r\n\r\n      if (typeof arg === \"object\") {\r\n        const processedClass = Object.keys(arg).filter(prop =>\r\n          typeof arg[prop] == \"function\" ? arg[prop]() : arg[prop]\r\n        );\r\n        return processedClass.length > 0 ? [...acc, ...processedClass] : acc;\r\n      }\r\n      return [...acc, arg];\r\n    }, [])\r\n    .join(\" \");\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: ${(p) => p.maxWidth && p.theme.screen[p.maxWidth]};\r\n  margin-top: ${(p) => (p.marginTop ? p.theme.spacing[p.marginTop] : 0)};\r\n  padding: ${(p) =>\r\n    p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\r\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  background-color: ${(p) => p.color && p.theme.colors[p.color]};\r\n  border-radius: ${(p) => p.radius && p.theme.radius[p.radius]};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  min-height: 500px;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => p.theme.screen.xs};\r\n  }\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: ${(p) => p.theme.screen.sm};\r\n  }\r\n`;\r\n\r\nexport const Spacing = styled.div`\r\n  ${(p) => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\r\n  ${(p) => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\r\n  ${(p) => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\r\n  ${(p) => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\r\n  ${(p) => p.inline && `display: inline-block;`}\r\n  @media (max-width: ${(p) => p.theme.screen.sm}) {\r\n    ${(p) =>\r\n      p.hideOnSm &&\r\n      `\r\n      display: none;\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: ${(p) => p.theme.zIndex.md};\r\n  background-color: rgba(\r\n    0,\r\n    0,\r\n    0,\r\n    ${(p) => (p.transparency ? p.transparency : \"0.8\")}\r\n  );\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { get } from \"lodash\";\r\n\r\n// prettier-ignore\r\n\r\n/**\r\n * Button\r\n *\r\n * @param {string} size\r\n * @param {string} color\r\n * @param {boolean} disabled\r\n * @param {boolean} text, style button as a text\r\n */\r\nexport const Button = styled.button`\r\n  letter-spacing: 0.5px;\r\n  outline: 0;\r\n  transition: opacity 0.1s;\r\n  border: 0;\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\r\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.primary.main};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\r\n  white-space: nowrap;\r\n  align-self: flex-start;\r\n  ${p => p.disabled && `\r\n    background-color: ${p.theme.colors.grey[500]};\r\n    cursor: not-allowed;\r\n  `};\r\n  ${p => !p.disabled && `\r\n    &:hover {\r\n      opacity .9;\r\n      cursor: pointer;\r\n    }\r\n  `};\r\n  ${p => p.text && `\r\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n  `};\r\n   ${p => p.ghost && `\r\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    padding: 0;\r\n    text-align: left;\r\n  `};\r\n  ${p => p.fullWidth && `\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nexport const SecondaryButton = styled.button`\r\n  letter-spacing: 0.5px;\r\n  outline: 0;\r\n  transition: opacity 0.1s;\r\n  border: 0;\r\n  color: ${(p) => p.theme.colors.white};\r\n  font-size: ${(p) =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\r\n  background-color: ${(p) =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.secondary.main};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: ${(p) =>\r\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\r\n  white-space: nowrap;\r\n  align-self: flex-start;\r\n  ${(p) =>\r\n    p.disabled &&\r\n    `\r\n    background-color: ${p.theme.colors.grey[500]};\r\n    cursor: not-allowed;\r\n  `};\r\n  ${(p) =>\r\n    !p.disabled &&\r\n    `\r\n    &:hover {\r\n      opacity .9;\r\n      cursor: pointer;\r\n      background-color: ${(p) =>\r\n        p.color ? p.theme.colors[p.color] : p.theme.colors.secondary.mainhover};\r\n    }\r\n  `};\r\n  ${(p) =>\r\n    p.text &&\r\n    `\r\n    color: ${\r\n      p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary\r\n    };\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n  `};\r\n  ${(p) =>\r\n    p.ghost &&\r\n    `\r\n    color: ${\r\n      p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary\r\n    };\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    padding: 0;\r\n    text-align: left;\r\n  `};\r\n  ${(p) =>\r\n    p.fullWidth &&\r\n    `\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\n/**\r\n * Input type text\r\n */\r\nexport const InputText = styled.input`\r\n  outline: 0;\r\n  height: 36px;\r\n  width: 100%;\r\n  transition: border 0.1s;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n  border: 1px solid\r\n    ${(p) =>\r\n      p.borderColor\r\n        ? p.theme.colors[p.borderColor]\r\n        : p.theme.colors.border.main};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n  &:focus {\r\n    border-color: ${(p) => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Textarea\r\n */\r\nexport const Textarea = styled.textarea`\r\n  outline: 0;\r\n  height: 50px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 0;\r\n  padding-left: ${(p) => p.theme.spacing.sm};\r\n  padding-top: ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  &::placeholder {\r\n    color: ${(p) => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Form component\r\n */\r\nexport const Form = styled.form`\r\n  display: block;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding: ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n","/**\r\n * Theme\r\n */\r\n\r\nexport default {\r\n  /**\r\n   * Font\r\n   */\r\n  font: {\r\n    family: \"Arial, Helvetica, sans-serif\",\r\n    weight: {\r\n      light: \"300\",\r\n      normal: \"400\",\r\n      bold: \"600\",\r\n    },\r\n    size: {\r\n      tiny: \"11px\",\r\n      xxs: \"13px\",\r\n      xs: \"14px\",\r\n      sm: \"16px\",\r\n      md: \"18px\",\r\n      lg: \"20px\",\r\n      xl: \"34px\",\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Colors\r\n   */\r\n  colors: {\r\n    black: \"#000000\",\r\n    white: \"#fff\",\r\n    success: \"#34a853\",\r\n    body: \"#fcfbfe\",\r\n\r\n    primary: {\r\n      light: \"#7986cb\",\r\n      main: \"#2178c4\",\r\n      dark: \"#303f9f\",\r\n      contrastText: \"#fff\",\r\n    },\r\n\r\n    secondary: {\r\n      light: \"#ff4081\",\r\n      main: \"#90EE90\",\r\n      dark: \"#c51162\",\r\n      contrastText: \"#fff\",\r\n      mainhover: \"#3CB37\",\r\n    },\r\n\r\n    text: {\r\n      primary: \"#22263f\",\r\n      secondary: \"rgba(0, 0, 0, 0.54)\",\r\n      disabled: \"rgba(0, 0, 0, 0.38)\",\r\n      hint: \"rgba(0, 0, 0, 0.38)\",\r\n    },\r\n\r\n    border: {\r\n      light: \"#f5f5f5\",\r\n      main: \"#e0e0e0\",\r\n      dark: \"#bdbdbd\",\r\n    },\r\n\r\n    error: {\r\n      light: \"#e57373\",\r\n      main: \"#f44336\",\r\n      dark: \"#d32f2f\",\r\n      contrastText: \"#fff\",\r\n    },\r\n\r\n    warning: \"#FFB818\",\r\n\r\n    info: \"#4169E1\",\r\n\r\n    grey: {\r\n      50: \"#fafafa\",\r\n      100: \"#f5f5f5\",\r\n      200: \"#eeeeee\",\r\n      300: \"#e0e0e0\",\r\n      400: \"#bdbdbd\",\r\n      500: \"#9e9e9e\",\r\n      600: \"#757575\",\r\n      700: \"#616161\",\r\n      800: \"#424242\",\r\n      900: \"#212121\",\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Shadows\r\n   */\r\n  shadows: {\r\n    sm: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\r\n    md: \"rgba(0, 0, 0, 0.3) 0px 1px 8px 0px\",\r\n    lg: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\",\r\n    xl: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n  },\r\n\r\n  /**\r\n   * Breakpoints\r\n   */\r\n  screen: {\r\n    xs: \"540px\",\r\n    sm: \"640px\",\r\n    md: \"1007px\",\r\n    lg: \"1100px\",\r\n    xl: \"1230px\",\r\n  },\r\n\r\n  /**\r\n   * Spacing\r\n   */\r\n  spacing: {\r\n    none: 0,\r\n    xxs: \"5px\",\r\n    xs: \"10px\",\r\n    sm: \"20px\",\r\n    md: \"30px\",\r\n    lg: \"40px\",\r\n    xl: \"60px\",\r\n  },\r\n\r\n  /**\r\n   * Radius\r\n   */\r\n  radius: {\r\n    sm: \"3px\",\r\n    md: \"6px\",\r\n    lg: \"12px\",\r\n  },\r\n\r\n  /**\r\n   * zIndex\r\n   */\r\n  zIndex: {\r\n    xs: 10,\r\n    sm: 20,\r\n    md: 30,\r\n    lg: 40,\r\n    xl: 50,\r\n  },\r\n};\r\n","export const MessageType = {\r\n  SUCCESS: \"SUCCESS\",\r\n  INFO: \"INFO\",\r\n  WARNING: \"WARNING\",\r\n  ERROR: \"ERROR\"\r\n};\r\n\r\nexport const allMessageTypes = Object.keys(MessageType);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport { Icon } from \"./common/Icon\";\r\nimport { Spacing } from \"./common/Layout\";\r\nimport { Button } from \"./common/Form\";\r\n\r\nimport theme from \"../utils/theme\";\r\n\r\nimport { allMessageTypes } from \"../constants/message\";\r\n\r\nimport { useStore } from \"../store\";\r\nimport { CLEAR_MESSAGE } from \"../constants/actions\";\r\n\r\nconst fade = keyframes`\r\n  from {\r\n    bottom: -60px;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    bottom: 0;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n/**\r\n * Default styles for message\r\n */\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  box-shadow: ${(p) => p.theme.shadows.md};\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${(p) => p.color && p.color};\r\n  animation: ${fade} 0.3s ease-out forwards;\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst Close = styled(Button)`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 24px;\r\n`;\r\n\r\n/**\r\n * Displays global message as feedback in response to user operations\r\n */\r\nconst Message = ({ children, type, autoClose }) => {\r\n  const [, dispatch] = useStore();\r\n\r\n  useEffect(() => {\r\n    if (autoClose) {\r\n      const timer = setTimeout(() => {\r\n        dispatch({ type: CLEAR_MESSAGE });\r\n      }, 5000);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [dispatch, autoClose]);\r\n\r\n  const { success, info, warning, error } = theme.colors;\r\n\r\n  const Colors = {\r\n    SUCCESS: success,\r\n    INFO: info,\r\n    WARNING: warning,\r\n    ERROR: error.main,\r\n  };\r\n\r\n  const MessageType = (type) => {\r\n    const icons = {\r\n      SUCCESS: <Icon icon=\"success\" />,\r\n      INFO: <Icon icon=\"info\" />,\r\n      WARNING: <Icon icon=\"warning\" />,\r\n      ERROR: <Icon icon=\"error\" />,\r\n    };\r\n\r\n    return icons[type];\r\n  };\r\n\r\n  return (\r\n    <Root color={Colors[type]}>\r\n      {MessageType(type)}\r\n      <Spacing left={type && \"xs\"}>{children}</Spacing>\r\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\r\n        <Icon icon=\"close\" />\r\n      </Close>\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  autoClose: true,\r\n};\r\n\r\nMessage.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  type: PropTypes.oneOf(allMessageTypes),\r\n  autoClose: PropTypes.bool,\r\n};\r\n\r\nexport default Message;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\n// prettier-ignore\r\n\r\nconst Load = keyframes`\r\n  0% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  5%,\r\n  95% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  10%,\r\n  59% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\r\n  }\r\n  20% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\r\n  }\r\n  38% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\r\n  }\r\n  100% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n`;\r\n\r\nconst Round = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays loading spinner\r\n */\r\nexport const Loading = styled.div`\r\n  text-indent: -9999em;\r\n  overflow: hidden;\r\n  width: 1em;\r\n  height: 1em;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\r\n  margin: 0 auto;\r\n  margin-top: ${(p) => p.top && p.theme.spacing[p.top]};\r\n  margin-bottom: ${(p) => p.bottom && p.theme.spacing[p.bottom]};\r\n  color: ${(p) =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n  font-size: ${(p) =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\r\n`;\r\n\r\n/**\r\n * Displays loading dots\r\n */\r\nexport const LoadingDots = styled.div`\r\n  &::after {\r\n    display: block;\r\n    animation: ellipsis 1s infinite;\r\n    content: \".\";\r\n    text-align: center;\r\n    color: ${(p) =>\r\n      p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n    font-size: ${(p) => p.theme.font.size.xl};\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: \".\";\r\n    }\r\n    33% {\r\n      content: \"..\";\r\n    }\r\n    66% {\r\n      content: \"...\";\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Wrapper around React Router's Link component, that uses theme styling\r\n *\r\n * @param {string} color\r\n * @param {string} weight\r\n * @param {string} size\r\n */\r\nexport const Anchor = styled(Link)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  display: inline-block;\r\n  color: ${(p) =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n  font-weight: ${(p) =>\r\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\r\n  font-size: ${(p) =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for wrapping error messages\r\n */\r\nexport const Error = styled.div`\r\n  color: ${(p) =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.error.main};\r\n  font-size: ${(p) =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\r\n`;\r\n\r\n/**\r\n * Helper function for adding styles to Heading components\r\n *\r\n * @param {string} size, size of text\r\n */\r\nconst getHeadingStyles = (size) => css`\r\n  margin: 0;\r\n  font-size: ${size};\r\n  font-family: ${(p) => p.theme.font.family};\r\n  font-weight: ${(p) => p.theme.font.weight.normal};\r\n  color: ${(p) =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary};\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  ${getHeadingStyles((p) => p.theme.font.size.xl)};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  ${getHeadingStyles((p) => p.theme.font.size.lg)};\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  ${getHeadingStyles((p) => p.theme.font.size.xs)};\r\n`;\r\n\r\nexport const H4 = styled.h4`\r\n  ${getHeadingStyles((p) => p.theme.font.size.tiny)};\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Icon } from \"./Icon\";\r\n\r\nconst Root = styled.div`\r\n  width: ${(p) => (p.size ? `${p.size}px` : \"30px\")};\r\n  height: ${(p) => (p.size ? `${p.size}px` : \"30px\")};\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Component for rendering user's image\r\n */\r\nconst UserImage = ({ size, image }) => (\r\n  <Root size={size}>\r\n    {image ? (\r\n      <Image src={image} />\r\n    ) : (\r\n      <Icon icon=\"user\" className=\"\" size={size} />\r\n    )}\r\n  </Root>\r\n);\r\n\r\nUserImage.propTypes = {\r\n  size: PropTypes.number,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default UserImage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Icon } from \"../../common/Icon/index\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: 0;\r\n  height: 40px;\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  padding-left: ${(p) =>\r\n    p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg};\r\n  padding-right: ${(p) => p.theme.spacing.lg};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  background-color: ${(p) =>\r\n    p.backgroundColor\r\n      ? p.theme.colors[p.backgroundColor]\r\n      : p.theme.colors.grey[200]};\r\n  transition: border-color 0.1s;\r\n  &:focus {\r\n    &::placeholder {\r\n      color: ${(p) => p.theme.colors.grey[500]};\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering search input\r\n */\r\nconst SearchInput = ({\r\n  onChange,\r\n  onFocus,\r\n  value,\r\n  inputRef,\r\n  backgroundColor,\r\n  placeholder,\r\n  hideIcon,\r\n  children,\r\n  autoFocus,\r\n}) => {\r\n  return (\r\n    <Root>\r\n      {!hideIcon && (\r\n        <IconContainer>\r\n          <Icon icon=\"search\" />\r\n        </IconContainer>\r\n      )}\r\n\r\n      <Input\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        value={value}\r\n        ref={inputRef}\r\n        backgroundColor={backgroundColor}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        hideIcon={hideIcon}\r\n        autoFocus={autoFocus}\r\n      />\r\n\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n  ref: PropTypes.object,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  hideIcon: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default SearchInput;\r\n","//Routes\r\n\r\nexport const HOME = \"/\";\r\nexport const SEARCH = \"/search\";\r\nexport const USER_PROFILE = \"/:username\";\r\nexport const PEOPLE = \"/people\";\r\nexport const NOTIFICATIONS = \"/notifications\";\r\nexport const MESSAGES = \"/messages/:userId\";\r\nexport const POST = \"/post/:id\";\r\nexport const FORGET_PASSWORD = \"/forget\";\r\nexport const RESET_PASSWORD = \"reset\";\r\nexport const NEW_ID_VALUE = \"new\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\n\r\nimport { Spacing } from \"../../common/Layout\";\r\nimport { Anchor } from \"../../common/Text\";\r\nimport UserImage from \"../../common/UserImage\";\r\n\r\nimport * as Routes from \"../../../routes\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  max-height: 350px;\r\n  min-height: 40px;\r\n  overflow: auto;\r\n  position: absolute;\r\n  top: 50px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(Anchor)`\r\n  display: block;\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst NoSearchResult = styled.div`\r\n  text-align: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Displays search result, meant to be used in Search component\r\n */\r\nconst SearchResult = ({ users, forMessage }) => {\r\n  if (users.length < 1) {\r\n    return (\r\n      <Root>\r\n        <NoSearchResult>No search results.</NoSearchResult>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      {users.map((user) => (\r\n        <StyledA\r\n          key={user.id}\r\n          to={\r\n            forMessage\r\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\r\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\r\n          }\r\n        >\r\n          <Item>\r\n            <UserImage image={user.image} size={34} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{user.fullName}</Name>\r\n              <UserName>@{user.username}</UserName>\r\n            </Spacing>\r\n          </Item>\r\n        </StyledA>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchResult.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  forMessage: PropTypes.bool,\r\n};\r\n\r\nexport default SearchResult;\r\n","import { useEffect } from 'react';\n\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useApolloClient } from \"@apollo/react-hooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Loading } from \"../../common/Loading\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport SearchResult from \"./SearchResult\";\r\n\r\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\r\nimport { useDebounce } from \"../../hooks/useDebounce\";\r\n\r\nimport { SEARCH_USERS } from \"../../../graphql/User/index\";\r\n\r\nconst StyledLoading = styled(Loading)`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 16px;\r\n`;\r\n\r\n/**\r\n * Renders search input\r\n */\r\nconst Search = ({\r\n  location,\r\n  hideIcon,\r\n  forMessage,\r\n  backgroundColor,\r\n  placeholder,\r\n  autoFocus,\r\n  ...others\r\n}) => {\r\n  const client = useApolloClient();\r\n\r\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Close search result on click outside\r\n  const inputRef = useRef(null);\r\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\r\n\r\n  // Debounce search query value\r\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\r\n\r\n  useEffect(() => {\r\n    // Clear search input value, after location change\r\n    setSearchQuery(\"\");\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await client.query({\r\n        query: SEARCH_USERS,\r\n        variables: { searchQuery: debounceSearchQuery },\r\n      });\r\n\r\n      setUsers(data.searchUsers);\r\n      setLoading(false);\r\n\r\n      const openSearchResult = debounceSearchQuery !== \"\";\r\n      setIsOpenSearchResult(openSearchResult);\r\n    };\r\n\r\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\r\n\r\n    return () => setLoading(false);\r\n  }, [debounceSearchQuery, client]);\r\n\r\n  const handleInputChange = async (e) => {\r\n    // Trim white space only from beginning\r\n    const value = e.target.value.replace(/^\\s+/g, \"\");\r\n    setSearchQuery(value);\r\n    if (value) {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\r\n\r\n  return (\r\n    <SearchInput\r\n      onChange={handleInputChange}\r\n      onFocus={handleInputFocus}\r\n      value={searchQuery}\r\n      inputRef={inputRef}\r\n      placeholder={placeholder}\r\n      hideIcon={hideIcon}\r\n      backgroundColor={backgroundColor}\r\n      autoFocus={autoFocus}\r\n      {...others}\r\n    >\r\n      {loading && <StyledLoading size=\"xxs\" />}\r\n\r\n      {isOpenSearchResult && (\r\n        <SearchResult users={users} forMessage={forMessage} />\r\n      )}\r\n    </SearchInput>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  hideIcon: PropTypes.bool,\r\n  forMessage: PropTypes.bool,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\n\n/**\n * React hook for debouncing\n */\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Button } from \"../common/Form\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nimport { useStore } from \"../../store\";\r\nimport { CLEAR_AUTH_USER } from \"../../constants/actions\";\r\n\r\n/**\r\n * Component that Logout out the user\r\n */\r\nconst LogOut = ({ client, history }) => {\r\n  const [, dispatch] = useStore();\r\n\r\n  const handleLogOut = () => {\r\n    dispatch({ type: CLEAR_AUTH_USER });\r\n    localStorage.removeItem(\"token\");\r\n    client.resetStore();\r\n    history.push(Routes.HOME);\r\n  };\r\n\r\n  return (\r\n    <Button text onClick={handleLogOut}>\r\n      LogOut\r\n    </Button>\r\n  );\r\n};\r\n\r\nLogOut.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withApollo(LogOut));\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport LogOut from \"../LogOut\";\r\nimport { Anchor } from \"../../common/Text\";\r\n\r\nimport * as Routes from \"../../../routes\";\r\n\r\nimport { useStore } from \"../../../store\";\r\n\r\nconst Root = styled.div`\r\n  text-align: center;\r\n  position: absolute;\r\n  background-color: white;\r\n  line-height: ${(p) => p.theme.spacing.md};\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n`;\r\n\r\nconst CSS = css`\r\n  transition: background-color 0.1s;\r\n  display: block;\r\n  padding: ${(p) => p.theme.spacing.sm} ${(p) => p.theme.spacing.xl};\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n    color: ${(p) => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\nconst Link = styled(Anchor)`\r\n  ${CSS};\r\n`;\r\n\r\nconst Item = styled.div`\r\n  ${CSS};\r\n`;\r\n\r\n/**\r\n * Component that renders Header User's dropdown\r\n */\r\nconst HeaderUserDropDown = ({ userRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root ref={userRef}>\r\n      <Link\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: auth.user.username,\r\n        })}\r\n      >\r\n        My Profile\r\n      </Link>\r\n\r\n      <Item>\r\n        <LogOut />\r\n      </Item>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderUserDropDown.propTypes = {\r\n  userRef: PropTypes.object,\r\n};\r\n\r\nexport default HeaderUserDropDown;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { withApollo } from \"react-apollo\";\r\n\r\nimport { Anchor } from \"../common/Text\";\r\nimport { Spacing } from \"../common/Layout\";\r\nimport UserImage from \"../common/UserImage\";\r\n\r\nimport { useClickOutside } from \"../hooks/useClickOutside\";\r\n\r\nimport { GET_AUTH_USER } from \"../../graphql/User/index\";\r\nimport { UPDATE_NOTIFICATION_SEEN } from \"../../graphql/Notification/index\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst NotificationItem = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  &:last-child {\r\n    border-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  margin-left: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst PostImage = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  display: block;\r\n`;\r\n\r\n/**\r\n * Renders user notifications\r\n */\r\nconst Notification = ({ notification, close, client }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const ref = React.useRef(null);\r\n\r\n  useClickOutside(ref, close);\r\n\r\n  useEffect(() => {\r\n    const updateNotificationSeen = async () => {\r\n      try {\r\n        await client.mutate({\r\n          mutation: UPDATE_NOTIFICATION_SEEN,\r\n          variables: {\r\n            input: {\r\n              userId: auth.user.id,\r\n            },\r\n          },\r\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\r\n        });\r\n      } catch (err) {}\r\n    };\r\n\r\n    updateNotificationSeen();\r\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\r\n\r\n  if (!notification.follow && !notification.like && !notification.comment) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NotificationItem ref={ref}>\r\n      <Anchor\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: notification.author.username,\r\n        })}\r\n      >\r\n        <LeftSide>\r\n          <UserImage image={notification.author.image} size={34} />\r\n\r\n          <Spacing left=\"xs\" />\r\n\r\n          <Name>{notification.author.fullName}</Name>\r\n        </LeftSide>\r\n      </Anchor>\r\n\r\n      {notification.follow && <Action>started following you</Action>}\r\n\r\n      {notification.like && (\r\n        <Action>\r\n          likes your photo\r\n          <Anchor\r\n            to={generatePath(Routes.POST, { id: notification.like.post.id })}\r\n          >\r\n            <PostImage>\r\n              <Image src={notification.like.post.image} />\r\n            </PostImage>\r\n          </Anchor>\r\n        </Action>\r\n      )}\r\n\r\n      {notification.comment && (\r\n        <Action>\r\n          commented on your photo\r\n          <Anchor\r\n            to={generatePath(Routes.POST, { id: notification.comment.post.id })}\r\n          >\r\n            <PostImage>\r\n              <Image src={notification.comment.post.image} />\r\n            </PostImage>\r\n          </Anchor>\r\n        </Action>\r\n      )}\r\n    </NotificationItem>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  close: PropTypes.func,\r\n};\r\n\r\nexport default withApollo(Notification);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Notification from \"../Notification\";\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: ${(p) => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Notification's dropdown\r\n */\r\nconst HeaderNotificationDropDown = ({\r\n  notificationRef,\r\n  dropdownData,\r\n  closeDropDown,\r\n}) => {\r\n  return (\r\n    <Root ref={notificationRef}>\r\n      {!dropdownData.length ? (\r\n        <Empty>No new notifications.</Empty>\r\n      ) : (\r\n        dropdownData.map((notification) => (\r\n          <Notification\r\n            key={notification.id}\r\n            notification={notification}\r\n            close={closeDropDown}\r\n          />\r\n        ))\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderNotificationDropDown.propTypes = {\r\n  notificationRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderNotificationDropDown;\r\n","export const timeAgo = (timestamp) => {\r\n  const date = new Date(parseInt(timestamp));\r\n\r\n  const seconds = Math.floor((new Date() - date) / 1000);\r\n  let interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return interval + \" years\";\r\n  }\r\n\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + \" months\";\r\n  }\r\n\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + \" days\";\r\n  }\r\n\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval > 1) {\r\n    return interval + \" hours\";\r\n  }\r\n\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + \" mins\";\r\n  }\r\n\r\n  return Math.floor(seconds) + \" seconds\";\r\n};\r\n\r\nexport const currentDate = (timestamp) => {\r\n  const date = new Date(parseInt(timestamp));\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const month = months[date.getMonth() + 1];\r\n  const day = date.getDay();\r\n  const year = date.getFullYear();\r\n  const time = date.toLocaleString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: true,\r\n  });\r\n\r\n  return `${month} ${day}, ${year} ${time}`;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink, generatePath } from \"react-router-dom\";\r\n\r\nimport UserImage from \"../../common/UserImage\";\r\nimport { Anchor } from \"../../common/Text\";\r\n\r\nimport { timeAgo } from \"../../../utils/time\";\r\n\r\nimport * as Routes from \"../../../routes\";\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${(p) => p.theme.zIndex.xl};\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: 90px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Link = styled(Anchor)`\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.tiny};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Message's dropdown\r\n */\r\nconst HeaderMessageDropDown = ({ messageRef, dropdownData }) => {\r\n  return (\r\n    <Root ref={messageRef}>\r\n      <Heading>\r\n        <Link\r\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n        >\r\n          New Message\r\n        </Link>\r\n      </Heading>\r\n\r\n      {dropdownData.map((user) => (\r\n        <User\r\n          key={user.id}\r\n          to={generatePath(Routes.MESSAGES, { userId: user.id })}\r\n        >\r\n          <span>\r\n            <UserImage image={user.image} size={50} />\r\n          </span>\r\n\r\n          <Info>\r\n            <div>\r\n              <FullName>{user.fullName}</FullName>\r\n\r\n              <LastMessage>{user.lastMessage}</LastMessage>\r\n            </div>\r\n\r\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\r\n          </Info>\r\n        </User>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderMessageDropDown.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n};\r\n\r\nexport default HeaderMessageDropDown;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport HeaderUserDropDown from \"./HeaderUserDropDown\";\r\nimport HeaderNotificationDropDown from \"./HeaderNotificationDropDown\";\r\nimport HeaderMessageDropDown from \"./HeaderMessageDropDown\";\r\n\r\n/**\r\n * Component that renders DropDown's of Header\r\n */\r\nconst HeaderDropDowns = ({\r\n  messageRef,\r\n  notificationRef,\r\n  userRef,\r\n  dropdownOpen,\r\n  dropdownData,\r\n  closeDropDown,\r\n}) => {\r\n  const DropDowns = {\r\n    USER: <HeaderUserDropDown userRef={userRef} />,\r\n    NOTIFICATION: (\r\n      <HeaderNotificationDropDown\r\n        notificationRef={notificationRef}\r\n        dropdownData={dropdownData}\r\n        closeDropDown={closeDropDown}\r\n      />\r\n    ),\r\n    MESSAGE: (\r\n      <HeaderMessageDropDown\r\n        messageRef={messageRef}\r\n        dropdownData={dropdownData}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\r\n};\r\n\r\nHeaderDropDowns.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  notificationRef: PropTypes.object,\r\n  userRef: PropTypes.object,\r\n  dropdownOpen: PropTypes.string,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderDropDowns;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Icon } from \"../../common/Icon\";\r\nimport { Container, Spacing } from \"../../common/Layout\";\r\nimport { Anchor } from \"../../common/Text\";\r\nimport { Button } from \"../../common/Form\";\r\nimport UserImage from \"../../common/UserImage\";\r\nimport Search from \"../Search\";\r\nimport HeaderDropDowns from \"./HeaderDropDowns\";\r\n\r\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\r\n\r\nimport { useStore } from \"../../../store\";\r\n\r\nimport { HEADER_HEIGHT } from \"../../../constants/size\";\r\n\r\nimport * as Routes from \"../../../routes\";\r\n\r\nconst Root = styled(Container)`\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  z-index: ${(p) => p.theme.zIndex.md};\r\n  height: ${HEADER_HEIGHT}px;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    z-index: ${(p) => p.theme.zIndex.md};\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: ${HEADER_HEIGHT}px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + \"px\"}) {\r\n    width: ${(p) => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n  cursor: pointer;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(Anchor)`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n  }\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst countCSS = css`\r\n  top: -6px;\r\n  position: absolute;\r\n  height: 22px;\r\n  width: 22px;\r\n  padding: 2px;\r\n  letter-spacing: -1px;\r\n  border-radius: 50%;\r\n  color: ${(p) => p.theme.colors.white};\r\n  background-color: ${(p) => p.theme.colors.error.main};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NotificationCount = styled.span`\r\n  ${countCSS};\r\n  right: 54px;\r\n`;\r\n\r\nconst MessageCount = styled.span`\r\n  ${countCSS};\r\n  right: 100px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user is authenticated\r\n */\r\nconst Header = ({ location, toggleSideBar }) => {\r\n  const [{ auth }] = useStore();\r\n  const newConversations = auth && auth.user && auth.user.newConversations;\r\n  const newNotifications = auth && auth.user && auth.user.newNotifications;\r\n  const userImage = auth && auth.user && auth.user.image;\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n  const [dropdownData, setDropdownData] = useState([]);\r\n\r\n  const messageRef = useRef(null);\r\n  const notificationRef = useRef(null);\r\n  const userRef = useRef(null);\r\n\r\n  const closeOnClickOutside = () => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    }\r\n  };\r\n\r\n  useClickOutside(messageRef, closeOnClickOutside);\r\n  useClickOutside(notificationRef, closeOnClickOutside);\r\n  useClickOutside(userRef, closeOnClickOutside);\r\n\r\n  const closeDropDown = () => {\r\n    setDropdownOpen(null);\r\n    setDropdownData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => closeDropDown();\r\n  }, [location.pathname]);\r\n\r\n  const handleIconClick = (dropdownType) => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    } else {\r\n      if (dropdownType === \"NOTIFICATION\") {\r\n        setDropdownData(newNotifications);\r\n      } else if (dropdownType === \"MESSAGE\") {\r\n        setDropdownData(newConversations);\r\n      }\r\n\r\n      setDropdownOpen(dropdownType);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Wrapper>\r\n        <LeftSide>\r\n          <Hamburger onClick={toggleSideBar}>\r\n            <Icon icon=\"menu\" />\r\n          </Hamburger>\r\n\r\n          <Logo to={Routes.HOME}>{process.env.REACT_APP_SITE_NAME}</Logo>\r\n\r\n          <Spacing left=\"sm\" right=\"md\">\r\n            <Search location={location} placeholder=\"Search\" />\r\n          </Spacing>\r\n        </LeftSide>\r\n\r\n        <RightSide>\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick(\"MESSAGE\")}>\r\n              {newConversations > 0 && (\r\n                <MessageCount>\r\n                  {newConversations && newConversations.length}\r\n                </MessageCount>\r\n              )}\r\n\r\n              <Icon icon=\"envelope\" />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick(\"NOTIFICATION\")}>\r\n              {newNotifications && newNotifications.length > 0 && (\r\n                <NotificationCount>\r\n                  {newNotifications && newNotifications.length}\r\n                </NotificationCount>\r\n              )}\r\n              <Icon icon=\"bell\" />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Button ghost onClick={() => handleIconClick(\"USER\")}>\r\n            <UserImage image={userImage} />\r\n          </Button>\r\n        </RightSide>\r\n\r\n        <HeaderDropDowns\r\n          messageRef={messageRef}\r\n          notificationRef={notificationRef}\r\n          userRef={userRef}\r\n          dropdownOpen={dropdownOpen}\r\n          dropdownData={dropdownData}\r\n          closeDropDown={closeDropDown}\r\n        />\r\n      </Wrapper>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  toggleSideBar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(Header);\r\n","export const SIDEBAR_DESKTOP_WIDTH = 180;\r\n\r\nexport const SIDEBAR_MOBILE_WIDTH = 240;\r\n\r\nexport const USER_SUGGESTIONS_WIDTH = 240;\r\n\r\nexport const HEADER_HEIGHT = 60;\r\n\r\nexport const HOME_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\r\n\r\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\r\n\r\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\r\n\r\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\r\n","import React from \"react\";\r\nimport { NavLink, generatePath } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nimport { Icon } from \"../common/Icon/index\";\r\n\r\nconst Link = styled(NavLink)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  display: block;\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n  &:hover,\r\n  &.selected {\r\n    color: ${(p) => p.theme.colors.primary.main};\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n    svg path {\r\n      fill: ${(p) => p.theme.colors.primary.main};\r\n    }\r\n    @media (min-width: ${(p) => p.theme.screen.md}) {\r\n      background-color: ${(p) => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  line-height: 40px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\n/**\r\n * Navigation component used in SideBar\r\n */\r\nconst Navigation = () => {\r\n  return (\r\n    <List>\r\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\r\n        <ListItem>\r\n          <Icon icon=\"home\" />\r\n          <Name>Home</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.SEARCH}>\r\n        <ListItem>\r\n          <Icon icon=\"search\" width={20} />\r\n          <Name>Explore</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\r\n        <ListItem>\r\n          <Icon icon=\"users\" />\r\n          <Name>People</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\r\n        <ListItem>\r\n          <Icon icon=\"bell\" />\r\n          <Name>Notifications</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link\r\n        exact\r\n        activeClassName=\"selected\"\r\n        to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n      >\r\n        <ListItem>\r\n          <Icon icon=\"envelope\" />\r\n          <Name>Messages</Name>\r\n        </ListItem>\r\n      </Link>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generatePath, withRouter, NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Spacing } from \"../common/Layout\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserImage from \"../common/UserImage\";\r\n\r\nimport {\r\n  SIDEBAR_DESKTOP_WIDTH,\r\n  SIDEBAR_MOBILE_WIDTH,\r\n  HEADER_HEIGHT,\r\n} from \"../../constants/size\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding-top: ${HEADER_HEIGHT + 40}px;\r\n  height: 100%;\r\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\r\n  transition: margin-left 0.2s ease-in-out;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  z-index: ${(p) => p.theme.zIndex.sm};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    padding-top: 0;\r\n    position: sticky;\r\n    top: 100px;\r\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\r\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    border: 0;\r\n    background-color: transparent;\r\n  }\r\n\r\n  @media (max-width: ${(p) => p.theme.screen.md}) {\r\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  border: 1px solid transparent;\r\n\r\n  &:hover,\r\n  &.selected {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n\r\n    @media (min-width: ${(p) => p.theme.screen.md}) {\r\n      background-color: ${(p) => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  color: ${(p) =>\r\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\r\n`;\r\n\r\n/**\r\n * Displays left side bar\r\n */\r\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const username = auth && auth.user && auth.user.username;\r\n  const isAuthUsersProfilePage = username === location.pathname.substring(1);\r\n\r\n  return (\r\n    <Root isOpen={isOpen} ref={sideBarRef}>\r\n      <User\r\n        exact\r\n        to={generatePath(Routes.USER_PROFILE, { username: username })}\r\n        activeClassName=\"selected\"\r\n      >\r\n        <UserImage image={auth.user.image} size={20} />\r\n\r\n        <Spacing left=\"xxs\">\r\n          <FullName active={isAuthUsersProfilePage}>\r\n            {auth.user.fullName}\r\n          </FullName>\r\n        </Spacing>\r\n      </User>\r\n\r\n      <Spacing top=\"sm\" />\r\n\r\n      <Navigation />\r\n    </Root>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Creates a comment\r\n */\r\nexport const CREATE_COMMENT = gql`\r\n  mutation($input: CreateCommentInput!) {\r\n    createComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a comment\r\n */\r\nexport const DELETE_COMMENT = gql`\r\n  mutation($input: DeleteCommentInput!) {\r\n    deleteComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","/**\r\n * Available Notification types\r\n */\r\n\r\nexport const NotificationType = {\r\n  LIKE: \"LIKE\",\r\n  FOLLOW: \"FOLLOW\",\r\n  COMMENT: \"COMMENT\"\r\n};\r\n","import { useApolloClient } from \"@apollo/react-hooks\";\r\nimport {\r\n  CREATE_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n} from \"../../graphql/Notification/index\";\r\nimport { useStore } from \"../../store/index\";\r\n\r\n/**\r\n * React hook that Creates or Deletes a notification after like, follow or comment\r\n */\r\nexport const useNotifications = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const client = useApolloClient();\r\n\r\n  /**\r\n   * Helper function for mutation\r\n   */\r\n  const mutate = async (mutation, variables) => {\r\n    try {\r\n      return await client.mutate({\r\n        mutation,\r\n        variables: { input: { ...variables } },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error while mutating a notification\", error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates a notification\r\n   */\r\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\r\n    return mutate(CREATE_NOTIFICATION, {\r\n      authorId: auth.user.id,\r\n      userId: user.id,\r\n      postId,\r\n      notificationType,\r\n      notificationTypeId,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Removes a notification\r\n   */\r\n  const remove = ({ notificationId }) =>\r\n    mutate(DELETE_NOTIFICATION, { id: notificationId });\r\n\r\n  /**\r\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\r\n   */\r\n  const toggle = ({\r\n    user,\r\n    postId,\r\n    notificationType,\r\n    notificationTypeId,\r\n    hasDone,\r\n  }) => {\r\n    const type = notificationType.toLowerCase();\r\n    const isNotified = user.notifications.find(\r\n      (n) => n[type] && hasDone && n[type].id === hasDone.id\r\n    );\r\n    const notificationId = isNotified ? isNotified.id : null;\r\n    const operation = notificationId ? \"delete\" : \"create\";\r\n    const options = {\r\n      create: {\r\n        mutation: CREATE_NOTIFICATION,\r\n        variables: {\r\n          authorId: auth.user.id,\r\n          userId: user.id,\r\n          postId,\r\n          notificationType,\r\n          notificationTypeId,\r\n        },\r\n      },\r\n      delete: {\r\n        mutation: DELETE_NOTIFICATION,\r\n        variables: { id: notificationId },\r\n      },\r\n    };\r\n\r\n    return mutate(options[operation].mutation, options[operation].variables);\r\n  };\r\n\r\n  return { create, remove, toggle };\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Mutation, withApollo } from \"react-apollo\";\r\n\r\nimport { GET_AUTH_USER, GET_USER } from \"../graphql/User/index\";\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from \"../graphql/Post/index\";\r\nimport { CREATE_COMMENT } from \"../graphql/Comment/index\";\r\nimport { Textarea, Button } from \"./common/Form\";\r\n\r\nimport { NotificationType } from \"../constants/notification\";\r\n\r\nimport { useNotifications } from \"./hooks/useNotification\";\r\n\r\nimport { useStore } from \"../store/index\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\n/**\r\n * Creates a comment for a post\r\n */\r\nconst PostComment = ({ post, focus }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const [comment, setComment] = useState(\"\");\r\n  const buttonEl = useRef(null);\r\n  const TextareaEl = useRef(false);\r\n\r\n  useEffect(() => {\r\n    focus && TextareaEl.current.focus();\r\n  }, [focus]);\r\n\r\n  const handleSubmit = async (e, createComment) => {\r\n    e.preventDefault();\r\n    const { data } = await createComment();\r\n    setComment(\"\");\r\n\r\n    // Create notification on comment\r\n    if (auth.user.id !== post.author.id) {\r\n      notification.create({\r\n        user: post.author,\r\n        postId: post.id,\r\n        notificationType: NotificationType.COMMENT,\r\n        notificationTypeId: data.createComment.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      buttonEl.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={CREATE_COMMENT}\r\n      variables={{ input: { comment, author: auth.user.id, postId: post.id } }}\r\n      refetchQueries={() => [\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n        { query: GET_USER, variables: { username: auth.user.username } },\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_POST, variables: { id: post.id } },\r\n      ]}\r\n    >\r\n      {(createComment, { loading }) => (\r\n        <Form onSubmit={(e) => handleSubmit(e, createComment)}>\r\n          <Textarea\r\n            onChange={(e) => setComment(e.target.value)}\r\n            value={comment}\r\n            placeholder=\"Add a comment...\"\r\n            onKeyDown={onEnterPress}\r\n            ref={TextareaEl}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color={comment ? \"primary.main\" : \"grey[500]\"}\r\n            weight=\"bold\"\r\n            text\r\n            ref={buttonEl}\r\n            disabled={!comment || loading}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nPostComment.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  focus: PropTypes.bool,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(PostComment);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n/**\r\n * Component that manages changes to document head\r\n * currently we are editing only title, but you can add meta description, image ...\r\n */\r\nconst Head = ({ title }) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n  </Helmet>\r\n);\r\n\r\nHead.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nHead.defaultProps = {\r\n  title: process.env.REACT_APP_SITE_NAME,\r\n};\r\n\r\nexport default Head;\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Creates a following between two users\r\n */\r\nexport const CREATE_FOLLOW = gql`\r\n  mutation($input: CreateFollowInput!) {\r\n    createFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * deletes a following\r\n */\r\nexport const DELETE_FOLLOW = gql`\r\n  mutation($input: DeleteFollowInput!) {\r\n    deleteFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from \"../../graphql/Post/index\";\r\nimport { GET_AUTH_USER, GET_USER } from \"../../graphql/User/index\";\r\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from \"../../graphql/Follow/index\";\r\n\r\nimport { NotificationType } from \"../../constants/notification\";\r\nimport { HOME_PAGE_POSTS_LIMIT } from \"../../constants/dataLimit\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport { useNotifications } from \"../hooks/useNotification\";\r\n\r\nconst Button = styled.button`\r\n  height: 27px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  transition: background-color 0.2s, border-color 0.1s;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  color: ${(p) => !p.isFollowing && p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  border: ${(p) =>\r\n    p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : \"0\"};\r\n  background-color: ${(p) =>\r\n    p.isFollowing ? \"transparent\" : p.theme.colors.primary.main};\r\n  &:hover {\r\n    border-color: ${(p) => p.theme.colors.border.dark};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering follow button\r\n */\r\nconst Follow = ({ user }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const isFollowing = auth.user.following.find((f) => f.user === user.id);\r\n\r\n  const handleClickFollow = async (mutate) => {\r\n    setLoading(true);\r\n    const { data } = await mutate();\r\n\r\n    // Create or Delete mutation for follow\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      hasDone: isFollowing,\r\n      notificationType: NotificationType.FOLLOW,\r\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  // Detect which mutation to use\r\n  const operation = isFollowing ? \"delete\" : \"create\";\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_FOLLOW,\r\n      variables: { userId: user.id, followerId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_FOLLOW,\r\n      variables: { id: isFollowing ? isFollowing.id : null },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={options[operation].mutation}\r\n      variables={{ input: { ...options[operation].variables } }}\r\n      refetchQueries={() => [\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        {\r\n          query: GET_FOLLOWED_POSTS,\r\n          variables: {\r\n            userId: auth.user.id,\r\n            skip: 0,\r\n            limit: HOME_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n        { query: GET_USER, variables: { username: user.username } },\r\n      ]}\r\n    >\r\n      {(mutate) => {\r\n        return (\r\n          <Button\r\n            onClick={() => handleClickFollow(mutate)}\r\n            disabled={loading}\r\n            isFollowing={isFollowing}\r\n          >\r\n            {isFollowing ? \"Following\" : \"Follow\"}\r\n          </Button>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nFollow.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Follow;\r\n","export const HOME_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\r\n\r\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\r\n\r\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\r\n\r\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const MAX_POST_IMAGE_SIZE = 3000000;\r\n\r\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\r\n\r\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\n\r\nimport { Anchor } from \"../common/Text\";\r\nimport Follow from \"../common/Follow\";\r\nimport { Spacing } from \"../common/Layout\";\r\nimport UserImage from \"../common/UserImage\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst Author = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  max-width: 100%;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Author info for PostPopup component\r\n */\r\nconst PostInfoOverlay = ({ author }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <Author>\r\n        <Anchor\r\n          to={generatePath(Routes.USER_PROFILE, { username: author.username })}\r\n        >\r\n          <UserImage image={author.image} />\r\n        </Anchor>\r\n\r\n        <Spacing left=\"xs\" inline>\r\n          <Anchor\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <UserName>{author.fullName}</UserName>\r\n          </Anchor>\r\n        </Spacing>\r\n      </Author>\r\n\r\n      {auth.user.id !== author.id && <Follow user={author} />}\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostInfoOverlay.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostInfoOverlay;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nimport { Icon } from \"./common/Icon\";\r\nimport { Anchor } from \"./common/Text\";\r\nimport { Spacing } from \"./common/Layout\";\r\nimport UserImage from \"./common/UserImage\";\r\n\r\nimport { GET_AUTH_USER, GET_USER } from \"../graphql/User\";\r\nimport { DELETE_COMMENT } from \"../graphql/Comment\";\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from \"../graphql/Post/index\";\r\n\r\nimport { useNotifications } from \"./hooks/useNotification\";\r\n\r\nimport { useStore } from \"../store/index\";\r\n\r\nimport * as Routes from \"../routes/index\";\r\n\r\nconst DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  display: none;\r\n  background-color: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  position: absolute;\r\n  right: 7px;\r\n  top: 6px;\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: ${(p) => p.theme.spacing.xxs} 0;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  &:hover ${DeleteButton} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  padding: 0 ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.xxs}\r\n    ${(p) => p.theme.spacing.xs};\r\n  background-color: ${(p) => p.theme.colors.grey[100]};\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  margin-left: ${(p) => p.theme.spacing.xxs};\r\n  color: ${(p) => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Renders comments UI\r\n */\r\nconst Comment = ({ comment, postId, postAuthor }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n\r\n  const handleDeleteComment = async (deleteComment) => {\r\n    await deleteComment();\r\n\r\n    // Delete notification after comment deletion\r\n    if (auth.user.id !== postAuthor.id) {\r\n      const isNotified = postAuthor.notifications.find(\r\n        (n) => n.comment && n.comment.id === comment.id\r\n      );\r\n      notification.remove({\r\n        notificationId: isNotified.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={DELETE_COMMENT}\r\n      variables={{ input: { id: comment.id } }}\r\n      refetchQueries={() => [\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n        { query: GET_USER, variables: { username: comment.author.username } },\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_POST, variables: { id: postId } },\r\n      ]}\r\n    >\r\n      {(deleteComment) => {\r\n        return (\r\n          <Root>\r\n            <Anchor\r\n              to={generatePath(Routes.USER_PROFILE, {\r\n                username: comment.author.username,\r\n              })}\r\n            >\r\n              <UserImage image={comment.author.image} />\r\n            </Anchor>\r\n\r\n            <CommentSection>\r\n              {comment.author.id === auth.user.id && (\r\n                <DeleteButton\r\n                  onClick={() => handleDeleteComment(deleteComment)}\r\n                >\r\n                  <Icon icon=\"close\" width=\"10\" />\r\n                </DeleteButton>\r\n              )}\r\n\r\n              <Spacing top=\"xxs\" />\r\n\r\n              <Spacing inline right=\"xxs\">\r\n                <Anchor\r\n                  to={generatePath(Routes.USER_PROFILE, {\r\n                    username: comment.author.username,\r\n                  })}\r\n                >\r\n                  <UserName>{comment.author.fullName}</UserName>\r\n                </Anchor>\r\n              </Spacing>\r\n\r\n              {comment.comment}\r\n            </CommentSection>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Comment from \"../Comment\";\r\nimport { Spacing } from \"../common/Layout\";\r\n\r\nconst Root = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: ${(p) => p.theme.spacing.sm};\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    max-height: 400px;\r\n  }\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  max-height: ${(p) => (p.usedInModal ? \"100%\" : \"350px\")};\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  box-sizing: content-box;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Comments for PostOverlay component\r\n */\r\nconst PostCommentsOverlay = ({ comments, postId, postAuthor, usedInModal }) => (\r\n  <Root usedInModal={usedInModal}>\r\n    <Spacing top=\"xs\" />\r\n\r\n    <Comments usedInModal={usedInModal}>\r\n      {comments.map((comment) => (\r\n        <Comment\r\n          key={comment.id}\r\n          comment={comment}\r\n          postId={postId}\r\n          postAuthor={postAuthor}\r\n        />\r\n      ))}\r\n    </Comments>\r\n  </Root>\r\n);\r\n\r\nPostCommentsOverlay.propTypes = {\r\n  comments: PropTypes.array.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostCommentsOverlay;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Query } from \"react-apollo\";\r\n\r\n//import { Loading } from \"components/Loading\";\r\nimport { Icon } from \"../common/Icon\";\r\nimport PostComment from \"../PostComment\";\r\nimport { Spacing } from \"../common/Layout\";\r\nimport Head from \"../common/Head\";\r\nimport PostInfoOverlay from \"./PostInfoOverlay\";\r\nimport PostCommentsOverlay from \"./PostCommentsOverlay\";\r\nimport PostOptionsOverlay from \"./PostOptionsOverlay\";\r\n\r\nimport { GET_POST } from \"../../graphql/Post\";\r\n\r\nconst Root = styled.div`\r\n  margin: 0 auto;\r\n  margin: ${(p) => !p.usedInModal && p.theme.spacing.lg} 0;\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => (p.usedInModal ? p.theme.zIndex.xl : \"inherit\")};\r\n  overflow: hidden;\r\n  width: 100%;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\r\n  overflow-y: ${(p) => (p.usedInModal ? \"auto\" : \"inherit\")};\r\n  max-width: 1300px;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    flex-direction: ${(p) => (p.usedInModal ? \"row\" : \"column\")};\r\n    max-height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\r\n    overflow-y: inherit;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: ${(p) => (p.usedInModal ? \"center\" : \"flex-start\")};\r\n  justify-content: center;\r\n  background-color: ${(p) => p.theme.colors.black};\r\n  width: 100%;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    max-width: 1000px;\r\n    min-width: 500px;\r\n    height: ${(p) => (p.usedInModal ? \"600px\" : \"auto\")};\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  max-width: 100%;\r\n  width: ${(p) => !p.usedInModal && \"100%\"};\r\n  max-height: ${(p) => (p.usedInModal ? \"600px\" : \"100%\")};\r\n`;\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => (p.usedInModal ? \"360px\" : \"100%\")};\r\n    min-width: 360px;\r\n  }\r\n`;\r\n\r\nconst CloseOverlay = styled.div`\r\n  display: block;\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.light};\r\n  padding: ${(p) => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Displays post with comments and options\r\n * Meant to be used in Modal or Page component\r\n */\r\nconst PostOverlay = ({ id, closeModal, usedInModal }) => {\r\n  return (\r\n    <Query query={GET_POST} variables={{ id }}>\r\n      {({ data, loading, error }) => {\r\n        /*if (loading) return <Loading top=\"lg\" />;\r\n        if (error) return <NotFound />;*/\r\n\r\n        const post = data.getPost;\r\n\r\n        return (\r\n          <Root usedInModal={usedInModal}>\r\n            <Head\r\n              title={post.title ? post.title : `${post.author.username}'s post`}\r\n            />\r\n\r\n            {closeModal && (\r\n              <CloseOverlay onClick={closeModal}>\r\n                <Icon icon=\"close\" />\r\n              </CloseOverlay>\r\n            )}\r\n\r\n            <Container usedInModal={usedInModal}>\r\n              <Left usedInModal={usedInModal}>\r\n                <Image src={post.image} usedInModal={usedInModal} />\r\n              </Left>\r\n\r\n              <Right usedInModal={usedInModal}>\r\n                <Spacing>\r\n                  <PostInfoOverlay author={post.author} />\r\n\r\n                  {post.title && <Title>{post.title}</Title>}\r\n\r\n                  <PostCommentsOverlay\r\n                    usedInModal={usedInModal}\r\n                    comments={post.comments}\r\n                    postId={post.id}\r\n                    postAuthor={post.author}\r\n                  />\r\n                </Spacing>\r\n\r\n                <Spacing>\r\n                  <PostOptionsOverlay\r\n                    postId={post.id}\r\n                    postAuthor={post.author}\r\n                    postLikes={post.likes}\r\n                  />\r\n\r\n                  <PostComment post={post} />\r\n                </Spacing>\r\n              </Right>\r\n            </Container>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nPostOverlay.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func,\r\n  usedInModal: PropTypes.bool.isRequired,\r\n};\r\n\r\nPostOverlay.defaultProps = {\r\n  usedInModal: true,\r\n};\r\n\r\nexport default withRouter(PostOverlay);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"./Form\";\r\nimport { Spacing } from \"./Layout\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => p.theme.zIndex.sm};\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\r\n  <Wrapper>\r\n    <div>{title}</div>\r\n\r\n    <Spacing top=\"md\" />\r\n\r\n    <ButtonGroup>\r\n      <Button onClick={onCancel}>{cancelText}</Button>\r\n\r\n      <Spacing left=\"xs\">\r\n        <Button color=\"red\" onClick={onOk}>\r\n          {okText}\r\n        </Button>\r\n      </Spacing>\r\n    </ButtonGroup>\r\n  </Wrapper>\r\n);\r\n\r\nConfirm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  onOk: PropTypes.func.isRequired,\r\n  cancelText: PropTypes.string.isRequired,\r\n  okText: PropTypes.string.isRequired,\r\n};\r\n\r\nConfirm.defaultProps = {\r\n  title: \"Do you really want to delete this item?\",\r\n  cancelText: \"Cancel\",\r\n  okText: \"Delete\",\r\n};\r\n\r\nexport default Confirm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Confirm from \"./Confirm\";\r\nimport { Overlay } from \"./Layout\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: ${(p) => p.theme.spacing.sm};\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    align-items: center;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main component for rendering Modals\r\n */\r\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <Root>\r\n      <Overlay onClick={onClose} />\r\n\r\n      {type === \"confirm\" ? <Confirm {...otherProps} /> : children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  type: PropTypes.oneOf([\"\", \"confirm\"]),\r\n};\r\n\r\nexport default Modal;\r\n","import gql from \"graphql-tag\";\r\n\r\n/**\r\n * Creates a like\r\n */\r\nexport const CREATE_LIKE = gql`\r\n  mutation($input: CreateLikeInput!) {\r\n    createLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a like\r\n */\r\nexport const DELETE_LIKE = gql`\r\n  mutation($input: DeleteLikeInput!) {\r\n    deleteLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nimport { Icon } from \"./common/Icon\";\r\nimport { Spacing } from \"./common/Layout\";\r\nimport { Button } from \"./common/Form\";\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from \"../graphql/Post/index\";\r\nimport { GET_AUTH_USER } from \"../graphql/User/index\";\r\nimport { CREATE_LIKE, DELETE_LIKE } from \"../graphql/Like/index\";\r\n\r\nimport { NotificationType } from \"../constants/notification\";\r\n\r\nimport { useNotifications } from \"./hooks/useNotification\";\r\n\r\nimport { useStore } from \"../store/index\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${(p) => p.theme.spacing.xs} 0;\r\n`;\r\n\r\n/**\r\n * Component for rendering Like button\r\n */\r\nconst UpVote = ({ postId, user, likes, withText, fullWidth }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [{ auth }] = useStore();\r\n\r\n  const notification = useNotifications();\r\n\r\n  const hasLiked = likes.find(\r\n    (l) => l.user === auth.user.id && l.post === postId\r\n  );\r\n\r\n  const handleButtonClick = async (mutate) => {\r\n    setLoading(true);\r\n    const { data } = await mutate();\r\n\r\n    // Create or delete notification for like\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      postId,\r\n      hasDone: hasLiked,\r\n      notificationType: NotificationType.LIKE,\r\n      notificationTypeId: data.createLike ? data.createLike.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  // Detect which mutation to use\r\n  const operation = hasLiked ? \"delete\" : \"create\";\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_LIKE,\r\n      variables: { postId, userId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_LIKE,\r\n      variables: { id: hasLiked ? hasLiked.id : null },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={options[operation].mutation}\r\n      variables={{ input: { ...options[operation].variables } }}\r\n      refetchQueries={() => [\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n      ]}\r\n    >\r\n      {(mutate) => {\r\n        return (\r\n          <StyledButton\r\n            fullWidth={fullWidth}\r\n            disabled={loading}\r\n            text\r\n            onClick={() => handleButtonClick(mutate)}\r\n            color={hasLiked && \"primary.main\"}\r\n          >\r\n            <Icon icon=\"thumbs-up\" />\r\n            <Spacing inline left=\"xxs\" />\r\n            {withText && <b>Like</b>}\r\n          </StyledButton>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nUpVote.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  likes: PropTypes.array,\r\n  withText: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n};\r\n\r\nexport default UpVote;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Button } from \"../common/Form\";\r\nimport Follow from \"../common/Follow\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  box-shadow: ${(p) => p.theme.shadows.xl};\r\n`;\r\n\r\nconst FollowItem = styled.div`\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main} !important;\r\n  &:first-child {\r\n    border-top: 0 !important ;\r\n  }\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n    color: ${(p) => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Post Card options, meant to be used in PostCard components Modal\r\n */\r\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const copyToClipboard = () => {\r\n    try {\r\n      navigator.clipboard.writeText(\r\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\r\n          id: postId,\r\n        })}`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to read clipboard contents: \", error);\r\n    }\r\n\r\n    closeOption();\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      {auth.user.id !== author.id && (\r\n        <FollowItem>\r\n          <Follow user={author} />\r\n        </FollowItem>\r\n      )}\r\n\r\n      <StyledButton fullWidth text onClick={copyToClipboard}>\r\n        Copy link\r\n      </StyledButton>\r\n\r\n      {auth.user.id === author.id && (\r\n        <StyledButton fullWidth text onClick={deletePost}>\r\n          Delete post\r\n        </StyledButton>\r\n      )}\r\n\r\n      <StyledButton fullWidth onClick={closeOption} text>\r\n        Cancel\r\n      </StyledButton>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostCardOption.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  author: PropTypes.object.isRequired,\r\n  closeOption: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostCardOption;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { withApollo } from \"react-apollo\";\r\n\r\nimport Comment from \"../Comment\";\r\nimport CreateComment from \"../PostComment\";\r\nimport UpVote from \"../UpVote\";\r\nimport { Icon } from \"../common/Icon\";\r\nimport { Spacing } from \"../common/Layout\";\r\nimport { Anchor, H3 } from \"../common/Text\";\r\nimport { Button } from \"../common/Form\";\r\nimport PostCardOption from \"./PostCardOption\";\r\nimport Modal from \"../common/Modal\";\r\nimport UserImage from \"../common/UserImage\";\r\n\r\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from \"../../graphql/Post/index\";\r\nimport { GET_AUTH_USER, GET_USER_POSTS } from \"../../graphql/User/index\";\r\n\r\nimport {\r\n  HOME_PAGE_POSTS_LIMIT,\r\n  PROFILE_PAGE_POSTS_LIMIT,\r\n} from \"../../constants/dataLimit\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nimport { timeAgo } from \"../../utils/time\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  padding-bottom: ${(p) => p.theme.spacing.xs};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst TopRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.text.hint};\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.text.secondary};\r\n  border: 0;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Author = styled(Anchor)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  color: ${(p) => p.theme.colors.primary.main};\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  object-fit: cover;\r\n  cursor: pointer;\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CountAndIcons = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Count = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-bottom: ${(p) => p.theme.spacing.xs};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0;\r\n  padding-left: 4px;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst CommentLine = styled.div`\r\n  margin-bottom: 5px;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Component for rendering user post\r\n */\r\nconst PostCard = ({\r\n  author,\r\n  imagePublicId,\r\n  comments,\r\n  title,\r\n  createdAt,\r\n  image,\r\n  likes,\r\n  postId,\r\n  openModal,\r\n  client,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\r\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\r\n\r\n  const toggleCreateComment = () => {\r\n    setIsCommentOpen(true);\r\n  };\r\n\r\n  const toggleComment = () => {\r\n    setIsCommentOpen(!isCommentOpen);\r\n  };\r\n\r\n  const closeOption = () => setIsOptionOpen(false);\r\n\r\n  const openOption = () => setIsOptionOpen(true);\r\n\r\n  const deletePost = async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: DELETE_POST,\r\n        variables: { input: { id: postId, imagePublicId } },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_FOLLOWED_POSTS,\r\n            variables: {\r\n              userId: auth.user.id,\r\n              skip: 0,\r\n              limit: HOME_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n          {\r\n            query: GET_USER_POSTS,\r\n            variables: {\r\n              username: auth.user.username,\r\n              skip: 0,\r\n              limit: PROFILE_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n\r\n    setIsOptionOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Root>\r\n        <Modal onClose={closeOption} open={isOptionOpen}>\r\n          <PostCardOption\r\n            postId={postId}\r\n            closeOption={closeOption}\r\n            author={author}\r\n            deletePost={deletePost}\r\n          />\r\n        </Modal>\r\n\r\n        <TopRow>\r\n          <Author\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <UserImage image={author.image} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{author.fullName}</Name>\r\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\r\n            </Spacing>\r\n          </Author>\r\n\r\n          <Button ghost onClick={openOption}>\r\n            <Icon icon=\"comment-dots\" />\r\n          </Button>\r\n        </TopRow>\r\n\r\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\">\r\n          <H3>{title}</H3>\r\n        </Spacing>\r\n\r\n        {image && <Poster src={image} onClick={openModal} />}\r\n\r\n        <BottomRow>\r\n          <CountAndIcons>\r\n            <Count>\r\n              {likes.length} likes\r\n              <Spacing />\r\n              <StyledButton onClick={toggleComment} text>\r\n                {comments.length} comments\r\n              </StyledButton>\r\n            </Count>\r\n\r\n            <Icons>\r\n              <UpVote\r\n                fullWidth\r\n                withText\r\n                user={author}\r\n                postId={postId}\r\n                likes={likes}\r\n              />\r\n\r\n              <Button fullWidth text onClick={toggleCreateComment}>\r\n                <Icon icon=\"comment\" /> <Spacing inline left=\"xxs\" />{\" \"}\r\n                <b>Comment</b>\r\n              </Button>\r\n            </Icons>\r\n          </CountAndIcons>\r\n\r\n          {isCommentOpen && (\r\n            <>\r\n              <Spacing top=\"xs\">\r\n                <CommentLine />\r\n                <CreateComment\r\n                  post={{ id: postId, author }}\r\n                  focus={isCommentOpen}\r\n                />\r\n              </Spacing>\r\n\r\n              {comments.length > 0 && <CommentLine />}\r\n\r\n              <Comments>\r\n                {comments.map((comment) => (\r\n                  <Comment\r\n                    key={comment.id}\r\n                    comment={comment}\r\n                    postId={postId}\r\n                    postAuthor={author}\r\n                  />\r\n                ))}\r\n              </Comments>\r\n            </>\r\n          )}\r\n        </BottomRow>\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n  imagePublicId: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.string,\r\n  likes: PropTypes.array.isRequired,\r\n  comments: PropTypes.array,\r\n  createdAt: PropTypes.string.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(PostCard);\r\n","import { useEffect, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { set, get, uniqBy } from \"lodash\";\r\n\r\n/**\r\n * Component that adds Infinite scroll functionality to UI\r\n */\r\nconst InfiniteScroll = ({\r\n  data,\r\n  dataKey,\r\n  fetchMore,\r\n  variables,\r\n  count,\r\n  children,\r\n}) => {\r\n  const handleScroll = useMemo(\r\n    () => async () => {\r\n      const loadMore = () => {\r\n        return fetchMore({\r\n          variables: { ...variables, skip: data.length },\r\n          updateQuery: (prev, { fetchMoreResult }) => {\r\n            const previousData = get(prev, dataKey);\r\n            const fetchMoreData = get(fetchMoreResult, dataKey);\r\n            return set(\r\n              prev,\r\n              dataKey,\r\n              uniqBy([...previousData, ...fetchMoreData], \"id\")\r\n            );\r\n          },\r\n        });\r\n      };\r\n\r\n      const windowHeight = window.innerHeight;\r\n      const scrollTop = document.documentElement.scrollTop;\r\n      const offsetHeight = document.documentElement.offsetHeight;\r\n      const scrolled =\r\n        windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\r\n\r\n      // Stop event listener if all the data has been loaded\r\n      if (data.length >= count) {\r\n        window.removeEventListener(\"scroll\", handleScroll);\r\n        return;\r\n      }\r\n\r\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\r\n      if (scrolled) {\r\n        window.removeEventListener(\"scroll\", handleScroll);\r\n        loadMore();\r\n      }\r\n    },\r\n    [count, data.length, dataKey, fetchMore, variables]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [handleScroll]);\r\n\r\n  return children(data);\r\n};\r\n\r\nInfiniteScroll.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  dataKey: PropTypes.string.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  fetchMore: PropTypes.func.isRequired,\r\n  variables: PropTypes.object.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: ${(p) => p.width && `${p.width}px`};\r\n  height: ${(p) => p.height && `${p.height}px`};\r\n  display: ${(p) => p.inline && `inline-block`};\r\n  margin-top: ${(p) => p.theme.spacing[p.top]};\r\n  margin-left: ${(p) => p.theme.spacing[p.left]};\r\n  margin-right: ${(p) => p.theme.spacing[p.right]};\r\n  margin-bottom: ${(p) => p.theme.spacing[p.bottom]};\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n  border-radius: ${(p) =>\r\n    p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm};\r\n`;\r\n\r\nconst Skeleton = ({\r\n  count,\r\n  width,\r\n  height,\r\n  inline,\r\n  top,\r\n  right,\r\n  bottom,\r\n  left,\r\n  radius,\r\n}) => {\r\n  const loopSkeleton = () => {\r\n    let skeleton = [];\r\n    for (let i = 0; i < count; i++) {\r\n      skeleton.push(\r\n        <Container\r\n          key={i}\r\n          top={top}\r\n          left={left}\r\n          right={right}\r\n          width={width}\r\n          height={height}\r\n          inline={inline}\r\n          bottom={bottom}\r\n          radius={radius}\r\n        />\r\n      );\r\n    }\r\n    return skeleton;\r\n  };\r\n\r\n  return loopSkeleton();\r\n};\r\n\r\nSkeleton.propTypes = {\r\n  inline: PropTypes.bool,\r\n  count: PropTypes.number,\r\n  width: PropTypes.number,\r\n  left: PropTypes.string,\r\n  top: PropTypes.string,\r\n  right: PropTypes.string,\r\n  bottom: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nSkeleton.defaultProps = {\r\n  count: 1,\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useStore } from \"../../store\";\nimport { SET_MESSAGE } from \"../../constants/actions\";\nimport { MessageType } from \"../../constants/message\";\n\n/**\n * React hook for dispatching global messages\n */\nexport const useGlobalMessage = () => {\n  const [, dispatch] = useStore();\n\n  const dispatchAction = (text, messageType, autoClose) => {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose,\n      },\n    });\n  };\n\n  const success = (text, autoClose) =>\n    dispatchAction(text, MessageType.SUCCESS, autoClose);\n\n  const info = (text, autoClose) =>\n    dispatchAction(text, MessageType.INFO, autoClose);\n\n  const warning = (text, autoClose) =>\n    dispatchAction(text, MessageType.WARNING, autoClose);\n\n  const error = (text, autoClose) =>\n    dispatchAction(text, MessageType.ERROR, autoClose);\n\n  return { success, info, warning, error };\n};\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Spacing, Overlay, Container } from \"./common/Layout\";\r\nimport { Error } from \"./common/Text\";\r\nimport { Button } from \"./common/Form\";\r\nimport UserImage from \"./common/UserImage\";\r\n\r\n//import ImageUpload from \"./ImageUpload\";\r\n\r\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from \"../graphql/Post/index\";\r\nimport { GET_AUTH_USER, GET_USER_POSTS } from \"../graphql/User/index\";\r\n\r\nimport { useStore } from \"../store/index\";\r\n\r\nimport {\r\n  PROFILE_PAGE_POSTS_LIMIT,\r\n  HOME_PAGE_POSTS_LIMIT,\r\n  MAX_POST_IMAGE_SIZE,\r\n} from \"../constants/dataLimit\";\r\n\r\nimport { useGlobalMessage } from \"./hooks/useGlobalMessage\";\r\n\r\nconst Root = styled(Container)`\r\n  border: 0;\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  margin: 0 ${(p) => p.theme.spacing.xs};\r\n  padding-left: ${(p) => p.theme.spacing.sm};\r\n  padding-top: ${(p) => p.theme.spacing.xs};\r\n  border: 0;\r\n  outline: none;\r\n  resize: none;\r\n  transition: 0.1s ease-out;\r\n  height: ${(p) => (p.focus ? \"80px\" : \"40px\")};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  background-color: ${(p) => p.theme.colors.grey[100]};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n`;\r\n\r\nconst ImagePreviewContainer = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  box-shadow: ${(p) => p.theme.shadows.sm};\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\r\n  padding: ${(p) => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n/**\r\n * Component for creating a post\r\n */\r\nconst CreatePost = () => {\r\n  const [{ auth }] = useStore();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleReset = () => {\r\n    setTitle(\"\");\r\n    setImage(\"\");\r\n    setIsFocused(false);\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleOnFocus = () => setIsFocused(true);\r\n\r\n  const handleTitleChange = (e) => setTitle(e.target.value);\r\n\r\n  const handleSubmit = async (e, createPost) => {\r\n    e.preventDefault();\r\n    createPost();\r\n    handleReset();\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={CREATE_POST}\r\n      variables={{ input: { title, image, authorId: auth.user.id } }}\r\n      refetchQueries={() => [\r\n        {\r\n          query: GET_FOLLOWED_POSTS,\r\n          variables: {\r\n            userId: auth.user.id,\r\n            skip: 0,\r\n            limit: HOME_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n        { query: GET_AUTH_USER },\r\n        {\r\n          query: GET_USER_POSTS,\r\n          variables: {\r\n            username: auth.user.username,\r\n            skip: 0,\r\n            limit: PROFILE_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n      ]}\r\n    >\r\n      {(createPost, { loading, error: apiError }) => {\r\n        const isShareDisabled = loading || (!loading && !image && !title);\r\n\r\n        return (\r\n          <>\r\n            {isFocused && <Overlay onClick={handleReset} />}\r\n\r\n            <Root\r\n              zIndex={isFocused ? \"md\" : \"xs\"}\r\n              color=\"white\"\r\n              radius=\"sm\"\r\n              padding=\"sm\"\r\n            >\r\n              <form onSubmit={(e) => handleSubmit(e, createPost)}>\r\n                <Wrapper>\r\n                  <UserImage image={auth.user.image} size={40} />\r\n\r\n                  <Textarea\r\n                    type=\"textarea\"\r\n                    name=\"title\"\r\n                    focus={isFocused}\r\n                    value={title}\r\n                    onFocus={handleOnFocus}\r\n                    onChange={handleTitleChange}\r\n                    placeholder=\"Ask your questions\"\r\n                  />\r\n                </Wrapper>\r\n\r\n                {image && (\r\n                  <Spacing bottom=\"sm\">\r\n                    <ImagePreviewContainer>\r\n                      <ImagePreview src={URL.createObjectURL(image)} />\r\n                    </ImagePreviewContainer>\r\n                  </Spacing>\r\n                )}\r\n\r\n                {isFocused && (\r\n                  <Options>\r\n                    <Buttons>\r\n                      <Button text type=\"button\" onClick={handleReset}>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button disabled={isShareDisabled} type=\"submit\">\r\n                        Share\r\n                      </Button>\r\n                    </Buttons>\r\n                  </Options>\r\n                )}\r\n\r\n                {apiError ||\r\n                  (error && (\r\n                    <Spacing top=\"xs\" bottom=\"sm\">\r\n                      <Error size=\"xs\">\r\n                        {apiError\r\n                          ? \"Something went wrong, please try again.\"\r\n                          : error}\r\n                      </Error>\r\n                    </Spacing>\r\n                  ))}\r\n              </form>\r\n            </Root>\r\n          </>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Anchor } from \"../../components/common/Text\";\r\nimport PostOverlay from \"../../components/post/PostOverlay\";\r\nimport Modal from \"../../components/common/Modal\";\r\nimport PostCard from \"../../components/postcard/PostCard\";\r\nimport { Spacing, Container } from \"../../components/common/Layout\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport CreatePost from \"../../components/CreatePost\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport { GET_FOLLOWED_POSTS } from \"../../graphql/Post/index\";\r\n\r\nimport { useStore } from \"../../store/index\";\r\n\r\nimport { HOME_PAGE_POSTS_LIMIT } from \"../../constants/size\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Empty = styled.div`\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(Anchor)`\r\n  text-decoration: underline;\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Home page of the app\r\n */\r\nconst Home = () => {\r\n  const [{ auth }] = useStore();\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState(\"\", \"\", \"/\");\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const userid = auth && auth.user && auth.user.id;\r\n  const variables = {\r\n    userId: userid,\r\n    skip: 0,\r\n    limit: HOME_PAGE_POSTS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Head />\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <CreatePost />\r\n\r\n      <Query\r\n        query={GET_FOLLOWED_POSTS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <Skeleton\r\n                height={500}\r\n                bottom=\"lg\"\r\n                top=\"lg\"\r\n                count={HOME_PAGE_POSTS_LIMIT}\r\n              />\r\n            );\r\n          }\r\n\r\n          const { posts, count } = data.getFollowedPosts;\r\n\r\n          if (!posts.length) {\r\n            return (\r\n              <div>\r\n                <StyledA to={generatePath(Routes.SEARCH)}>\r\n                  Explore new posts\r\n                </StyledA>\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={posts}\r\n              dataKey=\"getFollowedPosts.posts\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {(data) => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    {data.map((post) => (\r\n                      <Fragment key={post.id}>\r\n                        <Modal\r\n                          open={modalPostId === post.id}\r\n                          onClose={closeModal}\r\n                        >\r\n                          <PostOverlay id={post.id} closeModal={closeModal} />\r\n                        </Modal>\r\n\r\n                        <Spacing bottom=\"lg\" top=\"lg\">\r\n                          <PostCard\r\n                            author={post.author}\r\n                            imagePublicId={post.imagePublicId}\r\n                            postId={post.id}\r\n                            comments={post.comments}\r\n                            createdAt={post.createdAt}\r\n                            title={post.title}\r\n                            image={post.image}\r\n                            likes={post.likes}\r\n                            openModal={() => openModal(post.id)}\r\n                          />\r\n                        </Spacing>\r\n                      </Fragment>\r\n                    ))}\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { withApollo } from \"react-apollo\";\r\n\r\nimport { Icon } from \"../../components/common/Icon\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from \"../../graphql/User\";\r\nimport { GET_FOLLOWED_POSTS } from \"../../graphql/Post\";\r\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from \"../../constants/size\";\r\nimport { useGlobalMessage } from \"../../components/hooks/useGlobalMessage\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  visibility: hidden;\r\n  border-radius: 50%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: ${(p) => p.theme.colors.white};\r\n  opacity: 0;\r\n  transition: visibility 0.2s linear, opacity 0.2s linear;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  width: 180px;\r\n  height: 180px;\r\n  display: block;\r\n  overflow: hidden;\r\n  cursor: ${(p) => p.authUser && \"pointer\"};\r\n  border-radius: 50%;\r\n  border: 4px solid ${(p) => p.theme.colors.border.main};\r\n  background-color: ${(p) => p.theme.colors.white};\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Displays and Updates user profile image\r\n */\r\nconst ProfileImageUpload = ({\r\n  userId,\r\n  image,\r\n  imagePublicId,\r\n  username,\r\n  client,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async (e) => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = \"\";\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\r\n      setLoading(false);\r\n      message.error(\r\n        `File size should be less then ${\r\n          MAX_USER_PROFILE_IMAGE_SIZE / 1000000\r\n        }MB`\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderProfileImage = () => {\r\n    if (loading) {\r\n      return <Loading top=\"xl\" />;\r\n    }\r\n\r\n    return image ? (\r\n      <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" />\r\n    ) : (\r\n      <Icon icon=\"user\" />\r\n    );\r\n  };\r\n\r\n  const authUser = auth.user.id === userId;\r\n\r\n  return (\r\n    <>\r\n      {authUser && (\r\n        <Input\r\n          name=\"image\"\r\n          type=\"file\"\r\n          id=\"image\"\r\n          accept=\"image/x-png,image/jpeg\"\r\n          onChange={handleImageChange}\r\n        />\r\n      )}\r\n\r\n      <Label authUser={authUser} htmlFor=\"image\">\r\n        {authUser && <Overlay>{image ? \"Update\" : \"Upload\"}</Overlay>}\r\n\r\n        {renderProfileImage()}\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileImageUpload.propTypes = {\r\n  image: PropTypes.string,\r\n  imagePublicId: PropTypes.string,\r\n  userId: PropTypes.string.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(ProfileImageUpload);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link, generatePath } from \"react-router-dom\";\r\nimport { useSubscription } from \"@apollo/react-hooks\";\r\n\r\nimport { H1 } from \"../../components/common/Text\";\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport Follow from \"../../components/common/Follow\";\r\nimport ProfileImageUpload from \"./ProfileImageUpload\";\r\n\r\nimport { useStore } from \"../../store\";\r\nimport * as Routes from \"../../routes\";\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from \"../../graphql/User\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: -140px;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n  position: relative;\r\n\r\n  ${H1} {\r\n    font-size: ${(p) => p.theme.font.size.lg};\r\n  }\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    ${H1} {\r\n      font-size: ${(p) => p.theme.font.size.xl};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowAndMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Message = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.success};\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst List = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  color: ${(p) => p.theme.colors.grey[800]};\r\n  white-space: nowrap;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    padding: 0 ${(p) => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Renders user information in profile page\r\n */\r\nconst ProfileInfo = ({ user }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: { authUserId: auth.user.id, userId: user.id },\r\n  });\r\n\r\n  let isUserOnline = user.isOnline;\r\n  if (!loading && data) {\r\n    isUserOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <ProfileImage>\r\n        <ProfileImageUpload\r\n          userId={user.id}\r\n          image={user.image}\r\n          imagePublicId={user.imagePublicId}\r\n          username={user.username}\r\n        />\r\n\r\n        <FullName>\r\n          <H1>{user.fullName}</H1>\r\n\r\n          {isUserOnline && auth.user.id !== user.id && <Online />}\r\n\r\n          {auth.user.id !== user.id && (\r\n            <FollowAndMessage>\r\n              <Follow user={user} />\r\n\r\n              <Spacing left=\"sm\" />\r\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>\r\n                Message\r\n              </Message>\r\n            </FollowAndMessage>\r\n          )}\r\n        </FullName>\r\n      </ProfileImage>\r\n\r\n      <Info>\r\n        <List>\r\n          <b>{user.posts.length} </b> posts\r\n        </List>\r\n        <List>\r\n          <b>{user.followers.length} </b> followers\r\n        </List>\r\n        <List>\r\n          <b>{user.following.length} </b> following\r\n        </List>\r\n      </Info>\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Query } from \"react-apollo\";\r\nimport { generatePath } from \"react-router-dom\";\r\n\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport Modal from \"../../components/common/Modal\";\r\nimport PostOverlay from \"../../components/post\";\r\nimport PostCard from \"../../components/postcard/PostCard\";\r\n\r\nimport { PROFILE_PAGE_POSTS_LIMIT } from \"../../constants/dataLimit\";\r\n\r\nimport { GET_USER_POSTS } from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\n/**\r\n * Renders posts in profile\r\n */\r\nconst ProfilePosts = ({ username }) => {\r\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\r\n  const [modalPostId, setModalPostId] = useState(\"\");\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n    setIsPostPopupOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState(\r\n      \"\",\r\n      \"\",\r\n      generatePath(Routes.USER_PROFILE, { username })\r\n    );\r\n    setIsPostPopupOpen(false);\r\n  };\r\n\r\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\r\n\r\n  return (\r\n    <Query\r\n      query={GET_USER_POSTS}\r\n      variables={variables}\r\n      notifyOnNetworkStatusChange\r\n    >\r\n      {({ data, loading, fetchMore, networkStatus }) => {\r\n        if (loading && networkStatus === 1) {\r\n          return (\r\n            <Skeleton\r\n              height={500}\r\n              bottom=\"lg\"\r\n              top=\"lg\"\r\n              count={PROFILE_PAGE_POSTS_LIMIT}\r\n            />\r\n          );\r\n        }\r\n\r\n        const { posts, count } = data.getUserPosts;\r\n\r\n        if (!posts.length > 0) {\r\n          return <Spacing bottom=\"lg\">{\"No posts yet.\"}</Spacing>;\r\n        }\r\n\r\n        return (\r\n          <InfiniteScroll\r\n            data={posts}\r\n            dataKey=\"getUserPosts.posts\"\r\n            count={parseInt(count)}\r\n            variables={variables}\r\n            fetchMore={fetchMore}\r\n          >\r\n            {(data) => {\r\n              return data.map((post, i) => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && data.length - 1 === i;\r\n\r\n                return (\r\n                  <Fragment key={post.id}>\r\n                    {modalPostId === post.id && (\r\n                      <Modal open={isPostPopupOpen} onClose={closeModal}>\r\n                        <PostOverlay id={post.id} closeModal={closeModal} />\r\n                      </Modal>\r\n                    )}\r\n\r\n                    <Spacing bottom=\"lg\">\r\n                      <PostCard\r\n                        author={post.author}\r\n                        postId={post.id}\r\n                        imagePublicId={post.imagePublicId}\r\n                        comments={post.comments}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        likes={post.likes}\r\n                        createdAt={post.createdAt}\r\n                        openModal={() => openModal(post.id)}\r\n                      />\r\n                    </Spacing>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              });\r\n            }}\r\n          </InfiniteScroll>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nProfilePosts.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfilePosts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Head from \"../../components/common/Head\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport { Container, Spacing } from \"../../components/common/Layout\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport CreatePost from \"../../components/CreatePost\";\r\nimport ProfilePosts from \"./ProfilePosts\";\r\n\r\nimport { GET_USER } from \"../../graphql/User\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * User Profile Page\r\n */\r\nconst Profile = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n  const { username } = match.params;\r\n\r\n  return (\r\n    <Root>\r\n      <Head title={username} />\r\n\r\n      <Query query={GET_USER} variables={{ username }}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) {\r\n            return (\r\n              <Container padding=\"xxs\">\r\n                <Skeleton height={350} />\r\n                <Container maxWidth=\"sm\">\r\n                  <Spacing top=\"lg\" bottom=\"lg\">\r\n                    <Skeleton height={82} />\r\n                  </Spacing>\r\n                </Container>\r\n              </Container>\r\n            );\r\n          }\r\n\r\n          if (error || !data.getUser) return \"Not Found\";\r\n\r\n          return (\r\n            <Container padding=\"xxs\">\r\n              <ProfileInfo user={data.getUser} />\r\n\r\n              <Container maxWidth=\"sm\">\r\n                <Spacing top=\"lg\" bottom=\"lg\">\r\n                  {username === auth.user.username && <CreatePost />}\r\n                </Spacing>\r\n\r\n                <ProfilePosts username={username} />\r\n              </Container>\r\n            </Container>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Content } from \"../../components/common/Layout\";\r\nimport PostOverlay from \"../../components/post\";\r\n\r\n/**\r\n * Post detail page\r\n */\r\nconst Post = ({ match }) => {\r\n  return (\r\n    <Content>\r\n      <PostOverlay usedInModal={false} id={match.params.id} />\r\n    </Content>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink, generatePath, withRouter } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { GET_CONVERSATIONS } from \"../../graphql/User\";\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from \"../../graphql/Message\";\r\n\r\nimport Search from \"../../components/app/Search\";\r\nimport { Icon } from \"../../components/common/Icon\";\r\nimport { LoadingDots } from \"../../components/common/Loading\";\r\nimport UserImage from \"../../components/common/UserImage\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  width: 80px;\r\n  height: 100%;\r\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    width: 330px;\r\n  }\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  height: 60px;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  margin: 0;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NewMessage = styled(NavLink)`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: none;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n  padding: 0 ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\r\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n\r\n  @media (max-width: ${(p) => p.theme.screen.lg}) {\r\n    ${(p) =>\r\n      !p.seen &&\r\n      `\r\n        background-color: ${p.theme.colors.primary.light};\r\n      `};\r\n  }\r\n\r\n  &.selected {\r\n    background-color: ${(p) => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  display: none;\r\n  padding: 0 ${(p) => p.theme.spacing.xs};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst FullNameUnSeen = styled.div`\r\n  width: 100%;\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst UnSeen = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.primary.light};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  color: ${(p) => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\n/**\r\n * Component that renders users, with whom auth user had a chat\r\n */\r\nconst MessagesUsers = ({ location, authUser }) => {\r\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\r\n    variables: { authUserId: authUser.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newConversation } = subscriptionData.data;\r\n        const oldConversations = prev.getConversations;\r\n\r\n        if (oldConversations.some((u) => u.id === newConversation.id)) {\r\n          return prev;\r\n        }\r\n\r\n        // Merge conversations\r\n        const conversations = newConversation;\r\n        delete conversations[\"receiverId\"];\r\n        const mergedConversations = [newConversation, ...oldConversations];\r\n\r\n        return { getConversations: mergedConversations };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  return (\r\n    <Root>\r\n      <HeadingContainer>\r\n        <Heading>Chats</Heading>\r\n\r\n        <NewMessage\r\n          exact\r\n          activeClassName=\"selected\"\r\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n        >\r\n          <Icon icon=\"user-edit\" />\r\n        </NewMessage>\r\n      </HeadingContainer>\r\n\r\n      <SearchContainer>\r\n        <Search\r\n          location={location}\r\n          backgroundColor=\"white\"\r\n          forMessage\r\n          placeholder=\"Search message\"\r\n        />\r\n      </SearchContainer>\r\n\r\n      {loading && <LoadingDots top=\"xl\" />}\r\n\r\n      {!loading && (\r\n        <UserContainer>\r\n          {data.getConversations.map((user) => {\r\n            const unseen = !user.lastMessageSender && !user.seen;\r\n\r\n            return (\r\n              <User\r\n                key={user.id}\r\n                activeClassName=\"selected\"\r\n                to={`/messages/${user.id}`}\r\n                seen={unseen ? 0 : 1}\r\n              >\r\n                <span>\r\n                  <UserImage image={user.image} size={50} />\r\n                </span>\r\n\r\n                <Info>\r\n                  <FullNameUnSeen>\r\n                    <FullName>{user.fullName}</FullName>\r\n\r\n                    {unseen && <UnSeen />}\r\n                  </FullNameUnSeen>\r\n\r\n                  <LastMessage>\r\n                    {user.lastMessageSender && \"You:\"} {user.lastMessage}\r\n                  </LastMessage>\r\n                </Info>\r\n              </User>\r\n            );\r\n          })}\r\n        </UserContainer>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesUsers.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(MessagesUsers);\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Button, Textarea } from \"../../components/common/Form\";\r\nimport { Icon } from \"../../components/common/Icon\";\r\nimport UserImage from \"../../components/common/UserImage\";\r\nimport { Spacing } from \"../../components/common/Layout\";\r\n\r\nimport { CREATE_MESSAGE } from \"../../graphql/Message\";\r\nimport { GET_CONVERSATIONS } from \"../../graphql/User\";\r\n\r\nimport { currentDate } from \"../../utils/time\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  overflow-y: auto;\r\n  height: 100vh;\r\n  margin-top: -120px;\r\n  padding-top: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${(p) => p.theme.colors.grey[500]};\r\n    border-radius: ${(p) => p.theme.radius.lg};\r\n    visibility: hidden;\r\n\r\n    &:hover {\r\n      background-color: ${(p) => p.theme.colors.grey[600]};\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    ::-webkit-scrollbar-thumb {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Conversation = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst MessageDate = styled.span`\r\n  position: absolute;\r\n  bottom: -${(p) => p.theme.spacing.sm};\r\n  left: ${(p) => !p.userMessage && p.theme.spacing.lg};\r\n  right: -${(p) => p.userMessage && 0};\r\n  display: none;\r\n  font-size: ${(p) => p.theme.font.size.tiny};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: ${(p) => p.userMessage && \"flex-end\"};\r\n  margin: ${(p) => p.theme.spacing.md} 0;\r\n\r\n  &:hover ${MessageDate} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  max-width: 300px;\r\n  line-height: 21px;\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  color: ${(p) => p.userMessage && p.theme.colors.white};\r\n  background-color: ${(p) =>\r\n    p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200]};\r\n`;\r\n\r\nconst Form = styled.form`\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: ${(p) => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  height: 38px;\r\n  border-radius: ${(p) => p.theme.radius.lg};\r\n  background-color: ${(p) => p.theme.colors.grey[200]};\r\n`;\r\n\r\nconst SendButton = styled(Button)`\r\n  margin-left: ${(p) => p.theme.spacing.sm};\r\n  align-self: center;\r\n`;\r\n\r\n/**\r\n * Component that renders messages conversations UI\r\n */\r\nconst MessagesChatConversation = ({\r\n  messages,\r\n  authUser,\r\n  chatUser,\r\n  data,\r\n  match,\r\n}) => {\r\n  const bottomRef = useRef(null);\r\n\r\n  const [messageText, setMessageText] = useState(\"\");\r\n\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n      bottomRef.current.scrollIntoView();\r\n    }\r\n  }, [bottomRef, data]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!messageText) return;\r\n\r\n    setMessageText(\"\");\r\n    createMessage({\r\n      variables: {\r\n        input: {\r\n          sender: authUser.id,\r\n          receiver: chatUser ? chatUser.id : null,\r\n          message: messageText,\r\n        },\r\n      },\r\n      refetchQueries: ({ data }) => {\r\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\r\n          return [\r\n            {\r\n              query: GET_CONVERSATIONS,\r\n              variables: { authUserId: authUser.id },\r\n            },\r\n          ];\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      sendMessage(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Conversation>\r\n        {messages.map((message) => {\r\n          const isAuthUserReceiver = authUser.id === message.sender.id;\r\n\r\n          return (\r\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\r\n              {!isAuthUserReceiver && (\r\n                <Spacing right=\"xs\">\r\n                  <UserImage image={message.sender.image} />\r\n                </Spacing>\r\n              )}\r\n\r\n              <Message userMessage={isAuthUserReceiver}>\r\n                {message.message}\r\n              </Message>\r\n\r\n              <MessageDate userMessage={isAuthUserReceiver}>\r\n                {currentDate(message.createdAt)}\r\n              </MessageDate>\r\n            </MessageWrapper>\r\n          );\r\n        })}\r\n        <div ref={bottomRef} />\r\n      </Conversation>\r\n\r\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\r\n        <Form onSubmit={sendMessage}>\r\n          <StyledTextarea\r\n            placeholder=\"Type a message\"\r\n            value={messageText}\r\n            onChange={(e) => setMessageText(e.target.value)}\r\n            onKeyDown={onEnterPress}\r\n          />\r\n\r\n          <SendButton type=\"submit\" ghost>\r\n            <Icon icon=\"paper-plan\" />\r\n          </SendButton>\r\n        </Form>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChatConversation.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n  data: PropTypes.any,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChatConversation;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generatePath, withRouter, Link } from \"react-router-dom\";\r\nimport { useSubscription } from \"@apollo/react-hooks\";\r\n\r\nimport Search from \"../../components/app/Search\";\r\nimport UserImage from \"../../components/common/UserImage\";\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 60px;\r\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\r\n  z-index: 1;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  color: ${(p) => p.theme.colors.text.secondary};\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\nconst To = styled.div`\r\n  margin-top: 1px;\r\n`;\r\n\r\nconst User = styled(Link)`\r\n  margin: 0 ${(p) => p.theme.spacing.xxs};\r\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\r\n  border-radius: ${(p) => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  padding-left: ${(p) => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  color: ${(p) => p.theme.colors.text.primary};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${(p) => p.theme.colors.success};\r\n  margin-left: ${(p) => p.theme.spacing.xs};\r\n  border-radius: 50%;\r\n`;\r\n\r\n/**\r\n * Heading component for messages chat\r\n */\r\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: {\r\n      authUserId: auth.user.id,\r\n      userId: chatUser ? chatUser.id : null,\r\n    },\r\n    skip: !chatUser,\r\n  });\r\n\r\n  // Update user's isOnline field in real time\r\n  if (!loading && data && chatUser) {\r\n    chatUser.isOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\r\n    return (\r\n      <Root>\r\n        <InputContainer>\r\n          <To>To:</To>\r\n          <Search\r\n            location={location}\r\n            backgroundColor=\"white\"\r\n            hideIcon\r\n            forMessage\r\n            placeholder=\"Type the name of a person\"\r\n            autoFocus\r\n          />\r\n        </InputContainer>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  if (chatUser) {\r\n    return (\r\n      <Root>\r\n        <User\r\n          to={generatePath(Routes.USER_PROFILE, {\r\n            username: chatUser.username,\r\n          })}\r\n        >\r\n          <UserImage image={chatUser.image} size={40} />\r\n\r\n          <Info>\r\n            <FullName>{chatUser.fullName}</FullName>\r\n\r\n            {chatUser.isOnline && <Online />}\r\n          </Info>\r\n        </User>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nMessagesChatHeading.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(MessagesChatHeading);\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery, useApolloClient } from \"@apollo/react-hooks\";\r\n\r\nimport { LoadingDots } from \"../../components/common/Loading\";\r\nimport MessagesChatConversation from \"./MessagesChatConversation\";\r\nimport MessagesChatHeading from \"./MessagesChatHeading\";\r\n\r\nimport {\r\n  GET_MESSAGES,\r\n  GET_MESSAGES_SUBSCRIPTION,\r\n  UPDATE_MESSAGE_SEEN,\r\n} from \"../../graphql/Message\";\r\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n/**\r\n * Messages chat wrapper\r\n */\r\nconst MessagesChat = ({ match, authUser }) => {\r\n  const { userId } = match.params;\r\n\r\n  const client = useApolloClient();\r\n\r\n  const { data, loading } = useQuery(GET_USER, {\r\n    variables: { id: userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n  });\r\n\r\n  const {\r\n    subscribeToMore,\r\n    data: messages,\r\n    loading: messagesLoading,\r\n  } = useQuery(GET_MESSAGES, {\r\n    variables: { authUserId: authUser.id, userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const updateMessageSeen = useCallback(async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPDATE_MESSAGE_SEEN,\r\n        variables: {\r\n          input: {\r\n            receiver: authUser.id,\r\n            sender: userId,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_CONVERSATIONS,\r\n            variables: { authUserId: authUser.id },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n  }, [authUser.id, client, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_MESSAGES_SUBSCRIPTION,\r\n      variables: { authUserId: authUser.id, userId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        updateMessageSeen();\r\n\r\n        const newMessage = subscriptionData.data.messageCreated;\r\n        const mergedMessages = [...prev.getMessages, newMessage];\r\n\r\n        return { getMessages: mergedMessages };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\r\n\r\n  useEffect(() => {\r\n    if (userId !== Routes.NEW_ID_VALUE) {\r\n      updateMessageSeen();\r\n    }\r\n  }, [userId, updateMessageSeen]);\r\n\r\n  if (loading || messagesLoading) {\r\n    return (\r\n      <Root>\r\n        <LoadingDots />\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  let chatUser = null;\r\n  if (data && data.getUser) {\r\n    chatUser = data.getUser;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesChatHeading match={match} chatUser={chatUser} />\r\n\r\n      <MessagesChatConversation\r\n        authUser={authUser}\r\n        messages={messages ? messages.getMessages : []}\r\n        chatUser={chatUser}\r\n        data={messages}\r\n        match={match}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChat.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport { HEADER_HEIGHT } from \"../../constants/size\";\r\n\r\nimport MessagesUsers from \"./MessagesUsers\";\r\nimport MessagesChat from \"./MessagesChat\";\r\n\r\nconst Root = styled.div`\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  position: relative;\r\n  margin-top: -${HEADER_HEIGHT}px;\r\n  padding-top: ${HEADER_HEIGHT}px;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    border-left: 1px solid ${(p) => p.theme.colors.border.main};\r\n    border-right: 1px solid ${(p) => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Messages page\r\n */\r\nconst Messages = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesUsers authUser={auth.user} match={match} />\r\n\r\n      <MessagesChat match={match} authUser={auth.user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\n\r\nimport { Anchor } from \"../../components/common/Text\";\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport Follow from \"../../components/common/Follow\";\r\nimport theme from \"../../utils/theme\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 280px;\r\n  background-color: white;\r\n  padding: ${(p) => p.theme.spacing.sm};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n  transition: border-color 0.1s;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InitialLetters = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-transform: uppercase;\r\n  color: ${(p) => p.theme.colors.white};\r\n  font-size: ${(p) => p.theme.font.size.lg};\r\n  background-color: ${(p) => p.color};\r\n`;\r\n\r\nconst FullName = styled.span`\r\n  max-width: 200px;\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n`;\r\n\r\n/**\r\n * Card component for rendering user info, meant to be used in Peoples page\r\n */\r\nconst PeopleCard = ({ user }) => {\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const { fullName, username, image } = user;\r\n\r\n  useEffect(() => {\r\n    const { primary, secondary, success, error } = theme.colors;\r\n    const colors = [primary.main, secondary.main, success, error.main];\r\n    const randomColor = Math.floor(Math.random() * colors.length);\r\n    setColor(colors[randomColor]);\r\n  }, []);\r\n\r\n  const splitFullName = () => {\r\n    // If a fullName contains more word than two, take first two word\r\n    const splitWords = fullName.split(\" \").slice(0, 2).join(\" \");\r\n\r\n    // Take only first letters from split words\r\n    const firstLetters = splitWords\r\n      .split(\" \")\r\n      .map((a) => a.charAt(0))\r\n      .join(\" \");\r\n\r\n    return firstLetters;\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Anchor to={generatePath(Routes.USER_PROFILE, { username })}>\r\n        <ImageContainer>\r\n          {image ? (\r\n            <Image src={image} />\r\n          ) : (\r\n            <InitialLetters color={color}>{splitFullName()}</InitialLetters>\r\n          )}\r\n        </ImageContainer>\r\n      </Anchor>\r\n\r\n      <Spacing top=\"sm\" bottom=\"xs\">\r\n        <Anchor to={generatePath(Routes.USER_PROFILE, { username })}>\r\n          <FullName>{fullName}</FullName>\r\n        </Anchor>\r\n      </Spacing>\r\n\r\n      <UserName>@{username}</UserName>\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <Follow user={user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nPeopleCard.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PeopleCard;\r\n","import React, { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Container } from \"../../components/common/Layout\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\r\nimport Head from \"../../components/common/Head\";\r\nimport PeopleCard from \"./PeopleCard\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { GET_USERS } from \"../../graphql/User\";\r\n\r\nimport { PEOPLE_PAGE_USERS_LIMIT } from \"../../constants/dataLimit\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n  margin-bottom: ${(p) => p.theme.spacing.lg};\r\n`;\r\n\r\n/**\r\n * People page\r\n */\r\nconst People = () => {\r\n  const [{ auth }] = useStore();\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: PEOPLE_PAGE_USERS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Find new People\" />\r\n\r\n      <Query\r\n        query={GET_USERS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <PeopleContainer>\r\n                <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\r\n              </PeopleContainer>\r\n            );\r\n          }\r\n\r\n          const { users, count } = data.getUsers;\r\n\r\n          if (!users.length > 0) return \"No people yet.\";\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={users}\r\n              dataKey=\"getUsers.users\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {(data) => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    <PeopleContainer>\r\n                      {data.map((user) => (\r\n                        <PeopleCard key={user.id} user={user} />\r\n                      ))}\r\n                    </PeopleContainer>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Container, Content } from \"../../components/common/Layout\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport Notification from \"../../components/app/Notification\";\r\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport { GET_USER_NOTIFICATION } from \"../../graphql/Notification\";\r\n\r\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from \"../../constants/dataLimit\";\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n`;\r\n\r\nconst List = styled.div`\r\n  overflow: hidden;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  border: 1px solid ${(p) => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Notifications page\r\n */\r\nconst Notifications = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Root maxWidth=\"md\">\r\n        <Head title={`${auth.user.username}'s Notifications`} />\r\n\r\n        <Query\r\n          query={GET_USER_NOTIFICATION}\r\n          variables={variables}\r\n          notifyOnNetworkStatusChange\r\n        >\r\n          {({ data, loading, fetchMore, networkStatus }) => {\r\n            if (loading && networkStatus === 1) {\r\n              return (\r\n                <Skeleton\r\n                  height={56}\r\n                  bottom=\"xxs\"\r\n                  count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT}\r\n                />\r\n              );\r\n            }\r\n\r\n            const { notifications, count } = data.getUserNotifications;\r\n\r\n            if (!notifications.length) {\r\n              return \"no notification yet\";\r\n            }\r\n\r\n            return (\r\n              <InfiniteScroll\r\n                data={notifications}\r\n                dataKey=\"getUserNotifications.notifications\"\r\n                count={parseInt(count)}\r\n                variables={variables}\r\n                fetchMore={fetchMore}\r\n              >\r\n                {(data) => {\r\n                  const showNextLoading =\r\n                    loading && networkStatus === 3 && count !== data.length;\r\n\r\n                  return (\r\n                    <>\r\n                      <List>\r\n                        {data.map((notification) => (\r\n                          <Notification\r\n                            key={notification.id}\r\n                            notification={notification}\r\n                            close={() => false}\r\n                          />\r\n                        ))}\r\n                      </List>\r\n\r\n                      {showNextLoading && <Loading top=\"lg\" />}\r\n                    </>\r\n                  );\r\n                }}\r\n              </InfiniteScroll>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Root>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport { Icon } from \"../../components/common/Icon\";\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  opacity: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.3s, visibility 0.3s;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  cursor: pointer;\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  overflow: hidden;\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-color: ${(p) => p.theme.colors.grey[300]};\r\n`;\r\n\r\n/**\r\n * Card component, meant to be used in Explore page\r\n */\r\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const img = new Image();\r\n    img.src = image;\r\n\r\n    img.onload = () => {\r\n      setImageLoaded(true);\r\n    };\r\n\r\n    return () => {\r\n      img.onload = null;\r\n    };\r\n  }, [image]);\r\n\r\n  return (\r\n    <Root>\r\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\r\n\r\n      <Overlay onClick={openPostPopup}>\r\n        <Icon icon=\"thumbs-up\" />\r\n\r\n        <Spacing left=\"xs\" right=\"lg\">\r\n          {countLikes}\r\n        </Spacing>\r\n\r\n        <Icon icon=\"comment\" />\r\n\r\n        <Spacing left=\"xs\">{countComments}</Spacing>\r\n      </Overlay>\r\n    </Root>\r\n  );\r\n};\r\n\r\nExploreCard.propTypes = {\r\n  openPostPopup: PropTypes.func.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  countLikes: PropTypes.number.isRequired,\r\n  countComments: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExploreCard;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { generatePath } from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Container } from \"../../components/common/Layout\";\r\nimport SearchCard from \"./SearchCard\";\r\nimport Skeleton from \"../../components/common/Skeleton\";\r\nimport PostOverlay from \"../../components/post\";\r\nimport Modal from \"../../components/common/Modal\";\r\nimport InfiniteScroll from \"../../components/common/InfiniteScroll\";\r\nimport { Loading } from \"../../components/common/Loading\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport { GET_POSTS } from \"../../graphql/Post\";\r\n\r\nimport { EXPLORE_PAGE_POSTS_LIMIT } from \"../../constants/size\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nimport * as Routes from \"../../routes\";\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${(p) => p.theme.spacing.lg};\r\n  margin-bottom: ${(p) => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\r\n    margin-left: ${(p) => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PostsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n`;\r\n\r\n/**\r\n * Explore page\r\n */\r\nconst Explore = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState(\"\", \"\", \"/explore\");\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = (postId) => {\r\n    window.history.pushState(\"\", \"\", generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const variables = {\r\n    authUserId: auth.user.id,\r\n    skip: 0,\r\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Explore New Posts and Users\" />\r\n\r\n      <Query\r\n        query={GET_POSTS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <PostsContainer>\r\n                <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\r\n              </PostsContainer>\r\n            );\r\n          }\r\n\r\n          const { posts, count } = data.getPosts;\r\n\r\n          if (!posts.length > 0) return \"No posts yet.\";\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={posts}\r\n              dataKey=\"getPosts.posts\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {(data) => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    <PostsContainer>\r\n                      {data.map((post) => (\r\n                        <Fragment key={post.id}>\r\n                          <Modal\r\n                            open={modalPostId === post.id}\r\n                            onClose={closeModal}\r\n                          >\r\n                            <PostOverlay id={post.id} closeModal={closeModal} />\r\n                          </Modal>\r\n\r\n                          <SearchCard\r\n                            image={post.image}\r\n                            countLikes={post.likes.length}\r\n                            countComments={post.comments.length}\r\n                            openPostPopup={() => openModal(post.id)}\r\n                          />\r\n                        </Fragment>\r\n                      ))}\r\n                    </PostsContainer>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Header from \"../components/app/Header\";\r\nimport SideBar from \"../components/app/SideBar\";\r\n//import UserSuggestions from \"./UserSuggestions\";\r\n\r\nimport Home from \"../pages/Home\";\r\nimport Profile from \"../pages/Profile\";\r\nimport Post from \"../pages/Posts\";\r\nimport Messages from \"../pages/Messages\";\r\nimport People from \"../pages/People\";\r\nimport Notifications from \"../pages/Notifications\";\r\nimport Search from \"../pages/Search\";\r\n\r\nimport { useWindowSize } from \"../components/hooks/useWindowSize\";\r\nimport { useClickOutside } from \"../components/hooks/useClickOutside\";\r\n\r\nimport * as Routes from \"../routes\";\r\n\r\nimport theme from \"../utils/theme\";\r\n\r\nimport { useStore } from \"../store\";\r\nimport { SET_AUTH_USER } from \"../constants/actions\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  position: relative;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    width: ${(p) => p.theme.screen.md};\r\n  }\r\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + \"px\"}) {\r\n    width: ${(p) => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Main layout of the app, when user is authenticated\r\n */\r\nconst ApplicationLayout = ({ location, authUser }) => {\r\n  const [{ auth }, dispatch] = useStore();\r\n\r\n  const windowSize = useWindowSize();\r\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\r\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\r\n\r\n  const sideBarRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\r\n  }, [dispatch, authUser]);\r\n\r\n  useClickOutside(sideBarRef, () => {\r\n    if (!isDesktop && isSideBarOpen) {\r\n      setIsSidebarOpen(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsSidebarOpen(isDesktop);\r\n  }, [isDesktop]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isDesktop) {\r\n        setIsSidebarOpen(false);\r\n      }\r\n    };\r\n  }, [location.pathname, isDesktop]);\r\n\r\n  if (!auth.user) return null;\r\n\r\n  return (\r\n    <>\r\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\r\n\r\n      <Root>\r\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\r\n\r\n        <Switch>\r\n          <Route exact path={Routes.HOME} component={Home} />\r\n\r\n          <Route exact path={Routes.SEARCH} component={Search} />\r\n\r\n          <Route exact path={Routes.PEOPLE} component={People} />\r\n\r\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\r\n\r\n          <Route exact path={Routes.MESSAGES} component={Messages} />\r\n\r\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\r\n\r\n          <Route exact path={Routes.POST} component={Post} />\r\n        </Switch>\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nApplicationLayout.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(ApplicationLayout);\r\n","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * React hook for detecting window resizing\n */\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => {\n      return {\n        width: isClient ? window.innerWidth : undefined,\n        height: isClient ? window.innerHeight : undefined,\n      };\n    },\n    [isClient]\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(\n    () => {\n      if (!isClient) {\n        return false;\n      }\n\n      function handleResize() {\n        setWindowSize(getSize());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    },\n    [getSize, isClient]\n  );\n\n  return windowSize;\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Anchor, Error } from \"../../components/common/Text\";\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport { InputText, Button } from \"../../components/common/Form\";\r\n\r\nimport { SIGN_IN } from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: space-between;\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  margin-top: ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst InputContainer = styled(Spacing)`\r\n  width: 100%;\r\n  margin-right: 24px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  position: absolute;\r\n  top: 1px;\r\n`;\r\n\r\nconst ForgetPassword = styled.div`\r\n  font-size: ${(p) => p.theme.font.size.xxs};\r\n  margin-top: ${(p) => p.theme.spacing.xxs};\r\n  color: ${(p) => p.theme.colors.white};\r\n`;\r\n\r\n/**\r\n * Sign In page\r\n */\r\nconst SignIn = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ emailOrUsername: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setError(\"\");\r\n  }, [location.pathname]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e, signin) => {\r\n    e.preventDefault();\r\n\r\n    if (!emailOrUsername || !password) {\r\n      setError(\"All fields are required\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    signin().then(async ({ data }) => {\r\n      localStorage.setItem(\"token\", data.signin.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    });\r\n  };\r\n\r\n  const renderErrors = (apiError) => {\r\n    let errorMessage;\r\n\r\n    if (error) {\r\n      errorMessage = error;\r\n    } else if (apiError) {\r\n      errorMessage = apiError.graphQLErrors[0].message;\r\n    }\r\n\r\n    if (errorMessage) {\r\n      return (\r\n        <ErrorMessage>\r\n          <Error size=\"xxs\" color=\"white\">\r\n            {errorMessage}\r\n          </Error>\r\n        </ErrorMessage>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const { emailOrUsername, password } = values;\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={SIGN_IN}\r\n      variables={{ input: { emailOrUsername, password } }}\r\n    >\r\n      {(signin, { loading, error: apiError }) => (\r\n        <form onSubmit={(e) => handleSubmit(e, signin)}>\r\n          <Root>\r\n            <InputContainer>\r\n              {renderErrors(apiError)}\r\n\r\n              <InputText\r\n                autoFocus\r\n                type=\"text\"\r\n                name=\"emailOrUsername\"\r\n                values={emailOrUsername}\r\n                onChange={handleChange}\r\n                placeholder=\"Email or Username\"\r\n                borderColor=\"white\"\r\n              />\r\n            </InputContainer>\r\n\r\n            <InputContainer left=\"xs\" right=\"xs\">\r\n              <InputText\r\n                type=\"password\"\r\n                name=\"password\"\r\n                values={password}\r\n                onChange={handleChange}\r\n                placeholder=\"Password\"\r\n                borderColor=\"white\"\r\n              />\r\n              <Anchor to={Routes.FORGET_PASSWORD}>\r\n                <ForgetPassword>Forgot password?</ForgetPassword>\r\n              </Anchor>\r\n            </InputContainer>\r\n\r\n            <Button disabled={loading}>Log in</Button>\r\n          </Root>\r\n        </form>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nimport { Container } from \"../../components/common/Layout\";\r\nimport { Anchor } from \"../../components/common/Text\";\r\nimport SignIn from \"./SignIn\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 80px;\r\n  background-color: transparent;\r\n`;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(Anchor)`\r\n  display: none;\r\n  color: ${(p) => p.theme.colors.white};\r\n  font-size: ${(p) => p.theme.font.size.sm};\r\n  font-weight: ${(p) => p.theme.font.weight.bold};\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.white};\r\n  }\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SignInContainer = styled.div`\r\n  width: 600px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user isn't authenticated\r\n */\r\nconst Header = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <StyledContainer maxWidth=\"lg\">\r\n        <Logo to={Routes.HOME}>{process.env.REACT_APP_SITE_NAME}</Logo>\r\n\r\n        <SignInContainer>\r\n          <SignIn refetch={refetch} />\r\n        </SignInContainer>\r\n      </StyledContainer>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","export const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nimport { Spacing, Container } from \"../../components/common/Layout\";\r\nimport { H1, H3, Error } from \"../../components/common/Text\";\r\nimport { InputText, SecondaryButton } from \"../../components/common/Form\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport { emailRegex, usernameRegex } from \"../../constants/regex\";\r\n\r\nimport { SIGN_UP } from \"../../graphql/User/index\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nconst Root = styled(Container)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 60px;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.div`\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  width: 100%;\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign Up page\r\n */\r\nconst SignUp = ({ history, refetch }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [values, setValues] = useState({\r\n    fullName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (!fullName || !email || !username || !password) {\r\n      return \"All fields are required\";\r\n    }\r\n\r\n    if (fullName.length > 50) {\r\n      return \"Full name no more than 50 characters\";\r\n    }\r\n\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      return \"Enter a valid email address.\";\r\n    }\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      return \"Usernames can only use letters, numbers, underscores and periods\";\r\n    } else if (username.length > 20) {\r\n      return \"Username no more than 50 characters\";\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return \"Password min 6 characters\";\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = (e, signup) => {\r\n    e.preventDefault();\r\n    const error = validate();\r\n    if (error) {\r\n      setError(error);\r\n      return false;\r\n    }\r\n\r\n    signup().then(async ({ data }) => {\r\n      localStorage.setItem(\"token\", data.signup.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    });\r\n  };\r\n\r\n  const renderErrors = (apiError) => {\r\n    let errorMessage;\r\n\r\n    if (error) {\r\n      errorMessage = error;\r\n    } else if (apiError) {\r\n      errorMessage =\r\n        apiError &&\r\n        apiError.graphQLErrors[0] &&\r\n        apiError.graphQLErrors[0].message;\r\n    }\r\n\r\n    if (errorMessage) {\r\n      return (\r\n        <Spacing bottom=\"sm\" top=\"sm\">\r\n          <Error>{errorMessage}</Error>\r\n        </Spacing>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const { fullName, email, password, username } = values;\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={SIGN_UP}\r\n      variables={{ input: { fullName, email, password, username } }}\r\n    >\r\n      {(signup, { loading, error: apiError }) => {\r\n        return (\r\n          <Root maxWidth=\"lg\">\r\n            <Head />\r\n            <Form>\r\n              <Spacing bottom=\"md\">\r\n                <H1>Create an Account</H1>\r\n                <H3>Its quick and easy</H3>\r\n              </Spacing>\r\n\r\n              <form onSubmit={(e) => handleSubmit(e, signup)}>\r\n                <InputText\r\n                  type=\"text\"\r\n                  name=\"fullName\"\r\n                  values={fullName}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Full name\"\r\n                  borderColor=\"white\"\r\n                />\r\n                <Spacing top=\"xs\" bottom=\"xs\">\r\n                  <InputText\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    values={email}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Email\"\r\n                    borderColor=\"white\"\r\n                  />\r\n                </Spacing>\r\n                <InputText\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  values={username}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Username\"\r\n                  borderColor=\"white\"\r\n                />\r\n                <Spacing top=\"xs\" bottom=\"xs\">\r\n                  <InputText\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    values={password}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Password\"\r\n                    borderColor=\"white\"\r\n                  />\r\n                </Spacing>\r\n\r\n                {renderErrors(apiError)}\r\n\r\n                <Spacing top=\"sm\" />\r\n                <SecondaryButton size=\"large\" disabled={loading}>\r\n                  Sign up\r\n                </SecondaryButton>\r\n              </form>\r\n            </Form>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport { H1, Anchor, Error } from \"../../components/common/Text\";\r\nimport { InputText, Button } from \"../../components/common/Form\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport { REQUEST_PASSWORD_RESET } from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 450px;\r\n  margin: 0 auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  width: 100%;\r\n  margin-top: 80px;\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: ${(p) => p.theme.font.size.xs};\r\n  line-height: 22px;\r\n`;\r\n\r\n/**\r\n * Forgot password page\r\n */\r\nconst ForgetPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e, requestResetPassword) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      setError(\"Enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setEmail(\"\");\r\n    requestResetPassword().then(async ({ data }) => {\r\n      setMessage(data.requestPasswordReset.message);\r\n    });\r\n  };\r\n\r\n  if (message) {\r\n    return (\r\n      <Root>\r\n        <Container>\r\n          <Spacing bottom=\"sm\">\r\n            <H1>{message}</H1>\r\n          </Spacing>\r\n        </Container>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={REQUEST_PASSWORD_RESET}\r\n      variables={{ input: { email } }}\r\n    >\r\n      {(requestResetPassword, { data, loading, error: apiError }) => (\r\n        <Root>\r\n          <Head title=\"Forgot Password\" />\r\n\r\n          <Container>\r\n            <Spacing bottom=\"sm\">\r\n              <H1>Reset Password</H1>\r\n              <Text>\r\n                Enter the email address associated with your account, and we’ll\r\n                email you a link to reset your password.\r\n              </Text>\r\n            </Spacing>\r\n\r\n            <form onSubmit={(e) => handleSubmit(e, requestResetPassword)}>\r\n              <InputText\r\n                type=\"text\"\r\n                name=\"email\"\r\n                values={email}\r\n                onChange={handleEmailChange}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              {error && (\r\n                <Spacing bottom=\"sm\" top=\"sm\">\r\n                  <Error>{error}</Error>\r\n                </Spacing>\r\n              )}\r\n\r\n              {apiError && (\r\n                <Spacing bottom=\"sm\" top=\"sm\">\r\n                  <Error>\r\n                    {apiError.graphQLErrors.map((e) => (\r\n                      <div key={e.message}>{e.message}</div>\r\n                    ))}\r\n                  </Error>\r\n                </Spacing>\r\n              )}\r\n\r\n              <Spacing top=\"xs\" />\r\n\r\n              <Button disabled={loading}>Send reset link</Button>\r\n\r\n              <Spacing top=\"sm\">\r\n                <Anchor to={Routes.HOME}>&larr; Back to Sign Up</Anchor>\r\n              </Spacing>\r\n            </form>\r\n          </Container>\r\n        </Root>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nForgetPassword.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, Mutation } from \"react-apollo\";\r\n\r\nimport { Spacing } from \"../../components/common/Layout\";\r\nimport { H1, Error } from \"../../components/common/Text\";\r\nimport { InputText, Button } from \"../../components/common/Form\";\r\nimport Head from \"../../components/common/Head\";\r\n\r\nimport {\r\n  VERIFY_RESET_PASSWORD_TOKEN,\r\n  RESET_PASSWORD,\r\n} from \"../../graphql/User\";\r\n\r\nimport * as Routes from \"../../routes/index\";\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${(p) => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  padding: ${(p) => p.theme.spacing.md};\r\n  border-radius: ${(p) => p.theme.radius.sm};\r\n  margin-top: 80px;\r\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password page\r\n */\r\nconst ResetPassword = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ password: \"\", confirmPassword: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e, resetPassword) => {\r\n    e.preventDefault();\r\n\r\n    if (!password || !confirmPassword) {\r\n      setError(\"Enter password and Confirm password.\");\r\n      return;\r\n    } else if (password.length < 6) {\r\n      setError(\"Password min 6 characters\");\r\n      return;\r\n    } else if (password !== confirmPassword) {\r\n      setError(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    resetPassword()\r\n      .then(async ({ data }) => {\r\n        localStorage.setItem(\"token\", data.resetPassword.token);\r\n        await refetch();\r\n        history.push(Routes.HOME);\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      });\r\n  };\r\n\r\n  const { password, confirmPassword } = values;\r\n\r\n  const url = new URLSearchParams(location.search);\r\n  const email = url.get(\"email\");\r\n  const token = url.get(\"token\");\r\n\r\n  return (\r\n    <Root>\r\n      <Head title=\"Reset Password\" />\r\n\r\n      <Container>\r\n        <Query query={VERIFY_RESET_PASSWORD_TOKEN} variables={{ email, token }}>\r\n          {({ loading, error: apiError }) => {\r\n            if (apiError)\r\n              return <H1>This token is either invalid or expired!</H1>;\r\n\r\n            return (\r\n              <Mutation\r\n                mutation={RESET_PASSWORD}\r\n                variables={{ input: { email, password, token } }}\r\n              >\r\n                {(resetPassword, { loading, error: apiError }) => {\r\n                  if (apiError) return <H1>{apiError}</H1>;\r\n\r\n                  return (\r\n                    <>\r\n                      <Spacing bottom=\"md\">\r\n                        <H1>Password Reset</H1>\r\n                      </Spacing>\r\n\r\n                      <form onSubmit={(e) => handleSubmit(e, resetPassword)}>\r\n                        <InputText\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          values={password}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Password\"\r\n                        />\r\n\r\n                        <Spacing top=\"xs\" bottom=\"sm\">\r\n                          <InputText\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            values={confirmPassword}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Confirm Password\"\r\n                          />\r\n                        </Spacing>\r\n\r\n                        {error && (\r\n                          <Spacing bottom=\"sm\" top=\"sm\">\r\n                            <Error>{error}</Error>\r\n                          </Spacing>\r\n                        )}\r\n\r\n                        <Button disabled={loading}>Reset Password</Button>\r\n                      </form>\r\n                    </>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nResetPassword.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n","export default __webpack_public_path__ + \"static/media/auth-bg.e1d81745.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Header,\r\n  SignUp,\r\n  ForgetPassword,\r\n  ResetPassword,\r\n} from \"../pages/Auth/index\";\r\n\r\nimport { HOME, FORGET_PASSWORD, RESET_PASSWORD } from \"../routes/index\";\r\n\r\nimport { Overlay } from \"../components/common/Layout\";\r\n\r\nimport bgImage from \"../static/images/auth-bg.jpg\";\r\n\r\nconst Root = styled.div`\r\n  background: url(${bgImage}) no-repeat top / cover;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: ${(p) => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Pages = styled.div`\r\n  margin-top: 80px;\r\n  @media (min-width: ${(p) => p.theme.screen.md}) {\r\n    margin-top: -120px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main Layout for the app, when user isn't authenticated\r\n */\r\nconst AuthenticationLayout = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <Overlay transparency=\"0.5\" />\r\n\r\n      <Container>\r\n        <Header refetch={refetch} />\r\n\r\n        <Pages>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={HOME}\r\n              render={() => <SignUp refetch={refetch} />}\r\n            />\r\n            <Route exact path={FORGET_PASSWORD} component={ForgetPassword} />\r\n            <Route\r\n              exact\r\n              path={RESET_PASSWORD}\r\n              render={() => <ResetPassword refetch={refetch} />}\r\n            />\r\n            <Redirect to={HOME} />\r\n          </Switch>\r\n        </Pages>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nAuthenticationLayout.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AuthenticationLayout;\r\n","import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { GET_AUTH_USER } from \"../../graphql/User/index\";\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from \"../../graphql/Message/index\";\r\nimport { NOTIFICATION_CREATED_OR_DELETED } from \"../../graphql/Notification/index\";\r\n\r\nimport Message from \"../Message\";\r\nimport { Loading } from \"../common/Loading\";\r\nimport ApplicationLayout from \"../../layouts/ApplicationLayout\";\r\nimport AuthenticationLayout from \"../../layouts/AuthenticationLayout\";\r\n\r\nimport { useStore } from \"../../store\";\r\n\r\nconst App = () => {\r\n  const [{ message }] = useStore();\r\n\r\n  const { loading, subscribeToMore, data, refetch } = useQuery(GET_AUTH_USER);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: NOTIFICATION_CREATED_OR_DELETED,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldNotifications = prev.getAuthUser.newNotifications;\r\n        const {\r\n          operation,\r\n          notification,\r\n        } = subscriptionData.data.notificationCreatedOrDeleted;\r\n\r\n        let newNotifications;\r\n\r\n        if (operation === \"CREATE\") {\r\n          // Don't show message notification in Header if user already is on notifications page\r\n          if (window.location.href.split(\"/\")[3] === \"notifications\") {\r\n            return prev;\r\n          }\r\n\r\n          // Add new notification\r\n          newNotifications = [notification, ...oldNotifications];\r\n        } else {\r\n          // Remove from notifications\r\n          const notifications = oldNotifications;\r\n          const index = notifications.findIndex(\r\n            (n) => n.id === notification.id\r\n          );\r\n          if (index > -1) {\r\n            notifications.splice(index, 1);\r\n          }\r\n\r\n          newNotifications = notifications;\r\n        }\r\n\r\n        // Attach new notifications to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newNotifications = newNotifications;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldConversations = prev.getAuthUser.newConversations;\r\n        const { newConversation } = subscriptionData.data;\r\n\r\n        // Don't show message notification in Header if user already is on messages page\r\n        if (window.location.href.split(\"/\")[3] === \"messages\") {\r\n          return prev;\r\n        }\r\n\r\n        // If authUser already has unseen message from that user,\r\n        // remove old message, so we can show the new one\r\n        const index = oldConversations.findIndex(\r\n          (u) => u.id === newConversation.id\r\n        );\r\n        if (index > -1) {\r\n          oldConversations.splice(index, 1);\r\n        }\r\n\r\n        // Merge conversations\r\n        const mergeConversations = [newConversation, ...oldConversations];\r\n\r\n        // Attach new conversation to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newConversations = mergeConversations;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  if (loading) return <Loading top=\"xl\" />;\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {data && data.getAuthUser ? (\r\n          <Route\r\n            exact\r\n            render={() => <ApplicationLayout authUser={data.getAuthUser} />}\r\n          />\r\n        ) : (\r\n          <Route\r\n            exact\r\n            render={() => <AuthenticationLayout refetch={refetch} />}\r\n          />\r\n        )}\r\n      </Switch>\r\n      {message.content.text && (\r\n        <Message\r\n          type={message.content.type}\r\n          autoClose={message.content.autoClose}\r\n        >\r\n          {message.content.text}\r\n        </Message>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import dotenv from \"dotenv\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { ApolloProvider as ApolloHooksProvider } from \"@apollo/react-hooks\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport initApolloClient from \"./apollo/initApolloClient\";\r\nimport { AppStoreProvider } from \"./store\";\r\nimport App from \"./components/app/App\";\r\nimport theme from \"../src/utils/theme\";\r\n//import \"./styles/index.scss\";\r\nconsole.log(\"process env\", process.env);\r\nconsole.log(\"server url\", process.env.SERVER_URL);\r\nconst SERVER_URL = \"http://localhost:4000/graphql\";\r\n\r\ndotenv.config();\r\nconst serverUrl = process.env.REACT_APP_API_URL || SERVER_URL;\r\nconst client = initApolloClient(serverUrl);\r\n\r\nrender(\r\n  <ApolloProvider client={client}>\r\n    <ApolloHooksProvider client={client}>\r\n      <ThemeProvider theme={theme}>\r\n        <AppStoreProvider>\r\n          <App />\r\n        </AppStoreProvider>\r\n      </ThemeProvider>\r\n    </ApolloHooksProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}